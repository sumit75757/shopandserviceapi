{"version":3,"sources":["webpack:///node_modules/amazing-time-picker/amazing-time-picker.js"],"names":["_c0","a0","_c1","a1","a2","a3","top","left","color","background","TimePickerComponent_button_17_Template","rf","ctx","clock_r178","$implicit","ctx_r177","nowTime","time","config","arrowStyle","GetClockTime","_c2","_c3","_c4","_c5","_c6","AtpCoreService","min","max","allTimes","nowMinHour","split","nowMaxHour","nowMinMin","nowMaxMin","i","j","jDest","hour","minute","ampm","push","type","items","timeVal","timeStep","timeStart","r","str","String","x","Math","sin","PI","y","cos","hh","mm","h","m","ele","parrentPos","step","clock","width","currentTarget","offsetWidth","height","offsetHeight","targetX","targetY","Vx","round","clientX","Vy","clientY","radians","atan2","degrees","degMod","ɵfac","AtpCoreService_Factory","t","ɵprov","token","factory","ctorParameters","TimePickerComponent","core$$1","core","subject","activeModal","clockType","isPopup","animationTime","clockMaker","clockObject","ClockMaker","setArrow","setActiveTime","obj","rotationClass","degree","getDegree","getBoundingClientRect","isClicked","target","nodeName","CalcDegrees","rangeTime","start","end","GetNowTime","allowed","indexOf","undefined","StringToTime","TimeToString","next","changeToMinutes","onlyHour","ChangeAnimational","Hour","ParseStringToTime","setTimeout","allowedTimes","onlyMinute","onlyPM","onlyAM","modalAnimation","animation","changeToMin","checkBet","e","appRef","detachView","_ref","hostView","destroy","transform","getAnimationTime","transition","event","targetDegree","targetDegree2","diff1","abs","diff2","preference","separator","period","toString","clockHour","clockMinute","key","defaults","labels","ok","cancel","TimePickerComponent_Factory","ɵcmp","selectors","decls","vars","consts","template","TimePickerComponent_Template","TimePickerComponent_Template_div_click_0_listener","$event","Close","TimePickerComponent_Template_div_click_4_listener","HourClick","TimePickerComponent_Template_div_click_8_listener","MinuteClick","TimePickerComponent_Template_div_click_11_listener","SetAM","TimePickerComponent_Template_div_click_13_listener","SetPM","TimePickerComponent_Template_div_mousemove_16_listener","TimePickerComponent_Template_div_mousedown_16_listener","updateClockDown","TimePickerComponent_Template_div_mouseup_16_listener","setTime","TimePickerComponent_Template_button_click_22_listener","TimePickerComponent_Template_button_click_24_listener","GetTime","theme","GetHour","GetSeparator","GetMinute","GetPeriod","getClockArrowStyle","GetLabel","directives","styles","args","selector","commonjsGlobal","window","global","self","createCommonjsModule","fn","module","exports","__window","__self","WorkerGlobalScope","__global","_root","root_1","Error","root","isFunction","isFunction_2","isFunction_1","isArray_1","Array","isArray","length","isObject","isObject_2","isObject_1","errorObject_1","errorObject","tryCatchTarget","tryCatcher","apply","arguments","tryCatch","tryCatch_2","tryCatch_1","__extends$2","__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","UnsubscriptionError$1","_super","UnsubscriptionError","errors","call","err","map","join","name","stack","message","UnsubscriptionError_2","UnsubscriptionError_1","Subscription$1","Subscription","unsubscribe","closed","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","_a","index","len","remove","trial","flattenUnsubscriptionErrors","sub","concat","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","splice","parent","empty","Subscription_2","reduce","errs","Subscription_1","value","error","complete","Observer","rxSubscriber","Symbol","$$rxSubscriber","rxSubscriber_1","rxSubscriber_2","__extends$1","Subscriber$1","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","isTrustedSubscriber","trustedSubscriber","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscriber_2","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrUnsub","__tryOrSetError","_this","wrappedComplete","Subscriber_1","toSubscriber","nextOrObserver","toSubscriber_2","toSubscriber_1","observable","getSymbolObservable","$$observable","observable_1","observable_2","observable_3","noop","noop_2","noop_1","pipe$1","fns","_i","pipeFromArray","pipe_2","piped","input","prev","pipeFromArray_1","pipe_1","pipe","Observable$1","Observable","subscribe","_isScalar","_subscribe","lift","operator","observable$$1","source","sink","_trySubscribe","forEach","PromiseCtor","Rx","Promise","resolve","reject","operations","toPromise","Observable_2","Observable_1","__extends$3","ObjectUnsubscribedError$1","ObjectUnsubscribedError","ObjectUnsubscribedError_2","ObjectUnsubscribedError_1","__extends$4","SubjectSubscription","observers","subscriberIndex","SubjectSubscription_2","SubjectSubscription_1","SubjectSubscriber","SubjectSubscriber_1","Subject$1","Subject","hasError","thrownError","AnonymousSubject$1","copy","slice","asObservable","Subject_2","AnonymousSubject","AnonymousSubject_1","Subject_1","__extends$6","AsyncSubject$1","AsyncSubject","hasNext","hasCompleted","AsyncSubject_2","AsyncSubject_1","__extends$5","BoundCallbackObservable","callbackFunc","scheduler","func","handler","handlerFn","innerArgs","result_1","result","schedule","dispatch","state","result_2","dispatchError","dispatchNext","BoundCallbackObservable_2","arg","BoundCallbackObservable_1","bindCallback_1","bindCallback$2","bindCallback","__extends$7","BoundNodeCallbackObservable","shift","BoundNodeCallbackObservable_2","dispatchError$1","dispatchNext$1","BoundNodeCallbackObservable_1","bindNodeCallback_1","bindNodeCallback$2","bindNodeCallback","isScheduler","isScheduler_2","isScheduler_1","__extends$9","ScalarObservable","done","ScalarObservable_2","ScalarObservable_1","__extends$10","EmptyObservable","EmptyObservable_2","EmptyObservable_1","__extends$8","ArrayObservable","array","of","pop","count","ArrayObservable_2","ArrayObservable_1","__extends$12","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","OuterSubscriber_2","OuterSubscriber_1","isArrayLike_1","isArrayLike","isPromise","then","isPromise_2","isPromise_1","iterator","symbolIteratorPonyfill","root$$2","Set_1","Set","Map_1","Map","keys","getOwnPropertyNames","$$iterator","iterator_1","iterator_2","iterator_3","__extends$13","InnerSubscriber","InnerSubscriber_2","InnerSubscriber_1","subscribeToResult","outerSubscriber","iterator$$1","item","obs","TypeError","msg","subscribeToResult_2","subscribeToResult_1","__extends$11","none","combineLatest$3","observables","project","CombineLatestOperator","combineLatest_2$2","CombineLatestSubscriber","CombineLatestOperator_1","active","values","toRespond","unused","oldVal","_tryProject","CombineLatestSubscriber_1","combineLatest_1","combineLatest","combineLatest$2","combineLatest_3","combineLatest_2","of_1","__extends$15","PromiseObservable","promise","dispatchNext$2","dispatchError$2","PromiseObservable_2","PromiseObservable_1","__extends$16","IteratorObservable","iterator$$2","getIterator","IteratorObservable_2","StringIterator","idx","charAt","ArrayIterator","arr","toLength","maxSafeInteger","pow","o","isNaN","numberIsFinite","sign","floor","isFinite","valueAsNumber","IteratorObservable_1","__extends$17","ArrayLikeObservable","arrayLike","ArrayLikeObservable_2","ArrayLikeObservable_1","Notification$1","Notification","kind","hasValue","observe","observer","accept","toObservable","createNext","undefinedValueNotification","createError","createComplete","completeNotification","Notification_2","Notification_1","__extends$18","observeOn","delay","observeOnOperatorFunction","ObserveOnOperator","observeOn_2","ObserveOnSubscriber","ObserveOnOperator_1","notification","scheduleMessage","ObserveOnMessage","ObserveOnSubscriber_1","ObserveOnMessage_1","observeOn_1","__extends$14","FromObservable","ish","FromObservable_2","FromObservable_1","from_1","from","__extends$19","mergeMap","resultSelector","concurrent","Number","POSITIVE_INFINITY","mergeMapOperatorFunction","MergeMapOperator","mergeMap_2","MergeMapSubscriber","MergeMapOperator_1","buffer","_tryNext","_innerSub","_notifyResultSelector","MergeMapSubscriber_1","mergeMap_1","identity","identity_2","identity_1","mergeAll","mergeAll_2","mergeAll_1","concatAll","concatAll_2","concatAll_1","concat$2","concat_2","concat_1","__extends$20","DeferObservable","observableFactory","DeferSubscriber","DeferObservable_2","tryDefer","_callFactory","DeferObservable_1","defer_1","defer$2","defer","empty_1","empty$3","__extends$21","ForkJoinObservable","sources","ForkJoinSubscriber","ForkJoinObservable_2","completed","haveValues","total","innerSubscription","_hasValue","ForkJoinObservable_1","forkJoin_1","forkJoin$2","forkJoin","__extends$22","isNodeStyleEventEmitter","sourceObj","addListener","removeListener","isJQueryStyleEventEmitter","on","off","isNodeList","isHTMLCollection","isEventTarget","addEventListener","removeEventListener","FromEventObservable","eventName","options","setupSubscription","source_1","source_2","source_3","FromEventObservable_2","FromEventObservable_1","fromEvent_1","fromEvent$2","fromEvent","__extends$23","FromEventPatternObservable","addHandler","removeHandler","_callSelector","retValue","_callAddHandler","errorSubscriber","FromEventPatternObservable_2","FromEventPatternObservable_1","fromEventPattern_1","fromEventPattern$2","fromEventPattern","fromPromise_1","fromPromise$2","fromPromise","__extends$24","selfSelector","GenerateObservable","initialState","condition","iterate","initialStateOrOptions","resultSelectorOrObservable","conditionResult","needIterate","GenerateObservable_2","GenerateObservable_1","generate_1","generate$2","generate","__extends$25","IfObservable","thenSource","elseSource","IfSubscriber","IfObservable_2","tryIf","IfObservable_1","_if_1","_if$2","_if","isNumeric","val","parseFloat","isNumeric_2","isNumeric_1","__extends$28","Action","work","Action_2","Action_1","__extends$27","AsyncAction","pending","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","AsyncAction_2","AsyncAction_1","Scheduler$1","Scheduler","SchedulerAction","now","Date","Scheduler_2","Scheduler_1$1","__extends$29","AsyncScheduler","scheduled","action","AsyncScheduler_2","AsyncScheduler_1","async_1","async","__extends$26","IntervalObservable","IntervalObservable_2","IntervalObservable_1","interval_1","interval$2","interval","merge$2","last","merge_2","merge_1","merge","__extends$30","race$2","RaceOperator","race_2","RaceSubscriber","RaceOperator_1","hasFirst","RaceSubscriber_1","race_1","race","__extends$31","NeverObservable","NeverObservable_2","NeverObservable_1","never_1","never$2","never","__extends$32","onErrorResumeNext$4","nextSources","OnErrorResumeNextOperator","onErrorResumeNext_2$1","onErrorResumeNextStatic","onErrorResumeNextStatic_1","OnErrorResumeNextSubscriber","subscribeToNextSource","onErrorResumeNext_1","onErrorResumeNext","onErrorResumeNext_2","onErrorResumeNext$2","__extends$33","dispatch$1","PairsObservable","PairsObservable_2","PairsObservable_1","pairs_1","pairs$2","pairs","__extends$34","RangeObservable","_count","RangeObservable_2","RangeObservable_1","range_1","range$2","range","__extends$35","UsingObservable","resourceFactory","resource","UsingSubscriber","UsingObservable_2","tryUse","UsingObservable_1","using_1","using$2","using","__extends$36","ErrorObservable","ErrorObservable_2","ErrorObservable_1","_throw_1","_throw$2","_throw","isDate","isDate_2","isDate_1","__extends$37","TimerObservable","dueTime","initialDelay","TimerObservable_2","TimerObservable_1","timer_1","timer$2","timer","__extends$38","zip$4","zipOperatorFunction","zipStatic","zip_2$1","ZipOperator","zipStatic_1","ZipSubscriber","ZipOperator_1","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","ZipSubscriber_1","nextResult","isComplete","zip_1","zip","zip_2","zip$2","__extends$40","thisArg","mapOperation","MapOperator","map_2","MapSubscriber","MapOperator_1","map_1","__extends$39","getCORSRequest","XMLHttpRequest","XDomainRequest","getXMLHttpRequest","progId","progIds","ActiveXObject","ajaxGet","url","headers","AjaxObservable","method","ajaxGet_1","ajaxPost","body","ajaxPost_1","ajaxDelete","ajaxDelete_1","ajaxPut","ajaxPut_1","ajaxPatch","ajaxPatch_1","mapResponse","response","ajaxGetJSON","responseType","ajaxGetJSON_1","urlOrRequest","request","createXHR","crossDomain","withCredentials","timeout","prop","AjaxSubscriber","get","post","put","patch","getJSON","AjaxObservable_2","FormData","serializeBody","send","xhr","AjaxResponse$1","_b","user","password","setupEvents","open","setHeaders","contentType","splitIndex","substring","encodeURIComponent","JSON","stringify","setRequestHeader","progressSubscriber","xhrTimeout","AjaxTimeoutError$1","ontimeout","upload","xhrProgress_1","onprogress","xhrError_1","AjaxError$1","onerror","xhrReadyStateChange","readyState","status_1","status","responseText","onreadystatechange","abort","AjaxSubscriber_1","AjaxResponse","originalEvent","parseXhrResponse","AjaxResponse_1","AjaxError","AjaxError_1","parse","responseXML","AjaxTimeoutError","AjaxTimeoutError_1","AjaxObservable_1","ajax_1","ajax$2","ajax","__extends$43","QueueAction","QueueAction_2","QueueAction_1","__extends$44","QueueScheduler","QueueScheduler_2","QueueScheduler_1","queue_1","queue","__extends$42","ReplaySubject$1","ReplaySubject","bufferSize","windowTime","_events","_bufferSize","_windowTime","_getNow","ReplayEvent","_trimBufferThenGetEvents","eventsCount","spliceCount","ReplaySubject_2","ReplaySubject_1","assignImpl","k","assignImpl_1","getAssign","assign","getAssign_1","assign_1","__extends$41","WebSocketSubject","urlConfigOrSource","WebSocketCtor","WebSocket","_output","data","sock","_resetState","socket","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","protocol","binaryType","close","onopen","openObserver","closingObserver","code","reason","onclose","closeObserver","wasClean","onmessage","WebSocketSubject_2","WebSocketSubject_1","webSocket_1","webSocket$2","webSocket","__extends$45","buffer$3","closingNotifier","bufferOperatorFunction","BufferOperator","buffer_2$2","BufferSubscriber","buffer_1","buffer$2","buffer_3","buffer_2","__extends$46","bufferCount$3","startBufferEvery","bufferCountOperatorFunction","BufferCountOperator","bufferCount_2$2","subscriberClass","BufferCountSubscriber","BufferSkipCountSubscriber","buffers","bufferCount_1","bufferCount","bufferCount$2","bufferCount_3","bufferCount_2","__extends$47","bufferTime$3","bufferTimeSpan","bufferCreationInterval","maxBufferSize","bufferTimeOperatorFunction","BufferTimeOperator","bufferTime_2$2","BufferTimeSubscriber","Context","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","spliceIndex","prevContext","bufferTime_1","bufferTime","bufferTime$2","bufferTime_3","bufferTime_2","__extends$48","bufferToggle$3","openings","closingSelector","bufferToggleOperatorFunction","BufferToggleOperator","bufferToggle_2$2","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","bufferToggle_1","bufferToggle","bufferToggle$2","bufferToggle_3","bufferToggle_2","__extends$49","bufferWhen$3","BufferWhenOperator","bufferWhen_2$2","BufferWhenSubscriber","subscribing","closingSubscription","bufferWhen_1","bufferWhen","bufferWhen$2","bufferWhen_3","bufferWhen_2","__extends$50","catchError","catchErrorOperatorFunction","CatchOperator","caught","catchError_2","CatchSubscriber","err2","catchError_1","_catch$2","_catch_2","_catch_1","_catch","combineAll$3","combineAll_2$2","combineAll_1","combineAll","combineAll$2","combineAll_3","combineAll_2","combineLatest$6","combineLatest_3$1","combineLatest_2$3","concat_2$1","concatStatic$1","concat$6","concat_4$1","concat_3$2","concatStatic","concat$5","concat_4","concat_3","concatAll$3","concatAll_3","concatAll_2$1","concatMap$3","concatMap_2$2","concatMap_1","concatMap","concatMap$2","concatMap_3","concatMap_2","concatMapTo$3","innerObservable","concatMapTo_2$2","concatMapTo_1","concatMapTo","concatMapTo$2","concatMapTo_3","concatMapTo_2","__extends$51","count$3","predicate","CountOperator","count_2$2","CountSubscriber","_tryPredicate","count_1","count$2","count_3","count_2","__extends$52","dematerialize$3","dematerializeOperatorFunction","DeMaterializeOperator","dematerialize_2$2","DeMaterializeSubscriber","dematerialize_1","dematerialize","dematerialize$2","dematerialize_3","dematerialize_2","__extends$53","debounce$3","durationSelector","DebounceOperator","debounce_2$2","DebounceSubscriber","durationSubscription","emitValue","duration","debounce_1","debounce","debounce$2","debounce_3","debounce_2","__extends$54","debounceTime$3","DebounceTimeOperator","debounceTime_2$2","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","dispatchNext$3","debouncedNext","debounceTime_1","debounceTime","debounceTime$2","debounceTime_3","debounceTime_2","__extends$55","defaultIfEmpty$3","defaultValue","DefaultIfEmptyOperator","defaultIfEmpty_2$2","DefaultIfEmptySubscriber","isEmpty","defaultIfEmpty_1","defaultIfEmpty","defaultIfEmpty$2","defaultIfEmpty_3","defaultIfEmpty_2","__extends$56","delay$3","absoluteDelay","delayFor","DelayOperator","delay_2$2","DelaySubscriber","delay_1","_schedule","scheduleNotification","DelayMessage","delay$2","delay_3","delay_2","__extends$57","delayWhen$3","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","delayWhen_2$2","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","delayWhen_1","delayWhen","delayWhen$2","delayWhen_3","delayWhen_2","minimalSetImpl","MinimalSet","_values","has","defineProperty","enumerable","configurable","clear","minimalSetImpl_1","_Set","__extends$58","distinct$3","keySelector","flushes","DistinctOperator","distinct_2$2","DistinctSubscriber","_useKeySelector","_finalizeNext","DistinctSubscriber_1","distinct_1","distinct","distinct$2","distinct_3","distinct_2","__extends$59","distinctUntilChanged$3","compare","DistinctUntilChangedOperator","distinctUntilChanged_2$2","DistinctUntilChangedSubscriber","hasKey","Boolean","distinctUntilChanged_1","distinctUntilChanged","distinctUntilChanged$2","distinctUntilChanged_3","distinctUntilChanged_2","distinctUntilKeyChanged$3","distinctUntilKeyChanged_2$2","distinctUntilKeyChanged_1","distinctUntilKeyChanged","distinctUntilKeyChanged$2","distinctUntilKeyChanged_3","distinctUntilKeyChanged_2","__extends$60","tap","tapOperatorFunction","DoOperator","tap_2","DoSubscriber","safeSubscriber","tap_1","_do$2","_do_2","_do_1","_do","__extends$61","exhaust$3","SwitchFirstOperator","exhaust_2$2","SwitchFirstSubscriber","hasSubscription","exhaust_1","exhaust","exhaust$2","exhaust_3","exhaust_2","__extends$62","exhaustMap$3","SwitchFirstMapOperator","exhaustMap_2$2","SwitchFirstMapSubscriber","tryNext","trySelectResult","exhaustMap_1","exhaustMap","exhaustMap$2","exhaustMap_3","exhaustMap_2","__extends$63","expand$3","ExpandOperator","expand_2$2","ExpandSubscriber","ExpandOperator_1","subscribeToProjection","ExpandSubscriber_1","expand_1","expand","expand$2","expand_3","expand_2","__extends$65","ArgumentOutOfRangeError$1","ArgumentOutOfRangeError","ArgumentOutOfRangeError_2","ArgumentOutOfRangeError_1","__extends$64","elementAt$3","ElementAtOperator","elementAt_2$2","ElementAtSubscriber","elementAt_1","elementAt","elementAt$2","elementAt_3","elementAt_2","__extends$66","filter$3","filterOperatorFunction","FilterOperator","filter_2$2","FilterSubscriber","filter_1","filter","filter$2","filter_3","filter_2","__extends$67","finalize","callback","FinallyOperator","finalize_2","FinallySubscriber","finalize_1","_finally$2","_finally_2","_finally_1","_finally","__extends$68","find$3","FindValueOperator","find_2$2","yieldIndex","FindValueSubscriber","FindValueOperator_1","FindValueSubscriber_1","find_1","find","find$2","find_3","find_2","findIndex$3","findIndex_2$2","findIndex_1","findIndex","findIndex$2","findIndex_3","findIndex_2","__extends$70","EmptyError$1","EmptyError","EmptyError_2","EmptyError_1","__extends$69","first$3","FirstOperator","first_2$2","FirstSubscriber","_emitted","_emit","_tryResultSelector","_emitFinal","first_1","first","first$2","first_3","first_2","MapPolyfill","size","_keys","set","cb","MapPolyfill_2","MapPolyfill_1","_Map","FastMap","FastMap_2","FastMap_1","__extends$71","groupBy$3","elementSelector","subjectSelector","GroupByOperator","groupBy_2$2","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","group","element","groupedObservable","GroupedObservable$1","GroupDurationSubscriber","removeGroup","GroupedObservable","groupSubject","refCountSubscription","InnerRefCountSubscription","GroupedObservable_1","groupBy_1","groupBy","groupBy$2","groupBy_3","groupBy_2","__extends$72","ignoreElements$3","ignoreElementsOperatorFunction","IgnoreElementsOperator","ignoreElements_2$2","IgnoreElementsSubscriber","ignoreElements_1","ignoreElements","ignoreElements$2","ignoreElements_3","ignoreElements_2","__extends$73","isEmpty$3","IsEmptyOperator","isEmpty_2$2","IsEmptySubscriber","isEmpty_1","isEmpty$2","isEmpty_3","isEmpty_2","__extends$74","audit$3","auditOperatorFunction","AuditOperator","audit_2$2","AuditSubscriber","throttled","clearThrottle","audit_1","audit","audit$2","audit_3","audit_2","auditTime$3","auditTime_2$2","auditTime_1","auditTime","auditTime$2","auditTime_3","auditTime_2","__extends$75","last$3","LastOperator","last_2$2","LastSubscriber","last_1","last$2","last_3","last_2","letProto","letProto_1","_let$2","letBind","__extends$76","every$3","EveryOperator","every_2$2","EverySubscriber","everyValueMatch","every_1","every","every$2","every_3","every_2","map$3","map_3","map_2$1","__extends$77","mapTo$3","MapToOperator","mapTo_2$2","MapToSubscriber","mapTo_1","mapTo","mapTo$2","mapTo_3","mapTo_2","__extends$78","materialize$3","materializeOperatorFunction","MaterializeOperator","materialize_2$2","MaterializeSubscriber","materialize_1","materialize","materialize$2","materialize_3","materialize_2","__extends$79","scan","accumulator","seed","hasSeed","scanOperatorFunction","ScanOperator","scan_2","ScanSubscriber","_seed","scan_1","__extends$80","takeLast","takeLastOperatorFunction","TakeLastOperator","takeLast_2","TakeLastSubscriber","ring","takeLast_1","reduceOperatorFunctionWithSeed","reduceOperatorFunction","acc","reduce_2","reduce_1","max$3","comparer","max_2$2","max_1","max$2","max_3","max_2","merge_2$1","mergeStatic$1","merge$6","merge_4$1","merge_3$2","mergeStatic","merge$5","merge_4","merge_3","mergeAll$3","mergeAll_3","mergeAll_2$1","mergeMap$3","mergeMap_3","mergeMap_2$1","flatMap","__extends$81","mergeMapTo$3","MergeMapToOperator","mergeMapTo_2$2","MergeMapToSubscriber","MergeMapToOperator_1","MergeMapToSubscriber_1","mergeMapTo_1","mergeMapTo","mergeMapTo$2","mergeMapTo_3","mergeMapTo_2","flatMapTo","__extends$82","mergeScan$3","MergeScanOperator","mergeScan_2$2","MergeScanSubscriber","MergeScanOperator_1","MergeScanSubscriber_1","mergeScan_1","mergeScan","mergeScan$2","mergeScan_3","mergeScan_2","min$3","min_2$2","min_1","min$2","min_3","min_2","__extends$84","refCount","refCountOperatorFunction","RefCountOperator$1","refCount_2","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber$1","connection","connect","RefCountSubscriber","sharedConnection","_connection","refCount_1","__extends$83","ConnectableObservable$1","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","ConnectableObservable_2","connectableProto","connectableObservableDescriptor","writable","ConnectableObservable_1","multicast$3","subjectOrSubjectFactory","multicastOperatorFunction","MulticastOperator","multicast_2$2","MulticastOperator_1","multicast_1","multicast","multicast$2","multicast_3","multicast_2","observeOn$3","observeOn_3","observeOn_2$1","onErrorResumeNext$7","onErrorResumeNext_3","onErrorResumeNext_2$2","__extends$85","pairwise$3","PairwiseOperator","pairwise_2$2","PairwiseSubscriber","hasPrev","pairwise_1","pairwise","pairwise$2","pairwise_3","pairwise_2","not","pred","notPred","not_2","not_1","partition$3","partition_2$2","partition_1","partition","partition$2","partition_3","partition_2","pluck$3","properties","plucker","pluck_2$2","props","mapper","currentProp","pluck_1","pluck","pluck$2","pluck_3","pluck_2","publish$3","publish_2$2","publish_1","publish","publish$2","publish_3","publish_2","__extends$86","BehaviorSubject$1","BehaviorSubject","_value","getValue","BehaviorSubject_2","BehaviorSubject_1","publishBehavior$3","publishBehavior_2$2","publishBehavior_1","publishBehavior","publishBehavior$2","publishBehavior_3","publishBehavior_2","publishReplay$3","selectorOrScheduler","publishReplay_2$2","publishReplay_1","publishReplay","publishReplay$2","publishReplay_3","publishReplay_2","publishLast$3","publishLast_2$2","publishLast_1","publishLast","publishLast$2","publishLast_3","publishLast_2","race$6","raceOperatorFunction","race_3$2","race_2$1","raceStatic","race$5","race_4","race_3","reduce$3","reduce_3","reduce_2$1","__extends$87","repeat$3","RepeatOperator","repeat_2$2","RepeatSubscriber","repeat_1","repeat","repeat$2","repeat_3","repeat_2","__extends$88","repeatWhen$3","notifier","RepeatWhenOperator","repeatWhen_2$2","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","repeatWhen_1","repeatWhen","repeatWhen$2","repeatWhen_3","repeatWhen_2","__extends$89","retry$3","RetryOperator","retry_2$2","RetrySubscriber","retry_1","retry","retry$2","retry_3","retry_2","__extends$90","retryWhen$3","RetryWhenOperator","retryWhen_2$2","RetryWhenSubscriber","retryWhen_1","retryWhen","retryWhen$2","retryWhen_3","retryWhen_2","__extends$91","sample$3","SampleOperator","sample_2$2","sampleSubscriber","SampleSubscriber","sample_1","sample","sample$2","sample_3","sample_2","__extends$92","sampleTime$3","SampleTimeOperator","sampleTime_2$2","SampleTimeSubscriber","dispatchNotification","sampleTime_1","sampleTime","sampleTime$2","sampleTime_3","sampleTime_2","scan$3","scan_3","scan_2$1","__extends$93","sequenceEqual$3","compareTo","comparor","SequenceEqualOperator","sequenceEqual_2$2","SequenceEqualSubscriber","SequenceEqualOperator_1","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","_c","a","areEqual","nextB","SequenceEqualSubscriber_1","sequenceEqual_1","sequenceEqual","sequenceEqual$2","sequenceEqual_3","sequenceEqual_2","shareSubjectFactory","share$3","share_2$2","share_1","share","share$2","share_3","share_2","shareReplay$3","shareReplayOperator","shareReplay_2$2","shareReplayOperation","shareReplay_1","shareReplay","shareReplay$2","shareReplay_3","shareReplay_2","__extends$94","single$3","SingleOperator","single_2$2","SingleSubscriber","seenValue","applySingleValue","singleValue","single_1","single","single$2","single_3","single_2","__extends$95","skip$3","SkipOperator","skip_2$2","SkipSubscriber","skip_1","skip","skip$2","skip_3","skip_2","__extends$96","skipLast$3","SkipLastOperator","skipLast_2$2","_skipCount","SkipLastSubscriber","_ring","skipCount","currentIndex","oldValue","skipLast_1","skipLast","skipLast$2","skipLast_3","skipLast_2","__extends$97","skipUntil$3","SkipUntilOperator","skipUntil_2$2","SkipUntilSubscriber","isInnerStopped","skipUntil_1","skipUntil","skipUntil$2","skipUntil_3","skipUntil_2","__extends$98","skipWhile$3","SkipWhileOperator","skipWhile_2$2","SkipWhileSubscriber","skipping","tryCallPredicate","skipWhile_1","skipWhile","skipWhile$2","skipWhile_3","skipWhile_2","startWith$3","startWith_2$2","startWith_1","startWith","startWith$2","startWith_3","startWith_2","ImmediateDefinition","setImmediate","clearImmediate","nextHandle","tasksByHandle","currentlyRunningATask","canUseProcessNextTick","createProcessNextTickSetImmediate","canUsePostMessage","createPostMessageSetImmediate","canUseMessageChannel","createMessageChannelSetImmediate","canUseReadyStateChange","createReadyStateChangeSetImmediate","createSetTimeoutSetImmediate","ci","handle","instance","identify","process","MessageChannel","document","createElement","postMessage","importScripts","postMessageIsAsynchronous_1","oldOnMessage","partiallyApplied","Function","addFromSetImmediateArguments","nextTick","runIfPresent","messagePrefix","random","onGlobalMessage","globalMessageHandler","task","channel","port1","port2","doc","html","documentElement","script","removeChild","appendChild","ImmediateDefinition_1","Immediate_1","Immediate","__extends$100","AsapAction","AsapAction_2","AsapAction_1","__extends$101","AsapScheduler","AsapScheduler_2","AsapScheduler_1","asap_1","asap","__extends$99","SubscribeOnObservable","delayTime","SubscribeOnObservable_2","SubscribeOnObservable_1","subscribeOn$3","subscribeOnOperatorFunction","SubscribeOnOperator","subscribeOn_2$2","subscribeOn_1","subscribeOn","subscribeOn$2","subscribeOn_3","subscribeOn_2","__extends$102","switchMap","switchMapOperatorFunction","SwitchMapOperator","switchMap_2","SwitchMapSubscriber","_tryNotifyNext","switchMap_1","switchAll","switchAll_2","switchAll_1","_switch$2","_switch_2","_switch_1","_switch","switchMap$3","switchMap_3","switchMap_2$1","__extends$103","switchMapTo$3","SwitchMapToOperator","switchMapTo_2$2","SwitchMapToSubscriber","inner","tryResultSelector","switchMapTo_1","switchMapTo","switchMapTo$2","switchMapTo_3","switchMapTo_2","__extends$104","take$3","TakeOperator","take_2$2","TakeSubscriber","take_1","take","take$2","take_3","take_2","takeLast$3","takeLast_3","takeLast_2$1","__extends$105","takeUntil$3","TakeUntilOperator","takeUntil_2$2","TakeUntilSubscriber","takeUntil_1","takeUntil","takeUntil$2","takeUntil_3","takeUntil_2","__extends$106","takeWhile$3","TakeWhileOperator","takeWhile_2$2","TakeWhileSubscriber","nextOrComplete","predicateResult","takeWhile_1","takeWhile","takeWhile$2","takeWhile_3","takeWhile_2","throttle_1","defaultThrottleConfig","leading","trailing","throttle","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","_trailingValue","tryDurationSelector","_sendTrailing","throttle_2$2","throttle_3$1","throttle$2","throttle_3","throttle_2","__extends$107","throttleTime$3","ThrottleTimeOperator","throttleTime_2$2","ThrottleTimeSubscriber","dispatchNext$4","throttleTime_1","throttleTime","throttleTime$2","throttleTime_3","throttleTime_2","__extends$108","timeInterval$3","TimeIntervalOperator","timeInterval_2$2","TimeInterval$2","TimeInterval","TimeInterval_1","TimeIntervalSubscriber","lastTime","span","timeInterval_1","timeInterval","TimeInterval$1","timeInterval$2","timeInterval_3","timeInterval_2","__extends$110","TimeoutError$1","TimeoutError","TimeoutError_2","TimeoutError_1","__extends$109","timeout$3","due","absoluteTimeout","waitFor","TimeoutOperator","timeout_2$2","errorInstance","TimeoutSubscriber","scheduleTimeout","dispatchTimeout","timeout_1","timeout$2","timeout_3","timeout_2","__extends$111","timeoutWith$3","withObservable","TimeoutWithOperator","timeoutWith_2$2","TimeoutWithSubscriber","timeoutWith_1","timeoutWith","timeoutWith$2","timeoutWith_3","timeoutWith_2","timestamp$3","Timestamp$1","timestamp_2$2","Timestamp","timestamp","Timestamp_1","timestamp_1","timestamp$2","timestamp_3","timestamp_2","toArrayReducer","toArray$3","toArray_2$2","toArray_1","toArray","toArray$2","toArray_3","toArray_2","__extends$112","window$4","windowBoundaries","windowOperatorFunction","WindowOperator","window_2$2","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","window_1","window$3","window_3","window_2","__extends$113","windowCount$3","windowSize","startWindowEvery","windowCountOperatorFunction","WindowCountOperator","windowCount_2$2","WindowCountSubscriber","windows","c","windowCount_1","windowCount","windowCount$2","windowCount_3","windowCount_2","__extends$114","windowTime$3","windowTimeSpan","windowCreationInterval","maxWindowSize","windowTimeOperatorFunction","WindowTimeOperator","windowTime_2$2","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","timeSpanState","windowTime_1","windowTime$2","windowTime_3","windowTime_2","__extends$115","windowToggle$3","WindowToggleOperator","windowToggle_2$2","WindowToggleSubscriber","openSubscription","windowToggle_1","windowToggle","windowToggle$2","windowToggle_3","windowToggle_2","__extends$116","windowWhen$3","windowWhenOperatorFunction","WindowOperator$1","windowWhen_2$2","WindowSubscriber$1","unsubscribeClosingNotification","closingNotification","windowWhen_1","windowWhen","windowWhen$2","windowWhen_3","windowWhen_2","__extends$117","withLatestFrom$3","WithLatestFromOperator","withLatestFrom_2$2","WithLatestFromSubscriber","found","withLatestFrom_1","withLatestFrom","withLatestFrom$2","withLatestFrom_3","withLatestFrom_2","zipProto","zipProto_1","zip$7","zipAll$3","zipAll_2$2","zipAll_1","zipAll","zipAll$2","zipAll_3","zipAll_2","SubscriptionLog","subscribedFrame","unsubscribedFrame","SubscriptionLog_2","SubscriptionLog_1","SubscriptionLoggable","logSubscribedFrame","logUnsubscribedFrame","subscriptionLogs","oldSubscriptionLog","SubscriptionLoggable_2","SubscriptionLoggable_1","applyMixins","derivedCtor","baseCtors","baseCtor","propertyKeys","len2","name_1","applyMixins_2","applyMixins_1","__extends$119","ColdObservable","messages","scheduleMessages","messagesLength","frame","ColdObservable_2","ColdObservable_1","__extends$120","HotObservable","setup","HotObservable_2","HotObservable_1","__extends$121","VirtualTimeScheduler$1","VirtualTimeScheduler","maxFrames","VirtualAction","frameTimeFactor","VirtualTimeScheduler_2","sort","sortActions","VirtualAction_1","VirtualTimeScheduler_1","__extends$118","defaultMaxFrame","TestScheduler$1","TestScheduler","assertDeepEqual","hotObservables","coldObservables","flushTests","createTime","marbles","createColdObservable","parseMarbles","cold","createHotObservable","materializeInnerObservable","outerFrame","expectObservable","unsubscriptionMarbles","actual","flushTest","ready","unsubscriptionFrame","parseMarblesAsSubscriptions","toBe","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","readyFlushTests","test","groupStart","subscriptionFrame","materializeInnerObservables","testMessages","subIndex","frameOffset","RequestAnimationFrameDefinition","requestAnimationFrame","cancelAnimationFrame","mozRequestAnimationFrame","mozCancelAnimationFrame","webkitRequestAnimationFrame","webkitCancelAnimationFrame","msRequestAnimationFrame","msCancelAnimationFrame","oRequestAnimationFrame","oCancelAnimationFrame","clearTimeout","RequestAnimationFrameDefinition_1","AnimationFrame_1","AnimationFrame","__extends$122","AnimationFrameAction","AnimationFrameAction_2","AnimationFrameAction_1","__extends$123","AnimationFrameScheduler","AnimationFrameScheduler_2","AnimationFrameScheduler_1","animationFrame_1","throttle$3","AtpTimePickerComponent","resolver","timeSelected","cfr","resolveComponentFactory","tsc","container","createComponent","timerElement","AtpTimePickerComponent_Factory","viewQuery","AtpTimePickerComponent_Query","_t","outputs","AtpTimePickerComponent_Template","propDecorators","read","arabic","Intl","NumberFormat","persian","PersianPreference","format","exp","ArabicPreference","ChinesePreference","Preference","locale","AmazingTimePickerService","injector","thems","componentRef","attachView","domElem","rootNodes","afterClose","AmazingTimePickerService_Factory","AtpDirective","viewContainerRef","atp","myClick","onChange","elementRef","nativeElement","getAttribute","replace","RegExp","timePickerFunction","retTime","writeValue","srcElement","AtpDirective_Factory","ɵdir","hostBindings","AtpDirective_HostBindings","AtpDirective_click_HostBindingHandler","onClick","AtpDirective_input_HostBindingHandler","onInput","features","provide","useExisting","multi","providers","AmazingTimePickerModule","ɵmod","ɵinj","AmazingTimePickerModule_Factory","imports","ngJitMode","declarations","entryComponents"],"mappings":"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","file":"default~demo-pages-seller-seller-module~demo-pages-services-services-module-es5.js","sourcesContent":["import { ApplicationRef, Component, ComponentFactoryResolver, Directive, EventEmitter, HostListener, Injectable, Injector, NgModule, Output, ViewChild, ViewContainerRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = function (a0) { return { \"active\": a0 }; };\nconst _c1 = function (a0, a1, a2, a3) { return { top: a0, left: a1, color: a2, background: a3 }; };\nfunction TimePickerComponent_button_17_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const clock_r178 = ctx.$implicit;\n    const ctx_r177 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx_r177.nowTime == clock_r178.time))(\"id\", \"timepicker-item-id-\" + clock_r178.time)(\"ngStyle\", ɵngcc0.ɵɵpureFunction4(6, _c1, clock_r178.top, clock_r178.left, ctx_r177.nowTime == clock_r178.time ? ctx_r177.config.arrowStyle.color : \"\", ctx_r177.nowTime == clock_r178.time ? ctx_r177.config.arrowStyle.background : \"transparent\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r177.GetClockTime(clock_r178), \" \");\n} }\nconst _c2 = function (a0, a1) { return { \"active\": a0, \"static\": a1 }; };\nconst _c3 = function (a0) { return { \"selected\": a0 }; };\nconst _c4 = function (a0) { return { \"hide-time-picker-clock\": a0 }; };\nconst _c5 = function (a0) { return { background: a0 }; };\nconst _c6 = [\"container\"];\nclass AtpCoreService {\n    constructor() { }\n    /**\n     * @param {?} min\n     * @param {?} max\n     * @return {?}\n     */\n    allowedTimes(min, max) {\n        const /** @type {?} */ allTimes = [];\n        const /** @type {?} */ nowMinHour = +min.split(':')[0];\n        const /** @type {?} */ nowMaxHour = +max.split(':')[0];\n        const /** @type {?} */ nowMinMin = +min.split(':')[1];\n        const /** @type {?} */ nowMaxMin = +max.split(':')[1];\n        for (let /** @type {?} */ i = nowMinHour; i <= nowMaxHour; i++) {\n            let /** @type {?} */ j = 0, /** @type {?} */ jDest = 59;\n            if (i === nowMinHour) {\n                j = nowMinMin;\n            }\n            else if (i === nowMaxHour) {\n                jDest = nowMaxMin;\n            }\n            for (j; j <= jDest; j++) {\n                const /** @type {?} */ hour = i <= 12 ? i : i - 12;\n                const /** @type {?} */ minute = j;\n                const /** @type {?} */ ampm = i < 12 ? 'AM' : 'PM';\n                allTimes.push(hour + ':' + minute + ' ' + ampm);\n            }\n        }\n        return allTimes;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ClockMaker(type) {\n        const /** @type {?} */ items = [];\n        const /** @type {?} */ timeVal = (type === 'minute') ? 60 : 12;\n        const /** @type {?} */ timeStep = (type === 'minute') ? 5 : 1;\n        const /** @type {?} */ timeStart = (type === 'minute') ? 0 : 1;\n        const /** @type {?} */ r = 124;\n        const /** @type {?} */ j = r - 25;\n        for (let /** @type {?} */ min = timeStart; min <= timeVal; min += timeStep) {\n            if (min !== 60) {\n                const /** @type {?} */ str = String(min);\n                const /** @type {?} */ x = j * Math.sin(Math.PI * 2 * (min / timeVal));\n                const /** @type {?} */ y = j * Math.cos(Math.PI * 2 * (min / timeVal));\n                items.push({\n                    time: str,\n                    left: (x + r - 17) + 'px',\n                    top: (-y + r - 17) + 'px',\n                    type\n                });\n            }\n        }\n        return items;\n    }\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    TimeToString(time) {\n        const { ampm, minute, hour } = time;\n        let /** @type {?} */ hh = ampm === 'PM' ? +hour + 12 : +hour;\n        if (ampm === 'AM' && hh === 12) {\n            hh = 0;\n        }\n        if (hh === 24) {\n            hh = 12;\n        }\n        hh = hh < 10 ? '0' + hh : ('' + hh);\n        const /** @type {?} */ mm = minute < 10 ? '0' + minute : minute;\n        return `${hh}:${mm}`;\n    }\n    /**\n     * Converts 00:00 format to ITime object\n     * @param {?} time\n     * @return {?}\n     */\n    StringToTime(time) {\n        const [h, m] = time.split(':');\n        let /** @type {?} */ hour = +h > 12 ? +h - 12 : +h;\n        hour = hour === 0 ? 12 : hour;\n        const /** @type {?} */ ampm = +h >= 12 ? 'PM' : 'AM';\n        return {\n            ampm, minute: +m, hour\n        };\n    }\n    /**\n     * \\@experimental\n     * @param {?} ele\n     * @param {?} parrentPos\n     * @param {?} step\n     * @return {?}\n     */\n    CalcDegrees(ele, parrentPos, step) {\n        const /** @type {?} */ clock = {\n            width: ele.currentTarget.offsetWidth,\n            height: ele.currentTarget.offsetHeight\n        };\n        const /** @type {?} */ targetX = clock.width / 2;\n        const /** @type {?} */ targetY = clock.height / 2;\n        const /** @type {?} */ Vx = Math.round((ele.clientX - parrentPos.left) - targetX);\n        const /** @type {?} */ Vy = Math.round(targetY - (ele.clientY - parrentPos.top));\n        let /** @type {?} */ radians = -Math.atan2(Vy, Vx);\n        radians += 2.5 * Math.PI;\n        let /** @type {?} */ degrees = Math.round(radians * 180 / Math.PI);\n        const /** @type {?} */ degMod = degrees % step;\n        if (degMod === 0) {\n            return degrees;\n        }\n        else if (degMod >= step / 2) {\n            degrees = degrees + (step - degMod);\n        }\n        else if (degMod < step / 2) {\n            degrees = degrees - degMod;\n        }\n        return degrees;\n    }\n}\nAtpCoreService.ɵfac = function AtpCoreService_Factory(t) { return new (t || AtpCoreService)(); };\nAtpCoreService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AtpCoreService, factory: AtpCoreService.ɵfac });\n/**\n * @nocollapse\n */\nAtpCoreService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AtpCoreService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nclass TimePickerComponent {\n    /**\n     * @param {?} core\n     */\n    constructor(core$$1) {\n        this.core = core$$1;\n        this.subject = null;\n        this.activeModal = false;\n        this.clockType = 'hour';\n        this.time = {\n            ampm: 'AM',\n            minute: 0,\n            hour: 12\n        };\n        this.nowTime = this.time.hour;\n        this.isPopup = true;\n        this.animationTime = 0;\n        this.clockMaker = () => {\n            const /** @type {?} */ type = this.clockType;\n            this.clockObject = this.core.ClockMaker(type);\n            this.setArrow(null);\n        };\n        this.setActiveTime = () => {\n            this.nowTime = (this.clockType === 'minute' ? this.time.minute : this.time.hour);\n        };\n        this.setArrow = (obj) => {\n            if (obj) {\n                this.clockType = obj.type;\n                if (this.clockType === 'minute') {\n                    this.time.minute = obj.time;\n                }\n                else {\n                    this.time.hour = obj.time;\n                }\n            }\n            const /** @type {?} */ step = (this.clockType === 'minute') ? 6 : 30;\n            const /** @type {?} */ time = (this.clockType === 'minute') ? this.time.minute : this.time.hour;\n            const /** @type {?} */ degrees = time * step;\n            this.rotationClass(degrees);\n            this.setActiveTime();\n        };\n        this.rotationClass = (degrees) => {\n            this.degree = degrees;\n        };\n        this.getDegree = (ele) => {\n            const /** @type {?} */ step = this.clockType === 'minute' ? 6 : 30;\n            const /** @type {?} */ parrentPos = ele.currentTarget.getBoundingClientRect();\n            if (this.isClicked && (ele.currentTarget === ele.target || ele.target.nodeName === 'BUTTON')) {\n                const /** @type {?} */ clock = {\n                    width: ele.currentTarget.offsetWidth,\n                    height: ele.currentTarget.offsetHeight\n                };\n                const /** @type {?} */ degrees = this.core.CalcDegrees(ele, parrentPos, step);\n                let /** @type {?} */ hour = this.time.hour, /** @type {?} */ minute = this.time.minute;\n                if (this.clockType === 'hour') {\n                    hour = (degrees / step);\n                    hour = (hour > 12) ? hour - 12 : hour;\n                }\n                else if (this.clockType === 'minute') {\n                    minute = (degrees / step);\n                    minute = (minute > 59) ? minute - 60 : minute;\n                }\n                const /** @type {?} */ min = this.config.rangeTime.start, /** @type {?} */ max = this.config.rangeTime.end;\n                const /** @type {?} */ nowMinHour = +min.split(':')[0] < 12 ? +min.split(':')[0] : +min.split(':')[0] - 12;\n                const /** @type {?} */ nowMaxHour = +max.split(':')[0] < 12 ? +max.split(':')[0] : +max.split(':')[0] - 12;\n                const /** @type {?} */ nowMinMin = +min.split(':')[1];\n                const /** @type {?} */ nowMaxMin = +max.split(':')[1];\n                const /** @type {?} */ nowTime = this.GetNowTime(hour, this.time.ampm, minute);\n                if (this.allowed.indexOf(nowTime) > -1) {\n                    this.time.hour = hour;\n                    this.time.minute = minute;\n                    this.rotationClass(degrees);\n                    this.setActiveTime();\n                }\n                else if (this.clockType === 'hour' && (hour === nowMinHour && minute <= nowMinMin)) {\n                    this.time.hour = nowMinHour;\n                    this.time.minute = nowMinMin;\n                }\n                else if (this.clockType === 'hour' && (hour === nowMaxHour && minute >= nowMaxMin)) {\n                    this.time.hour = nowMaxHour;\n                    this.time.minute = nowMaxMin;\n                }\n            }\n        };\n    }\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    ParseStringToTime(time) {\n        time = (time === '' || time === undefined || time === null) ? this.time.hour + ':' + this.time.minute : time;\n        this.time = this.core.StringToTime(time);\n    }\n    /**\n     * @return {?}\n     */\n    GetTime() {\n        const /** @type {?} */ time = this.core.TimeToString(this.time);\n        this.subject.next(time);\n    }\n    /**\n     * @return {?}\n     */\n    setTime() {\n        this.isClicked = false;\n        if (this.config.changeToMinutes && !this.config.onlyHour && this.clockType === 'hour') {\n            this.ChangeAnimational('minute');\n        }\n    }\n    /**\n     * @param {?} hour\n     * @param {?} ampm\n     * @param {?} minute\n     * @return {?}\n     */\n    GetNowTime(hour, ampm, minute) {\n        const /** @type {?} */ Hour = (hour === 12 && ampm === 'AM') ? '0' : hour;\n        const /** @type {?} */ nowTime = Hour + ':' + minute + ' ' + ampm;\n        return nowTime;\n    }\n    /**\n     * @return {?}\n     */\n    checkBet() {\n        const /** @type {?} */ nowTime = this.GetNowTime(this.time.hour, this.time.ampm, this.time.minute);\n        if (this.allowed.indexOf(nowTime) === -1) {\n            this.ParseStringToTime(this.config.rangeTime.start);\n            this.setArrow(null);\n            this.setActiveTime();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    modalAnimation() {\n        setTimeout(() => {\n            this.activeModal = true;\n        }, 1);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.allowed = this.core.allowedTimes(this.config.rangeTime.start, this.config.rangeTime.end);\n        if (this.config && this.config.onlyMinute) {\n            this.clockType = 'minute';\n        }\n        if (this.config) {\n            if (this.config.onlyPM) {\n                this.time.ampm = 'PM';\n            }\n            else if (this.config.onlyAM) {\n                this.time.ampm = 'AM';\n            }\n        }\n        this.clockMaker();\n        this.modalAnimation();\n    }\n    /**\n     * @return {?}\n     */\n    MinuteClick() {\n        /**\n         * We are not permitting user to select the minute.\n         * but anyway, it will return the standard time, if provided the default time.\n         */\n        if (this.config && this.config.onlyHour) {\n            return false;\n        }\n        this.ChangeAnimational('minute');\n    }\n    /**\n     * @return {?}\n     */\n    HourClick() {\n        /**\n         * We are not permitting user to select the minute.\n         * but anyway, it will return the standard time, if provided the default time.\n         */\n        if (this.config && this.config.onlyMinute) {\n            return false;\n        }\n        this.ChangeAnimational('hour');\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ChangeAnimational(type) {\n        if (this.clockType !== type) {\n            if (this.config.animation === 'fade') {\n                this.changeToMin = true;\n                setTimeout(() => {\n                    this.changeToMin = false;\n                    this.clockType = type;\n                    this.clockMaker();\n                }, 200);\n            }\n            else if (this.config.animation === 'rotate') {\n                this.animationTime = 0.4;\n                this.clockType = type;\n                this.clockMaker();\n            }\n            else {\n                this.clockType = type;\n                this.clockMaker();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    SetAM() {\n        if (this.config && this.config.onlyPM) {\n            return false;\n        }\n        this.time.ampm = 'AM';\n        this.checkBet();\n    }\n    /**\n     * @return {?}\n     */\n    SetPM() {\n        if (this.config && this.config.onlyAM) {\n            return false;\n        }\n        this.time.ampm = 'PM';\n        this.checkBet();\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    Close(e) {\n        if (e.target === e.currentTarget) {\n            if (this.isPopup === true) {\n                this.activeModal = false;\n                setTimeout(() => {\n                    this.appRef.detachView(this._ref.hostView);\n                    this._ref.destroy();\n                }, 400);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getClockArrowStyle() {\n        let /** @type {?} */ arrowStyle = {};\n        if (this.config.animation === 'rotate') {\n            arrowStyle = {\n                transform: 'rotate(' + this.degree + 'deg)',\n                '-webkit-transform': 'rotate(' + this.degree + 'deg)',\n                background: this.config.arrowStyle.background,\n                '-webkit-transition': 'transform ' + this.getAnimationTime(),\n                transition: 'transform ' + +this.getAnimationTime()\n            };\n        }\n        else {\n            arrowStyle = {\n                transform: 'rotate(' + this.degree + 'deg)',\n                '-webkit-transform': 'rotate(' + this.degree + 'deg)',\n                background: this.config.arrowStyle.background,\n            };\n        }\n        return arrowStyle;\n    }\n    /**\n     * @return {?}\n     */\n    getAnimationTime() {\n        return this.animationTime + 's';\n    }\n    /**\n     * Event on clock mouse click down\n     * @param {?} event - captured event\n     * @return {?}\n     */\n    updateClockDown(event) {\n        this.isClicked = true;\n        this.animationTime = 0;\n        this.getDegree(event);\n    }\n    /**\n     * @return {?}\n     */\n    setNewRotation() {\n        const /** @type {?} */ targetDegree = ((this.time.minute / 60) * 360) + 360;\n        const /** @type {?} */ targetDegree2 = targetDegree * 2;\n        const /** @type {?} */ diff1 = Math.abs(this.degree - targetDegree);\n        const /** @type {?} */ diff2 = Math.abs(this.degree - targetDegree2);\n        if (diff1 < diff2) {\n            this.rotationClass(targetDegree);\n        }\n        else {\n            this.rotationClass(targetDegree2);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    GetSeparator() {\n        if (this.preference && this.preference.separator) {\n            return this.preference.separator;\n        }\n        return ':';\n    }\n    /**\n     * @param {?} period\n     * @return {?}\n     */\n    GetPeriod(period) {\n        if (this.preference && this.preference.period) {\n            return this.preference.period(period);\n        }\n        return period;\n    }\n    /**\n     * @return {?}\n     */\n    GetMinute() {\n        if (this.preference && this.preference.minute) {\n            return this.preference.minute(this.time.minute);\n        }\n        let /** @type {?} */ min = this.time.minute.toString();\n        if (+min < 10) {\n            min = '0' + min;\n        }\n        return min;\n    }\n    /**\n     * @return {?}\n     */\n    GetHour() {\n        if (this.preference && this.preference.hour) {\n            return this.preference.hour(this.time.hour);\n        }\n        return this.time.hour;\n    }\n    /**\n     * @param {?} clock\n     * @return {?}\n     */\n    GetClockTime(clock) {\n        if (!this.preference) {\n            return clock.time;\n        }\n        if (this.clockType === 'hour' && this.preference.clockHour) {\n            return this.preference.clockHour(clock.time);\n        }\n        if (this.clockType === 'minute' && this.preference.clockMinute) {\n            return this.preference.clockMinute(clock.time);\n        }\n        return clock.time;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    GetLabel(key) {\n        const /** @type {?} */ defaults = {\n            'ok': 'Ok',\n            'cancel': 'Cancel'\n        };\n        if ((this.preference && this.preference.labels && this.preference.labels.ok)) {\n            defaults.ok = this.preference.labels.ok;\n        }\n        if ((this.preference && this.preference.labels && this.preference.labels.cancel)) {\n            defaults.cancel = this.preference.labels.cancel;\n        }\n        return defaults[key];\n    }\n}\nTimePickerComponent.ɵfac = function TimePickerComponent_Factory(t) { return new (t || TimePickerComponent)(ɵngcc0.ɵɵdirectiveInject(AtpCoreService)); };\nTimePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TimePickerComponent, selectors: [[\"time-picker\"]], decls: 26, vars: 45, consts: [[\"id\", \"time-picker-wrapper\", 3, \"ngClass\", \"click\"], [\"id\", \"time-picker\", 3, \"ngClass\"], [1, \"time-picker-header\"], [1, \"time-picker-selected-time\"], [1, \"time-picker-hour\", 3, \"ngClass\", \"click\"], [1, \"time-seprator\"], [1, \"time-picker-minute\", 3, \"ngClass\", \"click\"], [1, \"time-picker-selected-ampm\"], [1, \"time-picker-am\", 3, \"ngClass\", \"click\"], [1, \"time-picker-pm\", 3, \"ngClass\", \"click\"], [1, \"time-picker-content\"], [1, \"time-picker-clock\", 3, \"ngClass\", \"mousemove\", \"mousedown\", \"mouseup\"], [3, \"ngClass\", \"id\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"time-picker-clock-origin\", 3, \"ngStyle\"], [\"id\", \"tpc-arrow\", 1, \"time-picker-clock-arrow\", 3, \"ngStyle\"], [3, \"ngStyle\"], [1, \"time-picker-footer\"], [3, \"click\"], [1, \"atp-ref-dialog-close\", 3, \"click\"], [3, \"ngClass\", \"id\", \"ngStyle\"]], template: function TimePickerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function TimePickerComponent_Template_div_click_0_listener($event) { return ctx.Close($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵlistener(\"click\", function TimePickerComponent_Template_div_click_4_listener() { return ctx.HourClick(); });\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"span\", 5);\n        ɵngcc0.ɵɵtext(7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"div\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function TimePickerComponent_Template_div_click_8_listener() { return ctx.MinuteClick(); });\n        ɵngcc0.ɵɵtext(9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(11, \"div\", 8);\n        ɵngcc0.ɵɵlistener(\"click\", function TimePickerComponent_Template_div_click_11_listener() { return ctx.SetAM(); });\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(13, \"div\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function TimePickerComponent_Template_div_click_13_listener() { return ctx.SetPM(); });\n        ɵngcc0.ɵɵtext(14);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(16, \"div\", 11);\n        ɵngcc0.ɵɵlistener(\"mousemove\", function TimePickerComponent_Template_div_mousemove_16_listener($event) { return ctx.getDegree($event); })(\"mousedown\", function TimePickerComponent_Template_div_mousedown_16_listener($event) { return ctx.updateClockDown($event); })(\"mouseup\", function TimePickerComponent_Template_div_mouseup_16_listener() { return ctx.setTime(); });\n        ɵngcc0.ɵɵtemplate(17, TimePickerComponent_button_17_Template, 2, 11, \"button\", 12);\n        ɵngcc0.ɵɵelement(18, \"div\", 13);\n        ɵngcc0.ɵɵelementStart(19, \"div\", 14);\n        ɵngcc0.ɵɵelement(20, \"span\", 15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(21, \"div\", 16);\n        ɵngcc0.ɵɵelementStart(22, \"button\", 17);\n        ɵngcc0.ɵɵlistener(\"click\", function TimePickerComponent_Template_button_click_22_listener($event) { return ctx.Close($event); });\n        ɵngcc0.ɵɵtext(23);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(24, \"button\", 18);\n        ɵngcc0.ɵɵlistener(\"click\", function TimePickerComponent_Template_button_click_24_listener($event) { ctx.GetTime(); return ctx.Close($event); });\n        ɵngcc0.ɵɵtext(25);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.config.theme);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(25, _c2, ctx.activeModal, !ctx.isPopup));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(28, _c2, ctx.activeModal, !ctx.isPopup));\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(31, _c3, ctx.clockType == \"hour\"));\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.config.onlyMinute ? \"disabled\" : null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.GetHour());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.GetSeparator());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(33, _c3, ctx.clockType == \"minute\"));\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.config.onlyHour ? \"disabled\" : null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.GetMinute());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(35, _c3, ctx.time.ampm == \"AM\"));\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.config.onlyPM ? \"disabled\" : null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.GetPeriod(\"AM\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(37, _c3, ctx.time.ampm == \"PM\"));\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.config.onlyAM ? \"disabled\" : null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.GetPeriod(\"PM\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(39, _c4, ctx.changeToMin));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.clockObject);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(41, _c5, ctx.config.arrowStyle.background));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.getClockArrowStyle());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(43, _c5, ctx.config.arrowStyle.background));\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.GetLabel(\"cancel\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.GetLabel(\"ok\"));\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgStyle], styles: [\"#time-picker-wrapper[_ngcontent-%COMP%] {\\n      position: fixed;\\n      top: 0;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      background: transparent;\\n      -webkit-transition: background 0.4s;\\n      transition: background 0.4s;\\n      font-family: 'Roboto', sans-serif;\\n      z-index: 1000; }\\n      #time-picker-wrapper.static[_ngcontent-%COMP%] {\\n        position: relative !important;\\n        background: transparent !important;\\n        display: inline-block;\\n        z-index: 0; }\\n      #time-picker-wrapper.active[_ngcontent-%COMP%] {\\n        background: rgba(0, 0, 0, 0.3); }\\n      #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%] {\\n        background: #424242; }\\n        #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%] {\\n          border-bottom: none;\\n          background: #555555; }\\n          #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%] {\\n            color: #999; }\\n            #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n          #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%] {\\n            color: #999; }\\n            #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n        #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%] {\\n          background: #555555; }\\n          #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] {\\n            color: #fff; }\\n        #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%] {\\n          border-top: none; }\\n          #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            background: #555555;\\n            color: #fff; }\\n            #time-picker-wrapper.dark[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n              background: #777; }\\n      #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%] {\\n        background: #fff; }\\n        #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%] {\\n          border-bottom: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%] {\\n            color: #aaa; }\\n            #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #000; }\\n          #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%] {\\n            color: #aaa; }\\n            #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #000; }\\n        #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%] {\\n          background: #ededed; }\\n          #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] {\\n            color: #000; }\\n            #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button.active[_ngcontent-%COMP%] {\\n              background: blue;\\n              color: #fff; }\\n          #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-origin[_ngcontent-%COMP%] {\\n            background: blue; }\\n          #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%] {\\n            background: blue; }\\n            #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n              background: blue; }\\n        #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%] {\\n          border-top: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            background: #f1f1f1; }\\n            #time-picker-wrapper.light[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n              background: #ddd; }\\n      #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%] {\\n        background: #fff; }\\n        #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%] {\\n          background-color: #00897b;\\n          border-bottom: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n          #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n        #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%] {\\n          background: #ededed; }\\n          #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] {\\n            color: #000; }\\n            #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button.active[_ngcontent-%COMP%] {\\n              background: #00897b;\\n              color: #fff; }\\n          #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-origin[_ngcontent-%COMP%] {\\n            background: #00897b; }\\n          #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%] {\\n            background: #00897b; }\\n            #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n              background: #00897b; }\\n        #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%] {\\n          border-top: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            font-weight: bold;\\n            text-transform: uppercase;\\n            background: transparent;\\n            color: #00897b; }\\n            #time-picker-wrapper.material-green[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n              background: #ddd; }\\n      #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%] {\\n        background: #fff; }\\n        #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%] {\\n          background-color: #3F51B5;\\n          border-bottom: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n          #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n        #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%] {\\n          background: #ededed; }\\n          #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] {\\n            color: #000; }\\n            #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button.active[_ngcontent-%COMP%] {\\n              background: #3F51B5;\\n              color: #fff; }\\n          #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-origin[_ngcontent-%COMP%] {\\n            background: #3F51B5; }\\n          #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%] {\\n            background: #3F51B5; }\\n            #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n              background: #3F51B5; }\\n        #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%] {\\n          border-top: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            font-weight: bold;\\n            text-transform: uppercase;\\n            background: transparent;\\n            color: #3F51B5; }\\n            #time-picker-wrapper.material-blue[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n              background: #ddd; }\\n      #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%] {\\n        background: #fff; }\\n        #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%] {\\n          background-color: #F44336;\\n          border-bottom: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n          #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n        #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%] {\\n          background: #ededed; }\\n          #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] {\\n            color: #000; }\\n            #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button.active[_ngcontent-%COMP%] {\\n              background: #F44336;\\n              color: #fff; }\\n          #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-origin[_ngcontent-%COMP%] {\\n            background: #F44336; }\\n          #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%] {\\n            background: #F44336; }\\n            #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n              background: #F44336; }\\n        #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%] {\\n          border-top: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            font-weight: bold;\\n            text-transform: uppercase;\\n            background: transparent;\\n            color: #F44336; }\\n            #time-picker-wrapper.material-red[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n              background: #ddd; }\\n      #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%] {\\n        background: #fff; }\\n        #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%] {\\n          background-color: #9C27B0;\\n          border-bottom: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n          #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n        #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%] {\\n          background: #ededed; }\\n          #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] {\\n            color: #000; }\\n            #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button.active[_ngcontent-%COMP%] {\\n              background: #9C27B0;\\n              color: #fff; }\\n          #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-origin[_ngcontent-%COMP%] {\\n            background: #9C27B0; }\\n          #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%] {\\n            background: #9C27B0; }\\n            #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n              background: #9C27B0; }\\n        #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%] {\\n          border-top: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            font-weight: bold;\\n            text-transform: uppercase;\\n            background: transparent;\\n            color: #9C27B0; }\\n            #time-picker-wrapper.material-purple[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n              background: #ddd; }\\n      #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%] {\\n        background: #fff; }\\n        #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%] {\\n          background-color: #FF9800;\\n          border-bottom: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n          #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%] {\\n            color: rgba(255, 255, 255, 0.4); }\\n            #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div.selected[_ngcontent-%COMP%] {\\n              color: #fff; }\\n        #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%] {\\n          background: #ededed; }\\n          #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] {\\n            color: #000; }\\n            #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]    > button.active[_ngcontent-%COMP%] {\\n              background: #FF9800;\\n              color: #fff; }\\n          #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-origin[_ngcontent-%COMP%] {\\n            background: #FF9800; }\\n          #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%] {\\n            background: #FF9800; }\\n            #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n              background: #FF9800; }\\n        #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%] {\\n          border-top: 1px solid #e1e1e1; }\\n          #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            font-weight: bold;\\n            text-transform: uppercase;\\n            background: transparent;\\n            color: #FF9800; }\\n            #time-picker-wrapper.material-orange[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n              background: #ddd; }\\n      #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%] {\\n        width: 325px;\\n        height: auto;\\n        -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\\n                box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\\n        border-radius: 2px;\\n        margin: 15vh auto !important;\\n        -webkit-transform: scale(0.5) !important;\\n                transform: scale(0.5) !important;\\n        -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\\n        transition: opacity 0.3s, -webkit-transform 0.3s;\\n        transition: transform 0.3s, opacity 0.3s;\\n        transition: transform 0.3s, opacity 0.3s, -webkit-transform 0.3s;\\n        opacity: 0; }\\n        #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker.static[_ngcontent-%COMP%] {\\n          margin: 0px !important;\\n          -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 0 7px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\\n                  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 0 7px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12); }\\n        #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker.active[_ngcontent-%COMP%] {\\n          -webkit-transform: scale(1) !important;\\n                  transform: scale(1) !important;\\n          opacity: 1; }\\n        #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%] {\\n          text-align: center;\\n          padding: 15px 0px; }\\n          #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%] {\\n            font-size: 35px;\\n            padding: 5px 0px; }\\n            #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n              display: inline-block;\\n              cursor: pointer; }\\n              #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-time[_ngcontent-%COMP%]   div[disabled=true][_ngcontent-%COMP%] {\\n                cursor: default; }\\n          #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%] {\\n            font-size: 18px; }\\n            #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n              display: inline-block;\\n              padding: 0 5px;\\n              cursor: pointer; }\\n              #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-header[_ngcontent-%COMP%]   .time-picker-selected-ampm[_ngcontent-%COMP%]   div[disabled=true][_ngcontent-%COMP%] {\\n                cursor: default; }\\n        #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-content[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%] {\\n          width: 200px;\\n          height: 200px;\\n          padding: 24px;\\n          border-radius: 50%;\\n          cursor: pointer;\\n          margin: 25px auto;\\n          position: relative;\\n          user-select: none;\\n          -moz-user-select: none;\\n          -ms-user-select: none;\\n          -webkit-user-select: none;\\n          opacity: 1;\\n          -webkit-transform: scale(1);\\n                  transform: scale(1);\\n          -webkit-transition: opacity 0.3s, transform 0.3s;\\n          -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\\n          transition: opacity 0.3s, -webkit-transform 0.3s;\\n          transition: opacity 0.3s, transform 0.3s;\\n          transition: opacity 0.3s, transform 0.3s, -webkit-transform 0.3s; }\\n          #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-content[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            border: none;\\n            position: absolute;\\n            width: 35px;\\n            height: 35px;\\n            border-radius: 50%;\\n            cursor: pointer;\\n            font-size: 17px;\\n            text-align: center;\\n            padding: 0;\\n            -webkit-transition: all .2s;\\n            transition: all .2s;\\n            z-index: 3; }\\n          #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-content[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-origin[_ngcontent-%COMP%] {\\n            width: 6px;\\n            height: 6px;\\n            border-radius: 50%;\\n            position: absolute;\\n            left: 50%;\\n            top: 50%;\\n            margin-left: -3px;\\n            margin-top: -3px; }\\n          #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-content[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%] {\\n            width: 2px;\\n            height: 41%;\\n            position: absolute;\\n            left: 0;\\n            top: 22px;\\n            right: 0;\\n            margin: auto;\\n            -webkit-transform-origin: top left;\\n            transform-origin: bottom; }\\n            #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-content[_ngcontent-%COMP%]   .time-picker-clock[_ngcontent-%COMP%]   .time-picker-clock-arrow[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n              width: 8px;\\n              height: 8px;\\n              border-radius: 50%;\\n              position: absolute;\\n              top: 0;\\n              right: -3px; }\\n          #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-content[_ngcontent-%COMP%]   .time-picker-clock.hide-time-picker-clock[_ngcontent-%COMP%] {\\n            opacity: 0;\\n            -webkit-transform: scale(0.8);\\n                    transform: scale(0.8); }\\n        #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%] {\\n          padding: 15px;\\n          text-align: right; }\\n          #time-picker-wrapper[_ngcontent-%COMP%]   #time-picker[_ngcontent-%COMP%]   .time-picker-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            border: transparent;\\n            margin-left: 10px;\\n            padding: 10px;\\n            font-size: 14px;\\n            border-radius: 2px;\\n            cursor: pointer; }\\n\\n    *[_ngcontent-%COMP%] {\\n      outline: none;\\n      -webkit-box-sizing: content-box;\\n              box-sizing: content-box; }\"] });\n/**\n * @nocollapse\n */\nTimePickerComponent.ctorParameters = () => [\n    { type: AtpCoreService, },\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimePickerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'time-picker',\n                template: `\n    <div id=\"time-picker-wrapper\" class=\"{{config.theme}}\" [ngClass]=\"{'active': activeModal, 'static': !isPopup}\" (click)=\"Close($event);\">\n      <div id=\"time-picker\" [ngClass]=\"{'active': activeModal, 'static': !isPopup}\">\n        <div class=\"time-picker-header\">\n          <div class=\"time-picker-selected-time\">\n              <div class=\"time-picker-hour\" (click)=\"HourClick()\" [attr.disabled]=\"(config.onlyMinute) ? 'disabled' : null\"\n                [ngClass]=\"{'selected' : clockType == 'hour'}\">{{GetHour()}}</div>\n              <span class=\"time-seprator\">{{GetSeparator()}}</span>\n              <div class=\"time-picker-minute\" (click)=\"MinuteClick();\" [attr.disabled]=\"(config.onlyHour) ? 'disabled' : null\"\n                [ngClass]=\"{'selected' : clockType == 'minute'}\">{{GetMinute()}}</div>\n          </div>\n          <div class=\"time-picker-selected-ampm\">\n            <div class=\"time-picker-am\" (click)=\"SetAM();\" [attr.disabled]=\"(config.onlyPM) ? 'disabled' : null\" [ngClass]=\"{'selected' : time.ampm == 'AM'}\">{{GetPeriod('AM')}}</div>\n            <div class=\"time-picker-pm\" (click)=\"SetPM();\" [attr.disabled]=\"(config.onlyAM) ? 'disabled' : null\" [ngClass]=\"{'selected' : time.ampm == 'PM'}\">{{GetPeriod('PM')}}</div>\n\n          </div>\n        </div>\n        <div class=\"time-picker-content\">\n            <div class=\"time-picker-clock\" [ngClass]=\"{'hide-time-picker-clock': changeToMin}\"  (mousemove)=\"getDegree($event);\" (mousedown)=\"updateClockDown($event)\" (mouseup)=\"setTime();\">\n              <button *ngFor=\"let clock of clockObject\" [ngClass]=\"{'active' : nowTime == clock.time}\"\n                [id]=\"'timepicker-item-id-' + clock.time\"\n                [ngStyle]=\"{top: clock.top,left: clock.left, color: nowTime == clock.time ? config.arrowStyle.color :  '', background: nowTime == clock.time ? config.arrowStyle.background : 'transparent'}\">\n                {{GetClockTime(clock)}}\n              </button>\n              <div class=\"time-picker-clock-origin\" [ngStyle]=\"{ background: config.arrowStyle.background}\"></div>\n              <div id=\"tpc-arrow\" class=\"time-picker-clock-arrow\" [ngStyle]=\"getClockArrowStyle()\">\n                <span [ngStyle]=\"{ background: config.arrowStyle.background }\"></span>\n              </div>\n            </div>\n        </div>\n        <div class=\"time-picker-footer\">\n            <button (click)=\"Close($event);\">{{GetLabel('cancel')}}</button>\n            <button (click)=\"GetTime();Close($event);\" class=\"atp-ref-dialog-close\">{{GetLabel('ok')}}</button>\n        </div>\n      </div>\n    </div>\n  `,\n                styles: [`\n    #time-picker-wrapper {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background: transparent;\n      -webkit-transition: background 0.4s;\n      transition: background 0.4s;\n      font-family: 'Roboto', sans-serif;\n      z-index: 1000; }\n      #time-picker-wrapper.static {\n        position: relative !important;\n        background: transparent !important;\n        display: inline-block;\n        z-index: 0; }\n      #time-picker-wrapper.active {\n        background: rgba(0, 0, 0, 0.3);\n        z-index:1000000000000 !importent;\n    }\n      #time-picker-wrapper.dark #time-picker {\n        background: #424242; }\n        #time-picker-wrapper.dark #time-picker .time-picker-header {\n          border-bottom: none;\n          background: #555555; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.dark #time-picker .time-picker-clock {\n          background: #555555; }\n          #time-picker-wrapper.dark #time-picker .time-picker-clock > button {\n            color: #fff; }\n        #time-picker-wrapper.dark #time-picker .time-picker-footer {\n          border-top: none; }\n          #time-picker-wrapper.dark #time-picker .time-picker-footer button {\n            background: #555555;\n            color: #fff; }\n            #time-picker-wrapper.dark #time-picker .time-picker-footer button:hover {\n              background: #777; }\n      #time-picker-wrapper.light #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.light #time-picker .time-picker-header {\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #000; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #000; }\n        #time-picker-wrapper.light #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.light #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.light #time-picker .time-picker-clock > button.active {\n              background: blue;\n              color: #fff; }\n          #time-picker-wrapper.light #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: blue; }\n          #time-picker-wrapper.light #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: blue; }\n            #time-picker-wrapper.light #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: blue; }\n        #time-picker-wrapper.light #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-footer button {\n            background: #f1f1f1; }\n            #time-picker-wrapper.light #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-green #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-green #time-picker .time-picker-header {\n          background-color: #00897b;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-green #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-green #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-green #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-green #time-picker .time-picker-clock > button.active {\n              background: #00897b;\n              color: #fff; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #00897b; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #00897b; }\n            #time-picker-wrapper.material-green #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #00897b; }\n        #time-picker-wrapper.material-green #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #00897b; }\n            #time-picker-wrapper.material-green #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-blue #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-blue #time-picker .time-picker-header {\n          background-color: #3F51B5;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-blue #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-clock > button.active {\n              background: #3F51B5;\n              color: #fff; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #3F51B5; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #3F51B5; }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #3F51B5; }\n        #time-picker-wrapper.material-blue #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #3F51B5; }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-red #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-red #time-picker .time-picker-header {\n          background-color: #F44336;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-red #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-red #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-red #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-red #time-picker .time-picker-clock > button.active {\n              background: #F44336;\n              color: #fff; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #F44336; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #F44336; }\n            #time-picker-wrapper.material-red #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #F44336; }\n        #time-picker-wrapper.material-red #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #F44336; }\n            #time-picker-wrapper.material-red #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-purple #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-purple #time-picker .time-picker-header {\n          background-color: #9C27B0;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-purple #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-clock > button.active {\n              background: #9C27B0;\n              color: #fff; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #9C27B0; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #9C27B0; }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #9C27B0; }\n        #time-picker-wrapper.material-purple #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #9C27B0; }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-orange #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-orange #time-picker .time-picker-header {\n          background-color: #FF9800;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-orange #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-clock > button.active {\n              background: #FF9800;\n              color: #fff; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #FF9800; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #FF9800; }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #FF9800; }\n        #time-picker-wrapper.material-orange #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #FF9800; }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper #time-picker {\n        width: 325px;\n        height: auto;\n        -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n                box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n        border-radius: 2px;\n        margin: 15vh auto !important;\n        -webkit-transform: scale(0.5) !important;\n                transform: scale(0.5) !important;\n        -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: transform 0.3s, opacity 0.3s;\n        transition: transform 0.3s, opacity 0.3s, -webkit-transform 0.3s;\n        opacity: 0; }\n        #time-picker-wrapper #time-picker.static {\n          margin: 0px !important;\n          -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 0 7px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n                  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 0 7px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12); }\n        #time-picker-wrapper #time-picker.active {\n          -webkit-transform: scale(1) !important;\n                  transform: scale(1) !important;\n          opacity: 1; }\n        #time-picker-wrapper #time-picker .time-picker-header {\n          text-align: center;\n          padding: 15px 0px; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time {\n            font-size: 35px;\n            padding: 5px 0px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time div {\n              display: inline-block;\n              cursor: pointer; }\n              #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time div[disabled=true] {\n                cursor: default; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm {\n            font-size: 18px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm div {\n              display: inline-block;\n              padding: 0 5px;\n              cursor: pointer; }\n              #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm div[disabled=true] {\n                cursor: default; }\n        #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock {\n          width: 200px;\n          height: 200px;\n          padding: 24px;\n          border-radius: 50%;\n          cursor: pointer;\n          margin: 25px auto;\n          position: relative;\n          user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          opacity: 1;\n          -webkit-transform: scale(1);\n                  transform: scale(1);\n          -webkit-transition: opacity 0.3s, transform 0.3s;\n          -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\n          transition: opacity 0.3s, -webkit-transform 0.3s;\n          transition: opacity 0.3s, transform 0.3s;\n          transition: opacity 0.3s, transform 0.3s, -webkit-transform 0.3s; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button {\n            border: none;\n            position: absolute;\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            cursor: pointer;\n            font-size: 17px;\n            text-align: center;\n            padding: 0;\n            -webkit-transition: all .2s;\n            transition: all .2s;\n            z-index: 3; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-origin {\n            width: 6px;\n            height: 6px;\n            border-radius: 50%;\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            margin-left: -3px;\n            margin-top: -3px; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow {\n            width: 2px;\n            height: 41%;\n            position: absolute;\n            left: 0;\n            top: 22px;\n            right: 0;\n            margin: auto;\n            -webkit-transform-origin: top left;\n            transform-origin: bottom; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow span {\n              width: 8px;\n              height: 8px;\n              border-radius: 50%;\n              position: absolute;\n              top: 0;\n              right: -3px; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock.hide-time-picker-clock {\n            opacity: 0;\n            -webkit-transform: scale(0.8);\n                    transform: scale(0.8); }\n        #time-picker-wrapper #time-picker .time-picker-footer {\n          padding: 15px;\n          text-align: right; }\n          #time-picker-wrapper #time-picker .time-picker-footer button {\n            border: transparent;\n            margin-left: 10px;\n            padding: 10px;\n            font-size: 14px;\n            border-radius: 2px;\n            cursor: pointer; }\n\n    * {\n      outline: none;\n      -webkit-box-sizing: content-box;\n              box-sizing: content-box; }\n  `]\n            }]\n    }], function () { return [{ type: AtpCoreService }]; }, null); })();\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof commonjsGlobal !== 'undefined' && commonjsGlobal;\nvar _root = __window || __global || __self;\nvar root_1 = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n\nvar root = {\n\troot: root_1\n};\n\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nvar isFunction_2 = isFunction;\n\n\nvar isFunction_1 = {\n\tisFunction: isFunction_2\n};\n\nvar isArray_1 = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArray = {\n\tisArray: isArray_1\n};\n\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nvar isObject_2 = isObject;\n\n\nvar isObject_1 = {\n\tisObject: isObject_2\n};\n\n// typeof any so that it we don't have to cast when comparing a result to the error object\nvar errorObject_1 = { e: {} };\n\n\nvar errorObject = {\n\terrorObject: errorObject_1\n};\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.errorObject.e = e;\n        return errorObject.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nvar tryCatch_2 = tryCatch;\n\n\n\nvar tryCatch_1 = {\n\ttryCatch: tryCatch_2\n};\n\nvar __extends$2 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError$1 = (function (_super) {\n    __extends$2(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nvar UnsubscriptionError_2 = UnsubscriptionError$1;\n\n\nvar UnsubscriptionError_1 = {\n\tUnsubscriptionError: UnsubscriptionError_2\n};\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription$1 = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.errorObject.e.errors) : [errorObject.errorObject.e]);\n            }\n        }\n        if (isArray.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nvar Subscription_2 = Subscription$1;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n\nvar Subscription_1 = {\n\tSubscription: Subscription_2\n};\n\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n\n\nvar Observer = {\n\tempty: empty\n};\n\nvar rxSubscriber = createCommonjsModule(function (module, exports) {\nvar Symbol = root.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n\n});\n\nvar rxSubscriber_1 = rxSubscriber.rxSubscriber;\nvar rxSubscriber_2 = rxSubscriber.$$rxSubscriber;\n\nvar __extends$1 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber$1 = (function (_super) {\n    __extends$1(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): To resolve an issue where Node users may have multiple\n                    // copies of rxjs in their node_modules directory.\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber.rxSubscriber]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated internal use only */ Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nvar Subscriber_2 = Subscriber$1;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends$1(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    /** @deprecated internal use only */ SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber$1));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber$1 || ('syncErrorThrowable' in obj && obj[rxSubscriber.rxSubscriber]);\n}\n\n\nvar Subscriber_1 = {\n\tSubscriber: Subscriber_2\n};\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nvar toSubscriber_2 = toSubscriber;\n\n\nvar toSubscriber_1 = {\n\ttoSubscriber: toSubscriber_2\n};\n\nvar observable = createCommonjsModule(function (module, exports) {\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n\n});\n\nvar observable_1 = observable.getSymbolObservable;\nvar observable_2 = observable.observable;\nvar observable_3 = observable.$$observable;\n\n/* tslint:disable:no-empty */\nfunction noop() { }\nvar noop_2 = noop;\n\n\nvar noop_1 = {\n\tnoop: noop_2\n};\n\n/* tslint:enable:max-line-length */\nfunction pipe$1() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nvar pipe_2 = pipe$1;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nvar pipeFromArray_1 = pipeFromArray;\n\n\nvar pipe_1 = {\n\tpipe: pipe_2,\n\tpipeFromArray: pipeFromArray_1\n};\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable$1 = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated internal use only */ Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nvar Observable_2 = Observable$1;\n\n\nvar Observable_1 = {\n\tObservable: Observable_2\n};\n\nvar __extends$3 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError$1 = (function (_super) {\n    __extends$3(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nvar ObjectUnsubscribedError_2 = ObjectUnsubscribedError$1;\n\n\nvar ObjectUnsubscribedError_1 = {\n\tObjectUnsubscribedError: ObjectUnsubscribedError_2\n};\n\nvar __extends$4 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends$4(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nvar SubjectSubscription_2 = SubjectSubscription;\n\n\nvar SubjectSubscription_1 = {\n\tSubjectSubscription: SubjectSubscription_2\n};\n\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nvar SubjectSubscriber_1 = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject$1 = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject$1(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated internal use only */ Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject$1(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nvar Subject_2 = Subject$1;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject$1 = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated internal use only */ AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject$1));\nvar AnonymousSubject_1 = AnonymousSubject$1;\n\n\nvar Subject_1 = {\n\tSubjectSubscriber: SubjectSubscriber_1,\n\tSubject: Subject_2,\n\tAnonymousSubject: AnonymousSubject_1\n};\n\nvar __extends$6 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject$1 = (function (_super) {\n    __extends$6(AsyncSubject, _super);\n    function AsyncSubject() {\n        _super.apply(this, arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    /** @deprecated internal use only */ AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nvar AsyncSubject_2 = AsyncSubject$1;\n\n\nvar AsyncSubject_1 = {\n\tAsyncSubject: AsyncSubject_2\n};\n\nvar __extends$5 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundCallbackObservable = (function (_super) {\n    __extends$5(BoundCallbackObservable, _super);\n    function BoundCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.context = context;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a callback API to a function that returns an Observable.\n     *\n     * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n     * it will return a function `g` that when called as `g(x)` will output an\n     * Observable.</span>\n     *\n     * `bindCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, the\n     * last parameter must be a callback function that `func` calls when it is\n     * done.\n     *\n     * The output of `bindCallback` is a function that takes the same parameters\n     * as `func`, except the last one (the callback). When the output function\n     * is called with arguments it will return an Observable. If function `func`\n     * calls its callback with one argument the Observable will emit that value.\n     * If on the other hand the callback is called with multiple values the resulting\n     * Observable will emit an array with said values as arguments.\n     *\n     * It is very important to remember that input function `func` is not called\n     * when the output function is, but rather when the Observable returned by the output\n     * function is subscribed. This means if `func` makes an AJAX request, that request\n     * will be made every time someone subscribes to the resulting Observable, but not before.\n     *\n     * Optionally, a selector function can be passed to `bindObservable`. The selector function\n     * takes the same arguments as the callback and returns the value that will be emitted by the Observable.\n     * Even though by default multiple arguments passed to callback appear in the stream as an array\n     * the selector function will be called with arguments directly, just as the callback would.\n     * This means you can imagine the default selector (when one is not provided explicitly)\n     * as a function that aggregates all its arguments into an array, or simply returns first argument\n     * if there is only one.\n     *\n     * The last optional parameter - {@link Scheduler} - can be used to control when the call\n     * to `func` happens after someone subscribes to Observable, as well as when results\n     * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n     * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n     * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n     * and call `subscribe` on the output Observable all function calls that are currently executing\n     * will end before `func` is invoked.\n     *\n     * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n     * In particular, if the callback is called synchronously the subscription of the resulting Observable\n     * will call the `next` function synchronously as well.  If you want to defer that call,\n     * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n     * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n     *\n     * Note that the Observable created by the output function will always emit a single value\n     * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n     * calls will not appear in the stream. If you need to listen for multiple calls,\n     *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n     *\n     * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n     * will be the context that the output function has at call time. In particular, if `func`\n     * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n     * it is recommended that the context of the output function is set to that object as well.\n     *\n     * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n     * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n     * provides convenient error handling and probably is a better choice.\n     * `bindCallback` will treat such functions the same as any other and error parameters\n     * (whether passed or not) will always be interpreted as regular callback argument.\n     *\n     *\n     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n     * // Suppose we have jQuery.getJSON('/my/url', callback)\n     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n     * var result = getJSONAsObservable('/my/url');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Receive an array of arguments passed to a callback</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 5\n     *   console.log(b); // 'some string'\n     *   console.log(c); // {someProperty: 'someValue'}\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);\n     * boundSomeFunction().subscribe(values => {\n     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n     * });\n     *\n     *\n     * @example <caption>Use bindCallback with a selector function</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 'a'\n     *   console.log(b); // 'b'\n     *   console.log(c); // 'c'\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);\n     * boundSomeFunction().subscribe(value => {\n     *   console.log(value) // 'abc'\n     * });\n     *\n     *\n     * @example <caption>Compare behaviour with and without async Scheduler</caption>\n     * function iCallMyCallbackSynchronously(cb) {\n     *   cb();\n     * }\n     *\n     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);\n     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n     *\n     * boundSyncFn().subscribe(() => console.log('I was sync!'));\n     * boundAsyncFn().subscribe(() => console.log('I was async!'));\n     * console.log('This happened...');\n     *\n     * // Logs:\n     * // I was sync!\n     * // This happened...\n     * // I was async!\n     *\n     *\n     * @example <caption>Use bindCallback on an object method</caption>\n     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);\n     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n     * .subscribe(subscriber);\n     *\n     *\n     * @see {@link bindNodeCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func A function with a callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps them to a value that is emitted on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the callback would deliver.\n     * @static true\n     * @name bindCallback\n     * @owner Observable\n     */\n    BoundCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    /** @deprecated internal use only */ BoundCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject.errorObject) {\n                            subject.error(errorObject.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject.errorObject) {\n                    subject.error(errorObject.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    BoundCallbackObservable.dispatch = function (state) {\n        var self = this;\n        var source = state.source, subscriber = state.subscriber, context = state.context;\n        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n        var subject = source.subject;\n        if (!subject) {\n            subject = source.subject = new AsyncSubject_1.AsyncSubject();\n            var handler = function handlerFn() {\n                var innerArgs = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    innerArgs[_i - 0] = arguments[_i];\n                }\n                var source = handlerFn.source;\n                var selector = source.selector, subject = source.subject;\n                if (selector) {\n                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                    if (result_2 === errorObject.errorObject) {\n                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.errorObject.e, subject: subject }));\n                    }\n                    else {\n                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                    }\n                }\n                else {\n                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n                }\n            };\n            // use named function to pass values in without closure\n            handler.source = source;\n            var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\n            if (result === errorObject.errorObject) {\n                subject.error(errorObject.errorObject.e);\n            }\n        }\n        self.add(subject.subscribe(subscriber));\n    };\n    return BoundCallbackObservable;\n}(Observable_1.Observable));\nvar BoundCallbackObservable_2 = BoundCallbackObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n\n\nvar BoundCallbackObservable_1 = {\n\tBoundCallbackObservable: BoundCallbackObservable_2\n};\n\nvar bindCallback_1 = BoundCallbackObservable_1.BoundCallbackObservable.create;\n\n\nvar bindCallback$2 = {\n\tbindCallback: bindCallback_1\n};\n\nObservable_1.Observable.bindCallback = bindCallback$2.bindCallback;\n\nvar __extends$7 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundNodeCallbackObservable = (function (_super) {\n    __extends$7(BoundNodeCallbackObservable, _super);\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.context = context;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a Node.js-style callback API to a function that returns an\n     * Observable.\n     *\n     * <span class=\"informal\">It's just like {@link bindCallback}, but the\n     * callback is expected to be of type `callback(error, result)`.</span>\n     *\n     * `bindNodeCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The callback function is expected to follow Node.js conventions,\n     * where the first argument to the callback is an error object, signaling\n     * whether call was successful. If that object is passed to callback, it means\n     * something went wrong.\n     *\n     * The output of `bindNodeCallback` is a function that takes the same\n     * parameters as `func`, except the last one (the callback). When the output\n     * function is called with arguments, it will return an Observable.\n     * If `func` calls its callback with error parameter present, Observable will\n     * error with that value as well. If error parameter is not passed, Observable will emit\n     * second parameter. If there are more parameters (third and so on),\n     * Observable will emit an array with all arguments, except first error argument.\n     *\n     * Optionally `bindNodeCallback` accepts selector function, which allows you to\n     * make resulting Observable emit value computed by selector, instead of regular\n     * callback arguments. It works similarly to {@link bindCallback} selector, but\n     * Node.js-style error argument will never be passed to that function.\n     *\n     * Note that `func` will not be called at the same time output function is,\n     * but rather whenever resulting Observable is subscribed. By default call to\n     * `func` will happen synchronously after subscription, but that can be changed\n     * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n     * can also control when values from callback will be emitted by Observable.\n     * To find out more, check out documentation for {@link bindCallback}, where\n     * Scheduler works exactly the same.\n     *\n     * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n     * of returned function, when it is called.\n     *\n     * After Observable emits value, it will complete immediately. This means\n     * even if `func` calls callback again, values from second and consecutive\n     * calls will never appear on the stream. If you need to handle functions\n     * that call callbacks multiple times, check out {@link fromEvent} or\n     * {@link fromEventPattern} instead.\n     *\n     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n     * \"Node.js-style\" callbacks are just a convention, so if you write for\n     * browsers or any other environment and API you use implements that callback style,\n     * `bindNodeCallback` can be safely used on that API functions as well.\n     *\n     * Remember that Error object passed to callback does not have to be an instance\n     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n     * Error parameter of callback function is interpreted as \"present\", when value\n     * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n     * string or boolean `true`. In all of these cases resulting Observable would error\n     * with that value. This means usually regular style callbacks will fail very often when\n     * `bindNodeCallback` is used. If your Observable errors much more often then you\n     * would expect, check if callback really is called in Node.js-style and, if not,\n     * switch to {@link bindCallback} instead.\n     *\n     * Note that even if error parameter is technically present in callback, but its value\n     * is falsy, it still won't appear in array emitted by Observable or in selector function.\n     *\n     *\n     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n     * import * as fs from 'fs';\n     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n     * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Use on function calling callback with multiple arguments</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // null\n     *   console.log(a); // 5\n     *   console.log(b); // \"some string\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // [5, \"some string\"]\n     * });\n     *\n     *\n     * @example <caption>Use with selector function</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // undefined\n     *   console.log(a); // \"abc\"\n     *   console.log(b); // \"DEF\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // \"abcDEF\"\n     * });\n     *\n     *\n     * @example <caption>Use on function calling callback in regular style</caption>\n     * someFunction(a => {\n     *   console.log(a); // 5\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(\n     *   value => {}             // never gets called\n     *   err => console.log(err) // 5\n     *);\n     *\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a Node.js-style callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps those to a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the Node.js callback would\n     * deliver.\n     * @static true\n     * @name bindNodeCallback\n     * @owner Observable\n     */\n    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundNodeCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    /** @deprecated internal use only */ BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    var err = innerArgs.shift();\n                    if (err) {\n                        subject.error(err);\n                    }\n                    else if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject.errorObject) {\n                            subject.error(errorObject.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject.errorObject) {\n                    subject.error(errorObject.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    return BoundNodeCallbackObservable;\n}(Observable_1.Observable));\nvar BoundNodeCallbackObservable_2 = BoundNodeCallbackObservable;\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber, context = state.context;\n    // XXX: cast to `any` to access to the private field in `source`.\n    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i - 0] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            var err = innerArgs.shift();\n            if (err) {\n                self.add(scheduler.schedule(dispatchError$1, 0, { err: err, subject: subject }));\n            }\n            else if (selector) {\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject.errorObject) {\n                    self.add(scheduler.schedule(dispatchError$1, 0, { err: errorObject.errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext$1, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext$1, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\n        if (result === errorObject.errorObject) {\n            self.add(scheduler.schedule(dispatchError$1, 0, { err: errorObject.errorObject.e, subject: subject }));\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext$1(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError$1(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n\n\nvar BoundNodeCallbackObservable_1 = {\n\tBoundNodeCallbackObservable: BoundNodeCallbackObservable_2\n};\n\nvar bindNodeCallback_1 = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;\n\n\nvar bindNodeCallback$2 = {\n\tbindNodeCallback: bindNodeCallback_1\n};\n\nObservable_1.Observable.bindNodeCallback = bindNodeCallback$2.bindNodeCallback;\n\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nvar isScheduler_2 = isScheduler;\n\n\nvar isScheduler_1 = {\n\tisScheduler: isScheduler_2\n};\n\nvar __extends$9 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends$9(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nvar ScalarObservable_2 = ScalarObservable;\n\n\nvar ScalarObservable_1 = {\n\tScalarObservable: ScalarObservable_2\n};\n\nvar __extends$10 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends$10(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    /** @deprecated internal use only */ EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nvar EmptyObservable_2 = EmptyObservable;\n\n\nvar EmptyObservable_1 = {\n\tEmptyObservable: EmptyObservable_2\n};\n\nvar __extends$8 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends$8(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nvar ArrayObservable_2 = ArrayObservable;\n\n\nvar ArrayObservable_1 = {\n\tArrayObservable: ArrayObservable_2\n};\n\nvar __extends$12 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends$12(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nvar OuterSubscriber_2 = OuterSubscriber;\n\n\nvar OuterSubscriber_1 = {\n\tOuterSubscriber: OuterSubscriber_2\n};\n\nvar isArrayLike_1 = (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArrayLike = {\n\tisArrayLike: isArrayLike_1\n};\n\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nvar isPromise_2 = isPromise;\n\n\nvar isPromise_1 = {\n\tisPromise: isPromise_2\n};\n\nvar iterator = createCommonjsModule(function (module, exports) {\nfunction symbolIteratorPonyfill(root$$2) {\n    var Symbol = root$$2.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root$$2.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root$$2.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n\n});\n\nvar iterator_1 = iterator.symbolIteratorPonyfill;\nvar iterator_2 = iterator.iterator;\nvar iterator_3 = iterator.$$iterator;\n\nvar __extends$13 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends$13(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nvar InnerSubscriber_2 = InnerSubscriber;\n\n\nvar InnerSubscriber_1 = {\n\tInnerSubscriber: InnerSubscriber_2\n};\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator.iterator] === 'function') {\n        var iterator$$1 = result[iterator.iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable.observable] === 'function') {\n        var obs = result[observable.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nvar subscribeToResult_2 = subscribeToResult;\n\n\nvar subscribeToResult_1 = {\n\tsubscribeToResult: subscribeToResult_2\n};\n\nvar __extends$11 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest$3() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };\n}\nvar combineLatest_2$2 = combineLatest$3;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nvar CombineLatestOperator_1 = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends$11(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar CombineLatestSubscriber_1 = CombineLatestSubscriber;\n\n\nvar combineLatest_1 = {\n\tcombineLatest: combineLatest_2$2,\n\tCombineLatestOperator: CombineLatestOperator_1,\n\tCombineLatestSubscriber: CombineLatestSubscriber_1\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nvar combineLatest_3 = combineLatest$2;\n\n\nvar combineLatest_2 = {\n\tcombineLatest: combineLatest_3\n};\n\nObservable_1.Observable.combineLatest = combineLatest_2.combineLatest;\n\nvar of_1 = ArrayObservable_1.ArrayObservable.of;\n\n\nvar of = {\n\tof: of_1\n};\n\nvar __extends$15 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends$15(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    /** @deprecated internal use only */ PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext$2, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext$2, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError$2, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nvar PromiseObservable_2 = PromiseObservable;\nfunction dispatchNext$2(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError$2(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n\n\nvar PromiseObservable_1 = {\n\tPromiseObservable: PromiseObservable_2\n};\n\nvar __extends$16 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    __extends$16(IteratorObservable, _super);\n    function IteratorObservable(iterator$$2, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator$$2 == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator$$2);\n    }\n    IteratorObservable.create = function (iterator$$2, scheduler) {\n        return new IteratorObservable(iterator$$2, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator$$2 = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator$$2.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator$$2.return === 'function') {\n                iterator$$2.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator$$2 = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator$$2, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator$$2.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator$$2.return === 'function') {\n                        iterator$$2.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nvar IteratorObservable_2 = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator.iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator.iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator.iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator.iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n\n\nvar IteratorObservable_1 = {\n\tIteratorObservable: IteratorObservable_2\n};\n\nvar __extends$17 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    __extends$17(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nvar ArrayLikeObservable_2 = ArrayLikeObservable;\n\n\nvar ArrayLikeObservable_1 = {\n\tArrayLikeObservable: ArrayLikeObservable_2\n};\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification$1 = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nvar Notification_2 = Notification$1;\n\n\nvar Notification_1 = {\n\tNotification: Notification_2\n};\n\nvar __extends$18 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar observeOn_2 = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nvar ObserveOnOperator_1 = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends$18(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nvar ObserveOnSubscriber_1 = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nvar ObserveOnMessage_1 = ObserveOnMessage;\n\n\nvar observeOn_1 = {\n\tobserveOn: observeOn_2,\n\tObserveOnOperator: ObserveOnOperator_1,\n\tObserveOnSubscriber: ObserveOnSubscriber_1,\n\tObserveOnMessage: ObserveOnMessage_1\n};\n\nvar __extends$14 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends$14(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    /** @deprecated internal use only */ FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nvar FromObservable_2 = FromObservable;\n\n\nvar FromObservable_1 = {\n\tFromObservable: FromObservable_2\n};\n\nvar from_1 = FromObservable_1.FromObservable.create;\n\n\nvar from = {\n\tfrom: from_1\n};\n\nvar __extends$19 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nvar mergeMap_2 = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nvar MergeMapOperator_1 = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends$19(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeMapSubscriber_1 = MergeMapSubscriber;\n\n\nvar mergeMap_1 = {\n\tmergeMap: mergeMap_2,\n\tMergeMapOperator: MergeMapOperator_1,\n\tMergeMapSubscriber: MergeMapSubscriber_1\n};\n\nfunction identity(x) {\n    return x;\n}\nvar identity_2 = identity;\n\n\nvar identity_1 = {\n\tidentity: identity_2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);\n}\nvar mergeAll_2 = mergeAll;\n\n\nvar mergeAll_1 = {\n\tmergeAll: mergeAll_2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return mergeAll_1.mergeAll(1);\n}\nvar concatAll_2 = concatAll;\n\n\nvar concatAll_1 = {\n\tconcatAll: concatAll_2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concat$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler_1.isScheduler(observables[1]))) {\n        return from.from(observables[0]);\n    }\n    return concatAll_1.concatAll()(of.of.apply(void 0, observables));\n}\nvar concat_2 = concat$2;\n\n\nvar concat_1 = {\n\tconcat: concat_2\n};\n\nObservable_1.Observable.concat = concat_1.concat;\n\nvar __extends$20 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    __extends$20(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    /** @deprecated internal use only */ DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nvar DeferObservable_2 = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    __extends$20(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar DeferObservable_1 = {\n\tDeferObservable: DeferObservable_2\n};\n\nvar defer_1 = DeferObservable_1.DeferObservable.create;\n\n\nvar defer$2 = {\n\tdefer: defer_1\n};\n\nObservable_1.Observable.defer = defer$2.defer;\n\nvar empty_1 = EmptyObservable_1.EmptyObservable.create;\n\n\nvar empty$3 = {\n\tempty: empty_1\n};\n\nObservable_1.Observable.empty = empty$3.empty;\n\nvar __extends$21 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends$21(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Joins last values emitted by passed Observables.\n     *\n     * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n     *\n     * <img src=\"./img/forkJoin.png\" width=\"100%\">\n     *\n     * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n     * or directly as arguments. If no input Observables are provided, resulting stream will complete\n     * immediately.\n     *\n     * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n     * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n     * array will have `n` values, where first value is the last thing emitted by the first Observable,\n     * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n     * not emit more than once and it will complete after that. If you need to emit combined values not only\n     * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n     * or {@link zip} instead.\n     *\n     * In order for resulting array to have the same length as the number of input Observables, whenever any of\n     * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n     * and it will not emit anything either, even if it already has some last values from other Observables.\n     * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n     * unless at any point some other Observable completes without emitting value, which brings us back to\n     * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n     * have to emit something at least once and complete.\n     *\n     * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n     * will be immediately unsubscribed.\n     *\n     * Optionally `forkJoin` accepts project function, that will be called with values which normally\n     * would land in emitted array. Whatever is returned by project function, will appear in output\n     * Observable instead. This means that default project can be thought of as a function that takes\n     * all its arguments and puts them into an array. Note that project function will be called only\n     * when output Observable is supposed to emit a result.\n     *\n     * @example <caption>Use forkJoin with operator emitting immediately</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.of(1, 2, 3, 4),\n     *   Rx.Observable.of(5, 6, 7, 8)\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [4, 8]\n     * // \"This is how it ends!\"\n     *\n     *\n     * @example <caption>Use forkJoin with operator emitting after some time</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [2, 3] after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     *\n     * @example <caption>Use forkJoin with project function</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\n     *   (n, m) => n + m\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // 5 after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     * @see {@link combineLatest}\n     * @see {@link zip}\n     *\n     * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\n     * passed directly to the operator.\n     * @param {function} [project] Function that takes values emitted by input Observables and returns value\n     * that will appear in resulting Observable instead of default array.\n     * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n     * or value from project function.\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    /** @deprecated internal use only */ ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nvar ForkJoinObservable_2 = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends$21(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar ForkJoinObservable_1 = {\n\tForkJoinObservable: ForkJoinObservable_2\n};\n\nvar forkJoin_1 = ForkJoinObservable_1.ForkJoinObservable.create;\n\n\nvar forkJoin$2 = {\n\tforkJoin: forkJoin_1\n};\n\nObservable_1.Observable.forkJoin = forkJoin$2.forkJoin;\n\nObservable_1.Observable.from = from.from;\n\nvar __extends$22 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends$22(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    /** @deprecated internal use only */ FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject.errorObject) {\n                subscriber.error(errorObject.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nvar FromEventObservable_2 = FromEventObservable;\n\n\nvar FromEventObservable_1 = {\n\tFromEventObservable: FromEventObservable_2\n};\n\nvar fromEvent_1 = FromEventObservable_1.FromEventObservable.create;\n\n\nvar fromEvent$2 = {\n\tfromEvent: fromEvent_1\n};\n\nObservable_1.Observable.fromEvent = fromEvent$2.fromEvent;\n\nvar __extends$23 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = (function (_super) {\n    __extends$23(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        _super.call(this);\n        this.addHandler = addHandler;\n        this.removeHandler = removeHandler;\n        this.selector = selector;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n     * removeHandler function will forward it.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    /** @deprecated internal use only */ FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        var retValue = this._callAddHandler(handler, subscriber);\n        if (!isFunction_1.isFunction(removeHandler)) {\n            return;\n        }\n        subscriber.add(new Subscription_1.Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler, retValue);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            return this.addHandler(handler) || null;\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable_1.Observable));\nvar FromEventPatternObservable_2 = FromEventPatternObservable;\n\n\nvar FromEventPatternObservable_1 = {\n\tFromEventPatternObservable: FromEventPatternObservable_2\n};\n\nvar fromEventPattern_1 = FromEventPatternObservable_1.FromEventPatternObservable.create;\n\n\nvar fromEventPattern$2 = {\n\tfromEventPattern: fromEventPattern_1\n};\n\nObservable_1.Observable.fromEventPattern = fromEventPattern$2.fromEventPattern;\n\nvar fromPromise_1 = PromiseObservable_1.PromiseObservable.create;\n\n\nvar fromPromise$2 = {\n\tfromPromise: fromPromise_1\n};\n\nObservable_1.Observable.fromPromise = fromPromise$2.fromPromise;\n\nvar __extends$24 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\nvar selfSelector = function (value) { return value; };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar GenerateObservable = (function (_super) {\n    __extends$24(GenerateObservable, _super);\n    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {\n        _super.call(this);\n        this.initialState = initialState;\n        this.condition = condition;\n        this.iterate = iterate;\n        this.resultSelector = resultSelector;\n        this.scheduler = scheduler;\n    }\n    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n        if (arguments.length == 1) {\n            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);\n        }\n        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {\n            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);\n        }\n        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);\n    };\n    /** @deprecated internal use only */ GenerateObservable.prototype._subscribe = function (subscriber) {\n        var state = this.initialState;\n        if (this.scheduler) {\n            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {\n                subscriber: subscriber,\n                iterate: this.iterate,\n                condition: this.condition,\n                resultSelector: this.resultSelector,\n                state: state });\n        }\n        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        } while (true);\n    };\n    GenerateObservable.dispatch = function (state) {\n        var subscriber = state.subscriber, condition = state.condition;\n        if (subscriber.closed) {\n            return;\n        }\n        if (state.needIterate) {\n            try {\n                state.state = state.iterate(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        }\n        else {\n            state.needIterate = true;\n        }\n        if (condition) {\n            var conditionResult = void 0;\n            try {\n                conditionResult = condition(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            if (!conditionResult) {\n                subscriber.complete();\n                return;\n            }\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        var value;\n        try {\n            value = state.resultSelector(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return;\n        }\n        if (subscriber.closed) {\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        return this.schedule(state);\n    };\n    return GenerateObservable;\n}(Observable_1.Observable));\nvar GenerateObservable_2 = GenerateObservable;\n\n\nvar GenerateObservable_1 = {\n\tGenerateObservable: GenerateObservable_2\n};\n\nvar generate_1 = GenerateObservable_1.GenerateObservable.create;\n\n\nvar generate$2 = {\n\tgenerate: generate_1\n};\n\nObservable_1.Observable.generate = generate$2.generate;\n\nvar __extends$25 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IfObservable = (function (_super) {\n    __extends$25(IfObservable, _super);\n    function IfObservable(condition, thenSource, elseSource) {\n        _super.call(this);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n    }\n    IfObservable.create = function (condition, thenSource, elseSource) {\n        return new IfObservable(condition, thenSource, elseSource);\n    };\n    /** @deprecated internal use only */ IfObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n    };\n    return IfObservable;\n}(Observable_1.Observable));\nvar IfObservable_2 = IfObservable;\nvar IfSubscriber = (function (_super) {\n    __extends$25(IfSubscriber, _super);\n    function IfSubscriber(destination, condition, thenSource, elseSource) {\n        _super.call(this, destination);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n        this.tryIf();\n    }\n    IfSubscriber.prototype.tryIf = function () {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        var result;\n        try {\n            result = condition();\n            var source = result ? thenSource : elseSource;\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n            else {\n                this._complete();\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return IfSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar IfObservable_1 = {\n\tIfObservable: IfObservable_2\n};\n\nvar _if_1 = IfObservable_1.IfObservable.create;\n\n\nvar _if$2 = {\n\t_if: _if_1\n};\n\nObservable_1.Observable.if = _if$2._if;\n\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nvar isNumeric_2 = isNumeric;\n\n\n\nvar isNumeric_1 = {\n\tisNumeric: isNumeric_2\n};\n\nvar __extends$28 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends$28(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nvar Action_2 = Action;\n\n\nvar Action_1 = {\n\tAction: Action_2\n};\n\nvar __extends$27 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends$27(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.pending = false;\n        this.work = work;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated internal use only */ AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nvar AsyncAction_2 = AsyncAction;\n\n\nvar AsyncAction_1 = {\n\tAsyncAction: AsyncAction_2\n};\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler$1 = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nvar Scheduler_2 = Scheduler$1;\n\n\nvar Scheduler_1$1 = {\n\tScheduler: Scheduler_2\n};\n\nvar __extends$29 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar AsyncScheduler = (function (_super) {\n    __extends$29(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1$1.Scheduler));\nvar AsyncScheduler_2 = AsyncScheduler;\n\n\nvar AsyncScheduler_1 = {\n\tAsyncScheduler: AsyncScheduler_2\n};\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nvar async_1 = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n\n\nvar async = {\n\tasync: async_1\n};\n\nvar __extends$26 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends$26(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    /** @deprecated internal use only */ IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nvar IntervalObservable_2 = IntervalObservable;\n\n\nvar IntervalObservable_1 = {\n\tIntervalObservable: IntervalObservable_2\n};\n\nvar interval_1 = IntervalObservable_1.IntervalObservable.create;\n\n\nvar interval$2 = {\n\tinterval: interval_1\n};\n\nObservable_1.Observable.interval = interval$2.interval;\n\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction merge$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));\n}\nvar merge_2 = merge$2;\n\n\nvar merge_1 = {\n\tmerge: merge_2\n};\n\nObservable_1.Observable.merge = merge_1.merge;\n\nvar __extends$30 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\nfunction race$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\n}\nvar race_2 = race$2;\nvar RaceOperator = (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nvar RaceOperator_1 = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = (function (_super) {\n    __extends$30(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar RaceSubscriber_1 = RaceSubscriber;\n\n\nvar race_1 = {\n\trace: race_2,\n\tRaceOperator: RaceOperator_1,\n\tRaceSubscriber: RaceSubscriber_1\n};\n\nObservable_1.Observable.race = race_1.race;\n\nvar __extends$31 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable = (function (_super) {\n    __extends$31(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    /** @deprecated internal use only */ NeverObservable.prototype._subscribe = function (subscriber) {\n        noop_1.noop();\n    };\n    return NeverObservable;\n}(Observable_1.Observable));\nvar NeverObservable_2 = NeverObservable;\n\n\nvar NeverObservable_1 = {\n\tNeverObservable: NeverObservable_2\n};\n\nvar never_1 = NeverObservable_1.NeverObservable.create;\n\n\nvar never$2 = {\n\tnever: never_1\n};\n\nObservable_1.Observable.never = never$2.never;\n\nObservable_1.Observable.of = of.of;\n\nvar __extends$32 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext$4() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\n}\nvar onErrorResumeNext_2$1 = onErrorResumeNext$4;\n/* tslint:enable:max-line-length */\nfunction onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nvar onErrorResumeNextStatic_1 = onErrorResumeNextStatic;\nvar OnErrorResumeNextOperator = (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = (function (_super) {\n    __extends$32(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult_1.subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar onErrorResumeNext_1 = {\n\tonErrorResumeNext: onErrorResumeNext_2$1,\n\tonErrorResumeNextStatic: onErrorResumeNextStatic_1\n};\n\nvar onErrorResumeNext_2 = onErrorResumeNext_1.onErrorResumeNextStatic;\n\n\nvar onErrorResumeNext$2 = {\n\tonErrorResumeNext: onErrorResumeNext_2\n};\n\nObservable_1.Observable.onErrorResumeNext = onErrorResumeNext$2.onErrorResumeNext;\n\nvar __extends$33 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction dispatch$1(state) {\n    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;\n    if (index === length) {\n        subscriber.complete();\n        return;\n    }\n    var key = keys[index];\n    subscriber.next([key, obj[key]]);\n    state.index = index + 1;\n    this.schedule(state);\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PairsObservable = (function (_super) {\n    __extends$33(PairsObservable, _super);\n    function PairsObservable(obj, scheduler) {\n        _super.call(this);\n        this.obj = obj;\n        this.scheduler = scheduler;\n        this.keys = Object.keys(obj);\n    }\n    /**\n     * Convert an object into an observable sequence of [key, value] pairs\n     * using an optional IScheduler to enumerate the object.\n     *\n     * @example <caption>Converts a javascript object to an Observable</caption>\n     * var obj = {\n     *   foo: 42,\n     *   bar: 56,\n     *   baz: 78\n     * };\n     *\n     * var source = Rx.Observable.pairs(obj);\n     *\n     * var subscription = source.subscribe(\n     *   function (x) {\n     *     console.log('Next: %s', x);\n     *   },\n     *   function (err) {\n     *     console.log('Error: %s', err);\n     *   },\n     *   function () {\n     *     console.log('Completed');\n     *   });\n     *\n     * @param {Object} obj The object to inspect and turn into an\n     * Observable sequence.\n     * @param {Scheduler} [scheduler] An optional IScheduler to run the\n     * enumeration of the input sequence on.\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\n     * [key, value] pairs from the object.\n     */\n    PairsObservable.create = function (obj, scheduler) {\n        return new PairsObservable(obj, scheduler);\n    };\n    /** @deprecated internal use only */ PairsObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, keys = _a.keys, scheduler = _a.scheduler;\n        var length = keys.length;\n        if (scheduler) {\n            return scheduler.schedule(dispatch$1, 0, {\n                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber\n            });\n        }\n        else {\n            for (var idx = 0; idx < length; idx++) {\n                var key = keys[idx];\n                subscriber.next([key, this.obj[key]]);\n            }\n            subscriber.complete();\n        }\n    };\n    return PairsObservable;\n}(Observable_1.Observable));\nvar PairsObservable_2 = PairsObservable;\n\n\nvar PairsObservable_1 = {\n\tPairsObservable: PairsObservable_2\n};\n\nvar pairs_1 = PairsObservable_1.PairsObservable.create;\n\n\nvar pairs$2 = {\n\tpairs: pairs_1\n};\n\nObservable_1.Observable.pairs = pairs$2.pairs;\n\nvar __extends$34 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends$34(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nvar RangeObservable_2 = RangeObservable;\n\n\nvar RangeObservable_1 = {\n\tRangeObservable: RangeObservable_2\n};\n\nvar range_1 = RangeObservable_1.RangeObservable.create;\n\n\nvar range$2 = {\n\trange: range_1\n};\n\nObservable_1.Observable.range = range$2.range;\n\nvar __extends$35 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar UsingObservable = (function (_super) {\n    __extends$35(UsingObservable, _super);\n    function UsingObservable(resourceFactory, observableFactory) {\n        _super.call(this);\n        this.resourceFactory = resourceFactory;\n        this.observableFactory = observableFactory;\n    }\n    UsingObservable.create = function (resourceFactory, observableFactory) {\n        return new UsingObservable(resourceFactory, observableFactory);\n    };\n    /** @deprecated internal use only */ UsingObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;\n        var resource;\n        try {\n            resource = resourceFactory();\n            return new UsingSubscriber(subscriber, resource, observableFactory);\n        }\n        catch (err) {\n            subscriber.error(err);\n        }\n    };\n    return UsingObservable;\n}(Observable_1.Observable));\nvar UsingObservable_2 = UsingObservable;\nvar UsingSubscriber = (function (_super) {\n    __extends$35(UsingSubscriber, _super);\n    function UsingSubscriber(destination, resource, observableFactory) {\n        _super.call(this, destination);\n        this.resource = resource;\n        this.observableFactory = observableFactory;\n        destination.add(resource);\n        this.tryUse();\n    }\n    UsingSubscriber.prototype.tryUse = function () {\n        try {\n            var source = this.observableFactory.call(this, this.resource);\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return UsingSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar UsingObservable_1 = {\n\tUsingObservable: UsingObservable_2\n};\n\nvar using_1 = UsingObservable_1.UsingObservable.create;\n\n\nvar using$2 = {\n\tusing: using_1\n};\n\nObservable_1.Observable.using = using$2.using;\n\nvar __extends$36 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends$36(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    /** @deprecated internal use only */ ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        subscriber.syncErrorThrowable = true;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nvar ErrorObservable_2 = ErrorObservable;\n\n\nvar ErrorObservable_1 = {\n\tErrorObservable: ErrorObservable_2\n};\n\nvar _throw_1 = ErrorObservable_1.ErrorObservable.create;\n\n\nvar _throw$2 = {\n\t_throw: _throw_1\n};\n\nObservable_1.Observable.throw = _throw$2._throw;\n\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nvar isDate_2 = isDate;\n\n\nvar isDate_1 = {\n\tisDate: isDate_2\n};\n\nvar __extends$37 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends$37(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    /** @deprecated internal use only */ TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nvar TimerObservable_2 = TimerObservable;\n\n\nvar TimerObservable_1 = {\n\tTimerObservable: TimerObservable_2\n};\n\nvar timer_1 = TimerObservable_1.TimerObservable.create;\n\n\nvar timer$2 = {\n\ttimer: timer_1\n};\n\nObservable_1.Observable.timer = timer$2.timer;\n\nvar __extends$38 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zip$4() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\nvar zip_2$1 = zip$4;\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nvar zipStatic_1 = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nvar ZipOperator_1 = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    __extends$38(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator.iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator.iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator$$2 = iterators[i];\n            if (iterator$$2.stillUnsubscribed) {\n                this.add(iterator$$2.subscribe(iterator$$2, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator$$2 = iterators[i];\n            if (typeof iterator$$2.hasValue === 'function' && !iterator$$2.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator$$2 = iterators[i];\n            var result = iterator$$2.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator$$2.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nvar ZipSubscriber_1 = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator$$2) {\n        this.iterator = iterator$$2;\n        this.nextResult = iterator$$2.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator.iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    __extends$38(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator.iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar zip_1 = {\n\tzip: zip_2$1,\n\tzipStatic: zipStatic_1,\n\tZipOperator: ZipOperator_1,\n\tZipSubscriber: ZipSubscriber_1\n};\n\nvar zip_2 = zip_1.zipStatic;\n\n\nvar zip$2 = {\n\tzip: zip_2\n};\n\nObservable_1.Observable.zip = zip$2.zip;\n\nvar __extends$40 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar map_2 = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nvar MapOperator_1 = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends$40(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar map_1 = {\n\tmap: map_2,\n\tMapOperator: MapOperator_1\n};\n\nvar __extends$39 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\nfunction getCORSRequest() {\n    if (root.root.XMLHttpRequest) {\n        return new root.root.XMLHttpRequest();\n    }\n    else if (!!root.root.XDomainRequest) {\n        return new root.root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.root.XMLHttpRequest) {\n        return new root.root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) { headers = null; }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nvar ajaxGet_1 = ajaxGet;\n\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nvar ajaxPost_1 = ajaxPost;\n\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nvar ajaxDelete_1 = ajaxDelete;\n\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nvar ajaxPut_1 = ajaxPut;\n\nfunction ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nvar ajaxPatch_1 = ajaxPatch;\n\nvar mapResponse = map_1.map(function (x, index) { return x.response; });\nfunction ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\nvar ajaxGetJSON_1 = ajaxGetJSON;\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = (function (_super) {\n    __extends$39(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    /** @deprecated internal use only */ AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable_1.Observable));\nvar AjaxObservable_2 = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = (function (_super) {\n    __extends$39(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root.root.FormData && request.body instanceof root.root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse$1(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n        if (xhr === errorObject.errorObject) {\n            this.error(errorObject.errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject.errorObject) {\n                this.error(errorObject.errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n            if (result === errorObject.errorObject) {\n                this.error(errorObject.errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.root.FormData && body instanceof root.root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError$1(this, request)); //TODO: Make betterer.\n        }\n\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root.root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError$1('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError$1('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_1.Subscriber));\nvar AjaxSubscriber_1 = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse$1 = (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\nvar AjaxResponse_1 = AjaxResponse$1;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError$1 = (function (_super) {\n    __extends$39(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxError;\n}(Error));\nvar AjaxError_1 = AjaxError$1;\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            }\n            else {\n                // HACK(benlesh): TypeScript shennanigans\n                // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError$1 = (function (_super) {\n    __extends$39(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError$1));\nvar AjaxTimeoutError_1 = AjaxTimeoutError$1;\n\n\nvar AjaxObservable_1 = {\n\tajaxGet: ajaxGet_1,\n\tajaxPost: ajaxPost_1,\n\tajaxDelete: ajaxDelete_1,\n\tajaxPut: ajaxPut_1,\n\tajaxPatch: ajaxPatch_1,\n\tajaxGetJSON: ajaxGetJSON_1,\n\tAjaxObservable: AjaxObservable_2,\n\tAjaxSubscriber: AjaxSubscriber_1,\n\tAjaxResponse: AjaxResponse_1,\n\tAjaxError: AjaxError_1,\n\tAjaxTimeoutError: AjaxTimeoutError_1\n};\n\nvar ajax_1 = AjaxObservable_1.AjaxObservable.create;\n\n\nvar ajax$2 = {\n\tajax: ajax_1\n};\n\nObservable_1.Observable.ajax = ajax$2.ajax;\n\nvar __extends$43 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends$43(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nvar QueueAction_2 = QueueAction;\n\n\nvar QueueAction_1 = {\n\tQueueAction: QueueAction_2\n};\n\nvar __extends$44 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar QueueScheduler = (function (_super) {\n    __extends$44(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nvar QueueScheduler_2 = QueueScheduler;\n\n\nvar QueueScheduler_1 = {\n\tQueueScheduler: QueueScheduler_2\n};\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nvar queue_1 = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n\n\nvar queue = {\n\tqueue: queue_1\n};\n\nvar __extends$42 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject$1 = (function (_super) {\n    __extends$42(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    /** @deprecated internal use only */ ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nvar ReplaySubject_2 = ReplaySubject$1;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n\n\nvar ReplaySubject_1 = {\n\tReplaySubject: ReplaySubject_2\n};\n\nfunction assignImpl(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    var len = sources.length;\n    for (var i = 0; i < len; i++) {\n        var source = sources[i];\n        for (var k in source) {\n            if (source.hasOwnProperty(k)) {\n                target[k] = source[k];\n            }\n        }\n    }\n    return target;\n}\nvar assignImpl_1 = assignImpl;\n\nfunction getAssign(root$$2) {\n    return root$$2.Object.assign || assignImpl;\n}\nvar getAssign_1 = getAssign;\nvar assign_1 = getAssign(root.root);\n\n\nvar assign = {\n\tassignImpl: assignImpl_1,\n\tgetAssign: getAssign_1,\n\tassign: assign_1\n};\n\nvar __extends$41 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar WebSocketSubject = (function (_super) {\n    __extends$41(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        if (urlConfigOrSource instanceof Observable_1.Observable) {\n            _super.call(this, destination, urlConfigOrSource);\n        }\n        else {\n            _super.call(this);\n            this.WebSocketCtor = root.root.WebSocket;\n            this._output = new Subject_1.Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                this.url = urlConfigOrSource;\n            }\n            else {\n                // WARNING: config object could override important members here.\n                assign.assign(this, urlConfigOrSource);\n            }\n            if (!this.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    }\n    WebSocketSubject.prototype.resultSelector = function (e) {\n        return JSON.parse(e.data);\n    };\n    /**\n     * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n     *\n     * @example <caption>Wraps browser WebSocket</caption>\n     *\n     * let socket$ = Observable.webSocket('ws://localhost:8081');\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>\n     *\n     * import { w3cwebsocket } from 'websocket';\n     *\n     * let socket$ = Observable.webSocket({\n     *   url: 'ws://localhost:8081',\n     *   WebSocketCtor: w3cwebsocket\n     * });\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object\n     * @return {WebSocketSubject}\n     * @static true\n     * @name webSocket\n     * @owner Observable\n     */\n    WebSocketSubject.create = function (urlConfigOrSource) {\n        return new WebSocketSubject(urlConfigOrSource);\n    };\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this, this.destination);\n        sock.operator = operator;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this.socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n        this._output = new Subject_1.Subject();\n    };\n    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable_1.Observable(function (observer) {\n            var result = tryCatch_1.tryCatch(subMsg)();\n            if (result === errorObject.errorObject) {\n                observer.error(errorObject.errorObject.e);\n            }\n            else {\n                self.next(result);\n            }\n            var subscription = self.subscribe(function (x) {\n                var result = tryCatch_1.tryCatch(messageFilter)(x);\n                if (result === errorObject.errorObject) {\n                    observer.error(errorObject.errorObject.e);\n                }\n                else if (result) {\n                    observer.next(x);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                var result = tryCatch_1.tryCatch(unsubMsg)();\n                if (result === errorObject.errorObject) {\n                    observer.error(errorObject.errorObject.e);\n                }\n                else {\n                    self.next(result);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var WebSocketCtor = this.WebSocketCtor;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = this.protocol ?\n                new WebSocketCtor(this.url, this.protocol) :\n                new WebSocketCtor(this.url);\n            this.socket = socket;\n            if (this.binaryType) {\n                this.socket.binaryType = this.binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription_1.Subscription(function () {\n            _this.socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var openObserver = _this.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n                        'and an optional reason: { code: number, reason: string }'));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            _this._resetState();\n            var closeObserver = _this.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);\n            if (result === errorObject.errorObject) {\n                observer.error(errorObject.errorObject.e);\n            }\n            else {\n                observer.next(result);\n            }\n        };\n    };\n    /** @deprecated internal use only */ WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this.socket) {\n            this._connectSocket();\n        }\n        var subscription = new Subscription_1.Subscription();\n        subscription.add(this._output.subscribe(subscriber));\n        subscription.add(function () {\n            var socket = _this.socket;\n            if (_this._output.observers.length === 0) {\n                if (socket && socket.readyState === 1) {\n                    socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscription;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _a = this, source = _a.source, socket = _a.socket;\n        if (socket && socket.readyState === 1) {\n            socket.close();\n            this._resetState();\n        }\n        _super.prototype.unsubscribe.call(this);\n        if (!source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    };\n    return WebSocketSubject;\n}(Subject_1.AnonymousSubject));\nvar WebSocketSubject_2 = WebSocketSubject;\n\n\nvar WebSocketSubject_1 = {\n\tWebSocketSubject: WebSocketSubject_2\n};\n\nvar webSocket_1 = WebSocketSubject_1.WebSocketSubject.create;\n\n\nvar webSocket$2 = {\n\twebSocket: webSocket_1\n};\n\nObservable_1.Observable.webSocket = webSocket$2.webSocket;\n\nvar __extends$45 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer$3(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nvar buffer_2$2 = buffer$3;\nvar BufferOperator = (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = (function (_super) {\n    __extends$45(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        _super.call(this, destination);\n        this.buffer = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar buffer_1 = {\n\tbuffer: buffer_2$2\n};\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer$2(closingNotifier) {\n    return buffer_1.buffer(closingNotifier)(this);\n}\nvar buffer_3 = buffer$2;\n\n\nvar buffer_2 = {\n\tbuffer: buffer_3\n};\n\nObservable_1.Observable.prototype.buffer = buffer_2.buffer;\n\nvar __extends$46 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount$3(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nvar bufferCount_2$2 = bufferCount$3;\nvar BufferCountOperator = (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = (function (_super) {\n    __extends$46(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSkipCountSubscriber = (function (_super) {\n    __extends$46(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar bufferCount_1 = {\n\tbufferCount: bufferCount_2$2\n};\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount$2(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return bufferCount_1.bufferCount(bufferSize, startBufferEvery)(this);\n}\nvar bufferCount_3 = bufferCount$2;\n\n\nvar bufferCount_2 = {\n\tbufferCount: bufferCount_3\n};\n\nObservable_1.Observable.prototype.bufferCount = bufferCount_2.bufferCount;\n\nvar __extends$47 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime$3(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nvar bufferTime_2$2 = bufferTime$3;\nvar BufferTimeOperator = (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = (function (_super) {\n    __extends$47(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        _super.call(this, destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        var context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context = contexts[i];\n            var buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n\n\nvar bufferTime_1 = {\n\tbufferTime: bufferTime_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime$2(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return bufferTime_1.bufferTime(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);\n}\nvar bufferTime_3 = bufferTime$2;\n\n\nvar bufferTime_2 = {\n\tbufferTime: bufferTime_3\n};\n\nObservable_1.Observable.prototype.bufferTime = bufferTime_2.bufferTime;\n\nvar __extends$48 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle$3(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nvar bufferToggle_2$2 = bufferToggle$3;\nvar BufferToggleOperator = (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = (function (_super) {\n    __extends$48(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, openings));\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription_1.Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar bufferToggle_1 = {\n\tbufferToggle: bufferToggle_2$2\n};\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle$2(openings, closingSelector) {\n    return bufferToggle_1.bufferToggle(openings, closingSelector)(this);\n}\nvar bufferToggle_3 = bufferToggle$2;\n\n\nvar bufferToggle_2 = {\n\tbufferToggle: bufferToggle_3\n};\n\nObservable_1.Observable.prototype.bufferToggle = bufferToggle_2.bufferToggle;\n\nvar __extends$49 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen$3(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nvar bufferWhen_2$2 = bufferWhen$3;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    __extends$49(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject.errorObject) {\n            this.error(errorObject.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar bufferWhen_1 = {\n\tbufferWhen: bufferWhen_2$2\n};\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen$2(closingSelector) {\n    return bufferWhen_1.bufferWhen(closingSelector)(this);\n}\nvar bufferWhen_3 = bufferWhen$2;\n\n\nvar bufferWhen_2 = {\n\tbufferWhen: bufferWhen_3\n};\n\nObservable_1.Observable.prototype.bufferWhen = bufferWhen_2.bufferWhen;\n\nvar __extends$50 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nfunction catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar catchError_2 = catchError;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends$50(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar catchError_1 = {\n\tcatchError: catchError_2\n};\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch$2(selector) {\n    return catchError_1.catchError(selector)(this);\n}\nvar _catch_2 = _catch$2;\n\n\nvar _catch_1 = {\n\t_catch: _catch_2\n};\n\nObservable_1.Observable.prototype.catch = _catch_1._catch;\nObservable_1.Observable.prototype._catch = _catch_1._catch;\n\nfunction combineAll$3(project) {\n    return function (source) { return source.lift(new combineLatest_1.CombineLatestOperator(project)); };\n}\nvar combineAll_2$2 = combineAll$3;\n\n\nvar combineAll_1 = {\n\tcombineAll: combineAll_2$2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll$2(project) {\n    return combineAll_1.combineAll(project)(this);\n}\nvar combineAll_3 = combineAll$2;\n\n\nvar combineAll_2 = {\n\tcombineAll: combineAll_3\n};\n\nObservable_1.Observable.prototype.combineAll = combineAll_2.combineAll;\n\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest$6() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return combineLatest_1.combineLatest.apply(void 0, observables)(this);\n}\nvar combineLatest_3$1 = combineLatest$6;\n\n\nvar combineLatest_2$3 = {\n\tcombineLatest: combineLatest_3$1\n};\n\nObservable_1.Observable.prototype.combineLatest = combineLatest_2$3.combineLatest;\n\nvar concat_2$1 = concat_1;\nvar concatStatic$1 = concat_2$1.concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat$6() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(concat_1.concat.apply(void 0, [source].concat(observables))); };\n}\nvar concat_4$1 = concat$6;\n\n\nvar concat_3$2 = {\n\tconcatStatic: concatStatic$1,\n\tconcat: concat_4$1\n};\n\nvar concatStatic = concat_1.concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat$5() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return concat_3$2.concat.apply(void 0, observables)(this);\n}\nvar concat_4 = concat$5;\n\n\nvar concat_3 = {\n\tconcatStatic: concatStatic,\n\tconcat: concat_4\n};\n\nObservable_1.Observable.prototype.concat = concat_3.concat;\n\n/* tslint:enable:max-line-length */\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll$3() {\n    return concatAll_1.concatAll()(this);\n}\nvar concatAll_3 = concatAll$3;\n\n\nvar concatAll_2$1 = {\n\tconcatAll: concatAll_3\n};\n\nObservable_1.Observable.prototype.concatAll = concatAll_2$1.concatAll;\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap$3(project, resultSelector) {\n    return mergeMap_1.mergeMap(project, resultSelector, 1);\n}\nvar concatMap_2$2 = concatMap$3;\n\n\nvar concatMap_1 = {\n\tconcatMap: concatMap_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap$2(project, resultSelector) {\n    return concatMap_1.concatMap(project, resultSelector)(this);\n}\nvar concatMap_3 = concatMap$2;\n\n\nvar concatMap_2 = {\n\tconcatMap: concatMap_3\n};\n\nObservable_1.Observable.prototype.concatMap = concatMap_2.concatMap;\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo$3(innerObservable, resultSelector) {\n    return concatMap_1.concatMap(function () { return innerObservable; }, resultSelector);\n}\nvar concatMapTo_2$2 = concatMapTo$3;\n\n\nvar concatMapTo_1 = {\n\tconcatMapTo: concatMapTo_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo$2(innerObservable, resultSelector) {\n    return concatMapTo_1.concatMapTo(innerObservable, resultSelector)(this);\n}\nvar concatMapTo_3 = concatMapTo$2;\n\n\nvar concatMapTo_2 = {\n\tconcatMapTo: concatMapTo_3\n};\n\nObservable_1.Observable.prototype.concatMapTo = concatMapTo_2.concatMapTo;\n\nvar __extends$51 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count$3(predicate) {\n    return function (source) { return source.lift(new CountOperator(predicate, source)); };\n}\nvar count_2$2 = count$3;\nvar CountOperator = (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = (function (_super) {\n    __extends$51(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar count_1 = {\n\tcount: count_2$2\n};\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count$2(predicate) {\n    return count_1.count(predicate)(this);\n}\nvar count_3 = count$2;\n\n\nvar count_2 = {\n\tcount: count_3\n};\n\nObservable_1.Observable.prototype.count = count_2.count;\n\nvar __extends$52 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize$3() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nvar dematerialize_2$2 = dematerialize$3;\nvar DeMaterializeOperator = (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = (function (_super) {\n    __extends$52(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar dematerialize_1 = {\n\tdematerialize: dematerialize_2$2\n};\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize$2() {\n    return dematerialize_1.dematerialize()(this);\n}\nvar dematerialize_3 = dematerialize$2;\n\n\nvar dematerialize_2 = {\n\tdematerialize: dematerialize_3\n};\n\nObservable_1.Observable.prototype.dematerialize = dematerialize_2.dematerialize;\n\nvar __extends$53 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce$3(durationSelector) {\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\n}\nvar debounce_2$2 = debounce$3;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    __extends$53(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar debounce_1 = {\n\tdebounce: debounce_2$2\n};\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce$2(durationSelector) {\n    return debounce_1.debounce(durationSelector)(this);\n}\nvar debounce_3 = debounce$2;\n\n\nvar debounce_2 = {\n\tdebounce: debounce_3\n};\n\nObservable_1.Observable.prototype.debounce = debounce_2.debounce;\n\nvar __extends$54 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime$3(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nvar debounceTime_2$2 = debounceTime$3;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends$54(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext$3, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext$3(subscriber) {\n    subscriber.debouncedNext();\n}\n\n\nvar debounceTime_1 = {\n\tdebounceTime: debounceTime_2$2\n};\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime$2(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return debounceTime_1.debounceTime(dueTime, scheduler)(this);\n}\nvar debounceTime_3 = debounceTime$2;\n\n\nvar debounceTime_2 = {\n\tdebounceTime: debounceTime_3\n};\n\nObservable_1.Observable.prototype.debounceTime = debounceTime_2.debounceTime;\n\nvar __extends$55 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty$3(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nvar defaultIfEmpty_2$2 = defaultIfEmpty$3;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    __extends$55(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        _super.call(this, destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar defaultIfEmpty_1 = {\n\tdefaultIfEmpty: defaultIfEmpty_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty$2(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return defaultIfEmpty_1.defaultIfEmpty(defaultValue)(this);\n}\nvar defaultIfEmpty_3 = defaultIfEmpty$2;\n\n\nvar defaultIfEmpty_2 = {\n\tdefaultIfEmpty: defaultIfEmpty_3\n};\n\nObservable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_2.defaultIfEmpty;\n\nvar __extends$56 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay$3(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nvar delay_2$2 = delay$3;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    __extends$56(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n\n\nvar delay_1 = {\n\tdelay: delay_2$2\n};\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay$2(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return delay_1.delay(delay, scheduler)(this);\n}\nvar delay_3 = delay$2;\n\n\nvar delay_2 = {\n\tdelay: delay_3\n};\n\nObservable_1.Observable.prototype.delay = delay_2.delay;\n\nvar __extends$57 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen$3(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nvar delayWhen_2$2 = delayWhen$3;\nvar DelayWhenOperator = (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = (function (_super) {\n    __extends$57(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        _super.call(this, destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.values = [];\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = (function (_super) {\n    __extends$57(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(/** @deprecated internal use only */ source, subscriptionDelay) {\n        _super.call(this);\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    /** @deprecated internal use only */ SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = (function (_super) {\n    __extends$57(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        _super.call(this);\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar delayWhen_1 = {\n\tdelayWhen: delayWhen_2$2\n};\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen$2(delayDurationSelector, subscriptionDelay) {\n    return delayWhen_1.delayWhen(delayDurationSelector, subscriptionDelay)(this);\n}\nvar delayWhen_3 = delayWhen$2;\n\n\nvar delayWhen_2 = {\n\tdelayWhen: delayWhen_3\n};\n\nObservable_1.Observable.prototype.delayWhen = delayWhen_2.delayWhen;\n\nfunction minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nvar minimalSetImpl_1 = minimalSetImpl;\nvar Set = root.root.Set || minimalSetImpl();\n\n\nvar _Set = {\n\tminimalSetImpl: minimalSetImpl_1,\n\tSet: Set\n};\n\nvar __extends$58 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct$3(keySelector, flushes) {\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\n}\nvar distinct_2$2 = distinct$3;\nvar DistinctOperator = (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = (function (_super) {\n    __extends$58(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.values = new _Set.Set();\n        if (flushes) {\n            this.add(subscribeToResult_1.subscribeToResult(this, flushes));\n        }\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar DistinctSubscriber_1 = DistinctSubscriber;\n\n\nvar distinct_1 = {\n\tdistinct: distinct_2$2,\n\tDistinctSubscriber: DistinctSubscriber_1\n};\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct$2(keySelector, flushes) {\n    return distinct_1.distinct(keySelector, flushes)(this);\n}\nvar distinct_3 = distinct$2;\n\n\nvar distinct_2 = {\n\tdistinct: distinct_3\n};\n\nObservable_1.Observable.prototype.distinct = distinct_2.distinct;\n\nvar __extends$59 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged$3(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar distinctUntilChanged_2$2 = distinctUntilChanged$3;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends$59(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject.errorObject) {\n                return this.destination.error(errorObject.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject.errorObject) {\n                return this.destination.error(errorObject.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar distinctUntilChanged_1 = {\n\tdistinctUntilChanged: distinctUntilChanged_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged$2(compare, keySelector) {\n    return distinctUntilChanged_1.distinctUntilChanged(compare, keySelector)(this);\n}\nvar distinctUntilChanged_3 = distinctUntilChanged$2;\n\n\nvar distinctUntilChanged_2 = {\n\tdistinctUntilChanged: distinctUntilChanged_3\n};\n\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_2.distinctUntilChanged;\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged$3(key, compare) {\n    return distinctUntilChanged_1.distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });\n}\nvar distinctUntilKeyChanged_2$2 = distinctUntilKeyChanged$3;\n\n\nvar distinctUntilKeyChanged_1 = {\n\tdistinctUntilKeyChanged: distinctUntilKeyChanged_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged$2(key, compare) {\n    return distinctUntilKeyChanged_1.distinctUntilKeyChanged(key, compare)(this);\n}\nvar distinctUntilKeyChanged_3 = distinctUntilKeyChanged$2;\n\n\nvar distinctUntilKeyChanged_2 = {\n\tdistinctUntilKeyChanged: distinctUntilKeyChanged_3\n};\n\nObservable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_2.distinctUntilKeyChanged;\n\nvar __extends$60 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nfunction tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar tap_2 = tap;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends$60(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar tap_1 = {\n\ttap: tap_2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do$2(nextOrObserver, error, complete) {\n    return tap_1.tap(nextOrObserver, error, complete)(this);\n}\nvar _do_2 = _do$2;\n\n\nvar _do_1 = {\n\t_do: _do_2\n};\n\nObservable_1.Observable.prototype.do = _do_1._do;\nObservable_1.Observable.prototype._do = _do_1._do;\n\nvar __extends$61 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust$3() {\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\n}\nvar exhaust_2$2 = exhaust$3;\nvar SwitchFirstOperator = (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = (function (_super) {\n    __extends$61(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar exhaust_1 = {\n\texhaust: exhaust_2$2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust$2() {\n    return exhaust_1.exhaust()(this);\n}\nvar exhaust_3 = exhaust$2;\n\n\nvar exhaust_2 = {\n\texhaust: exhaust_3\n};\n\nObservable_1.Observable.prototype.exhaust = exhaust_2.exhaust;\n\nvar __extends$62 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap$3(project, resultSelector) {\n    return function (source) { return source.lift(new SwitchFirstMapOperator(project, resultSelector)); };\n}\nvar exhaustMap_2$2 = exhaustMap$3;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    __extends$62(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar exhaustMap_1 = {\n\texhaustMap: exhaustMap_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap$2(project, resultSelector) {\n    return exhaustMap_1.exhaustMap(project, resultSelector)(this);\n}\nvar exhaustMap_3 = exhaustMap$2;\n\n\nvar exhaustMap_2 = {\n\texhaustMap: exhaustMap_3\n};\n\nObservable_1.Observable.prototype.exhaustMap = exhaustMap_2.exhaustMap;\n\nvar __extends$63 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand$3(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nvar expand_2$2 = expand$3;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nvar ExpandOperator_1 = ExpandOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = (function (_super) {\n    __extends$63(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        _super.call(this, destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\n            if (result === errorObject.errorObject) {\n                destination.error(errorObject.errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar ExpandSubscriber_1 = ExpandSubscriber;\n\n\nvar expand_1 = {\n\texpand: expand_2$2,\n\tExpandOperator: ExpandOperator_1,\n\tExpandSubscriber: ExpandSubscriber_1\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand$2(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return expand_1.expand(project, concurrent, scheduler)(this);\n}\nvar expand_3 = expand$2;\n\n\nvar expand_2 = {\n\texpand: expand_3\n};\n\nObservable_1.Observable.prototype.expand = expand_2.expand;\n\nvar __extends$65 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError$1 = (function (_super) {\n    __extends$65(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nvar ArgumentOutOfRangeError_2 = ArgumentOutOfRangeError$1;\n\n\nvar ArgumentOutOfRangeError_1 = {\n\tArgumentOutOfRangeError: ArgumentOutOfRangeError_2\n};\n\nvar __extends$64 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt$3(index, defaultValue) {\n    return function (source) { return source.lift(new ElementAtOperator(index, defaultValue)); };\n}\nvar elementAt_2$2 = elementAt$3;\nvar ElementAtOperator = (function () {\n    function ElementAtOperator(index, defaultValue) {\n        this.index = index;\n        this.defaultValue = defaultValue;\n        if (index < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    ElementAtOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n    };\n    return ElementAtOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ElementAtSubscriber = (function (_super) {\n    __extends$64(ElementAtSubscriber, _super);\n    function ElementAtSubscriber(destination, index, defaultValue) {\n        _super.call(this, destination);\n        this.index = index;\n        this.defaultValue = defaultValue;\n    }\n    ElementAtSubscriber.prototype._next = function (x) {\n        if (this.index-- === 0) {\n            this.destination.next(x);\n            this.destination.complete();\n        }\n    };\n    ElementAtSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index >= 0) {\n            if (typeof this.defaultValue !== 'undefined') {\n                destination.next(this.defaultValue);\n            }\n            else {\n                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);\n            }\n        }\n        destination.complete();\n    };\n    return ElementAtSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar elementAt_1 = {\n\telementAt: elementAt_2$2\n};\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt$2(index, defaultValue) {\n    return elementAt_1.elementAt(index, defaultValue)(this);\n}\nvar elementAt_3 = elementAt$2;\n\n\nvar elementAt_2 = {\n\telementAt: elementAt_3\n};\n\nObservable_1.Observable.prototype.elementAt = elementAt_2.elementAt;\n\nvar __extends$66 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter$3(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar filter_2$2 = filter$3;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends$66(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar filter_1 = {\n\tfilter: filter_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter$2(predicate, thisArg) {\n    return filter_1.filter(predicate, thisArg)(this);\n}\nvar filter_3 = filter$2;\n\n\nvar filter_2 = {\n\tfilter: filter_3\n};\n\nObservable_1.Observable.prototype.filter = filter_2.filter;\n\nvar __extends$67 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nvar finalize_2 = finalize;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends$67(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar finalize_1 = {\n\tfinalize: finalize_2\n};\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally$2(callback) {\n    return finalize_1.finalize(callback)(this);\n}\nvar _finally_2 = _finally$2;\n\n\nvar _finally_1 = {\n\t_finally: _finally_2\n};\n\nObservable_1.Observable.prototype.finally = _finally_1._finally;\nObservable_1.Observable.prototype._finally = _finally_1._finally;\n\nvar __extends$68 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find$3(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nvar find_2$2 = find$3;\nvar FindValueOperator = (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nvar FindValueOperator_1 = FindValueOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = (function (_super) {\n    __extends$68(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber_1.Subscriber));\nvar FindValueSubscriber_1 = FindValueSubscriber;\n\n\nvar find_1 = {\n\tfind: find_2$2,\n\tFindValueOperator: FindValueOperator_1,\n\tFindValueSubscriber: FindValueSubscriber_1\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find$2(predicate, thisArg) {\n    return find_1.find(predicate, thisArg)(this);\n}\nvar find_3 = find$2;\n\n\nvar find_2 = {\n\tfind: find_3\n};\n\nObservable_1.Observable.prototype.find = find_2.find;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex$3(predicate, thisArg) {\n    return function (source) { return source.lift(new find_1.FindValueOperator(predicate, source, true, thisArg)); };\n}\nvar findIndex_2$2 = findIndex$3;\n\n\nvar findIndex_1 = {\n\tfindIndex: findIndex_2$2\n};\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex$2(predicate, thisArg) {\n    return findIndex_1.findIndex(predicate, thisArg)(this);\n}\nvar findIndex_3 = findIndex$2;\n\n\nvar findIndex_2 = {\n\tfindIndex: findIndex_3\n};\n\nObservable_1.Observable.prototype.findIndex = findIndex_2.findIndex;\n\nvar __extends$70 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError$1 = (function (_super) {\n    __extends$70(EmptyError, _super);\n    function EmptyError() {\n        var err = _super.call(this, 'no elements in sequence');\n        this.name = err.name = 'EmptyError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return EmptyError;\n}(Error));\nvar EmptyError_2 = EmptyError$1;\n\n\nvar EmptyError_1 = {\n\tEmptyError: EmptyError_2\n};\n\nvar __extends$69 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first$3(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };\n}\nvar first_2$2 = first$3;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends$69(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar first_1 = {\n\tfirst: first_2$2\n};\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first$2(predicate, resultSelector, defaultValue) {\n    return first_1.first(predicate, resultSelector, defaultValue)(this);\n}\nvar first_3 = first$2;\n\n\nvar first_2 = {\n\tfirst: first_3\n};\n\nObservable_1.Observable.prototype.first = first_2.first;\n\nvar MapPolyfill = (function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\nvar MapPolyfill_2 = MapPolyfill;\n\n\nvar MapPolyfill_1 = {\n\tMapPolyfill: MapPolyfill_2\n};\n\nvar Map = root.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\n\n\nvar _Map = {\n\tMap: Map\n};\n\nvar FastMap = (function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\nvar FastMap_2 = FastMap;\n\n\nvar FastMap_1 = {\n\tFastMap: FastMap_2\n};\n\nvar __extends$71 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy$3(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nvar groupBy_2$2 = groupBy$3;\nvar GroupByOperator = (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends$71(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new _Map.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable$1(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable$1(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends$71(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this, group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    /** @deprecated internal use only */ GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable$1 = (function (_super) {\n    __extends$71(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    /** @deprecated internal use only */ GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nvar GroupedObservable_1 = GroupedObservable$1;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends$71(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n\n\nvar groupBy_1 = {\n\tgroupBy: groupBy_2$2,\n\tGroupedObservable: GroupedObservable_1\n};\n\nvar GroupedObservable = groupBy_1.GroupedObservable;\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy$2(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return groupBy_1.groupBy(keySelector, elementSelector, durationSelector, subjectSelector)(this);\n}\nvar groupBy_3 = groupBy$2;\n\n\nvar groupBy_2 = {\n\tGroupedObservable: GroupedObservable,\n\tgroupBy: groupBy_3\n};\n\nObservable_1.Observable.prototype.groupBy = groupBy_2.groupBy;\n\nvar __extends$72 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements$3() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nvar ignoreElements_2$2 = ignoreElements$3;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    __extends$72(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        _super.apply(this, arguments);\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar ignoreElements_1 = {\n\tignoreElements: ignoreElements_2$2\n};\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements$2() {\n    return ignoreElements_1.ignoreElements()(this);\n}\nvar ignoreElements_3 = ignoreElements$2;\n\n\n\nvar ignoreElements_2 = {\n\tignoreElements: ignoreElements_3\n};\n\nObservable_1.Observable.prototype.ignoreElements = ignoreElements_2.ignoreElements;\n\nvar __extends$73 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction isEmpty$3() {\n    return function (source) { return source.lift(new IsEmptyOperator()); };\n}\nvar isEmpty_2$2 = isEmpty$3;\nvar IsEmptyOperator = (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = (function (_super) {\n    __extends$73(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        _super.call(this, destination);\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar isEmpty_1 = {\n\tisEmpty: isEmpty_2$2\n};\n\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty$2() {\n    return isEmpty_1.isEmpty()(this);\n}\nvar isEmpty_3 = isEmpty$2;\n\n\nvar isEmpty_2 = {\n\tisEmpty: isEmpty_3\n};\n\nObservable_1.Observable.prototype.isEmpty = isEmpty_2.isEmpty;\n\nvar __extends$74 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit$3(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nvar audit_2$2 = audit$3;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    __extends$74(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject.errorObject) {\n                this.destination.error(errorObject.errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);\n                if (innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar audit_1 = {\n\taudit: audit_2$2\n};\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit$2(durationSelector) {\n    return audit_1.audit(durationSelector)(this);\n}\nvar audit_3 = audit$2;\n\n\nvar audit_2 = {\n\taudit: audit_3\n};\n\nObservable_1.Observable.prototype.audit = audit_2.audit;\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime$3(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return audit_1.audit(function () { return timer$2.timer(duration, scheduler); });\n}\nvar auditTime_2$2 = auditTime$3;\n\n\nvar auditTime_1 = {\n\tauditTime: auditTime_2$2\n};\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime$2(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return auditTime_1.auditTime(duration, scheduler)(this);\n}\nvar auditTime_3 = auditTime$2;\n\n\nvar auditTime_2 = {\n\tauditTime: auditTime_3\n};\n\nObservable_1.Observable.prototype.auditTime = auditTime_2.auditTime;\n\nvar __extends$75 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last$3(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source)); };\n}\nvar last_2$2 = last$3;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    __extends$75(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar last_1 = {\n\tlast: last_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last$2(predicate, resultSelector, defaultValue) {\n    return last_1.last(predicate, resultSelector, defaultValue)(this);\n}\nvar last_3 = last$2;\n\n\nvar last_2 = {\n\tlast: last_3\n};\n\nObservable_1.Observable.prototype.last = last_2.last;\n\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nvar letProto_1 = letProto;\n\n\nvar _let$2 = {\n\tletProto: letProto_1\n};\n\nObservable_1.Observable.prototype.let = _let$2.letProto;\nObservable_1.Observable.prototype.letBind = _let$2.letProto;\n\nvar __extends$76 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every$3(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar every_2$2 = every$3;\nvar EveryOperator = (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = (function (_super) {\n    __extends$76(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar every_1 = {\n\tevery: every_2$2\n};\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every$2(predicate, thisArg) {\n    return every_1.every(predicate, thisArg)(this);\n}\nvar every_3 = every$2;\n\n\nvar every_2 = {\n\tevery: every_3\n};\n\nObservable_1.Observable.prototype.every = every_2.every;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map$3(project, thisArg) {\n    return map_1.map(project, thisArg)(this);\n}\nvar map_3 = map$3;\n\n\nvar map_2$1 = {\n\tmap: map_3\n};\n\nObservable_1.Observable.prototype.map = map_2$1.map;\n\nvar __extends$77 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo$3(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nvar mapTo_2$2 = mapTo$3;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    __extends$77(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar mapTo_1 = {\n\tmapTo: mapTo_2$2\n};\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo$2(value) {\n    return mapTo_1.mapTo(value)(this);\n}\nvar mapTo_3 = mapTo$2;\n\n\nvar mapTo_2 = {\n\tmapTo: mapTo_3\n};\n\nObservable_1.Observable.prototype.mapTo = mapTo_2.mapTo;\n\nvar __extends$78 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize$3() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nvar materialize_2$2 = materialize$3;\nvar MaterializeOperator = (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = (function (_super) {\n    __extends$78(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification_1.Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar materialize_1 = {\n\tmaterialize: materialize_2$2\n};\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize$2() {\n    return materialize_1.materialize()(this);\n}\nvar materialize_3 = materialize$2;\n\n\nvar materialize_2 = {\n\tmaterialize: materialize_3\n};\n\nObservable_1.Observable.prototype.materialize = materialize_2.materialize;\n\nvar __extends$79 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar scan_2 = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends$79(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar scan_1 = {\n\tscan: scan_2\n};\n\nvar __extends$80 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar takeLast_2 = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    __extends$80(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar takeLast_1 = {\n\ttakeLast: takeLast_2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe_1.pipe(scan_1.scan(accumulator, seed), takeLast_1.takeLast(1), defaultIfEmpty_1.defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe_1.pipe(scan_1.scan(function (acc, value, index) {\n            return accumulator(acc, value, index + 1);\n        }), takeLast_1.takeLast(1))(source);\n    };\n}\nvar reduce_2 = reduce;\n\n\nvar reduce_1 = {\n\treduce: reduce_2\n};\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max$3(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return reduce_1.reduce(max);\n}\nvar max_2$2 = max$3;\n\n\nvar max_1 = {\n\tmax: max_2$2\n};\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max$2(comparer) {\n    return max_1.max(comparer)(this);\n}\nvar max_3 = max$2;\n\n\nvar max_2 = {\n\tmax: max_3\n};\n\nObservable_1.Observable.prototype.max = max_2.max;\n\nvar merge_2$1 = merge_1;\nvar mergeStatic$1 = merge_2$1.merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge$6() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(merge_1.merge.apply(void 0, [source].concat(observables))); };\n}\nvar merge_4$1 = merge$6;\n\n\nvar merge_3$2 = {\n\tmergeStatic: mergeStatic$1,\n\tmerge: merge_4$1\n};\n\nvar mergeStatic = merge_1.merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge$5() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return merge_3$2.merge.apply(void 0, observables)(this);\n}\nvar merge_4 = merge$5;\n\n\nvar merge_3 = {\n\tmergeStatic: mergeStatic,\n\tmerge: merge_4\n};\n\nObservable_1.Observable.prototype.merge = merge_3.merge;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll$3(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeAll_1.mergeAll(concurrent)(this);\n}\nvar mergeAll_3 = mergeAll$3;\n\n\nvar mergeAll_2$1 = {\n\tmergeAll: mergeAll_3\n};\n\nObservable_1.Observable.prototype.mergeAll = mergeAll_2$1.mergeAll;\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap$3(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(project, resultSelector, concurrent)(this);\n}\nvar mergeMap_3 = mergeMap$3;\n\n\nvar mergeMap_2$1 = {\n\tmergeMap: mergeMap_3\n};\n\nObservable_1.Observable.prototype.mergeMap = mergeMap_2$1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_2$1.mergeMap;\n\nvar __extends$81 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo$3(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return function (source) { return source.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent)); };\n}\nvar mergeMapTo_2$2 = mergeMapTo$3;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nvar MergeMapToOperator_1 = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    __extends$81(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeMapToSubscriber_1 = MergeMapToSubscriber;\n\n\nvar mergeMapTo_1 = {\n\tmergeMapTo: mergeMapTo_2$2,\n\tMergeMapToOperator: MergeMapToOperator_1,\n\tMergeMapToSubscriber: MergeMapToSubscriber_1\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo$2(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMapTo_1.mergeMapTo(innerObservable, resultSelector, concurrent)(this);\n}\nvar mergeMapTo_3 = mergeMapTo$2;\n\n\nvar mergeMapTo_2 = {\n\tmergeMapTo: mergeMapTo_3\n};\n\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_2.mergeMapTo;\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_2.mergeMapTo;\n\nvar __extends$82 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan$3(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nvar mergeScan_2$2 = mergeScan$3;\nvar MergeScanOperator = (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nvar MergeScanOperator_1 = MergeScanOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = (function (_super) {\n    __extends$82(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject.errorObject) {\n                destination.error(errorObject.errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeScanSubscriber_1 = MergeScanSubscriber;\n\n\nvar mergeScan_1 = {\n\tmergeScan: mergeScan_2$2,\n\tMergeScanOperator: MergeScanOperator_1,\n\tMergeScanSubscriber: MergeScanSubscriber_1\n};\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan$2(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeScan_1.mergeScan(accumulator, seed, concurrent)(this);\n}\nvar mergeScan_3 = mergeScan$2;\n\n\nvar mergeScan_2 = {\n\tmergeScan: mergeScan_3\n};\n\nObservable_1.Observable.prototype.mergeScan = mergeScan_2.mergeScan;\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min$3(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return reduce_1.reduce(min);\n}\nvar min_2$2 = min$3;\n\n\nvar min_1 = {\n\tmin: min_2$2\n};\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min$2(comparer) {\n    return min_1.min(comparer)(this);\n}\nvar min_3 = min$2;\n\n\nvar min_2 = {\n\tmin: min_3\n};\n\nObservable_1.Observable.prototype.min = min_2.min;\n\nvar __extends$84 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator$1(source));\n    };\n}\nvar refCount_2 = refCount;\nvar RefCountOperator$1 = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber$1(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber$1 = (function (_super) {\n    __extends$84(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar refCount_1 = {\n\trefCount: refCount_2\n};\n\nvar __extends$83 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable$1 = (function (_super) {\n    __extends$83(ConnectableObservable, _super);\n    function ConnectableObservable(/** @deprecated internal use only */ source,\n        /** @deprecated internal use only */ subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        /** @deprecated internal use only */ this._refCount = 0;\n        this._isComplete = false;\n    }\n    /** @deprecated internal use only */ ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    /** @deprecated internal use only */ ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nvar ConnectableObservable_2 = ConnectableObservable$1;\nvar connectableProto = ConnectableObservable$1.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends$83(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountSubscriber = (function (_super) {\n    __extends$83(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar ConnectableObservable_1 = {\n\tConnectableObservable: ConnectableObservable_2,\n\tconnectableObservableDescriptor: connectableObservableDescriptor\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast$3(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar multicast_2$2 = multicast$3;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nvar MulticastOperator_1 = MulticastOperator;\n\n\nvar multicast_1 = {\n\tmulticast: multicast_2$2,\n\tMulticastOperator: MulticastOperator_1\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Allows source Observable to be subscribed only once with a Subject of choice,\n * while still sharing its values between multiple subscribers.\n *\n * <span class=\"informal\">Subscribe to Observable once, but send its values to multiple subscribers.</span>\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * `multicast` is an operator that works in two modes.\n *\n * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject\n * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be\n * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that\n * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when\n * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription\n * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,\n * even though usually it would send a request per every subscriber. Since it sends a request at the moment of\n * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.\n *\n * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,\n * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source\n * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,\n * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count\n * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least\n * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a\n * ConnectableObservable, use `refCount`.\n *\n * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.\n * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable\n * as well, which should be the input stream modified by any operators you want. Note that in this\n * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If\n * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.\n * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,\n * if inside the selector function you subscribe to the input Observable multiple times, actual source stream\n * will be subscribed only once. So if you have a chain of operators that use some Observable many times,\n * but you want to subscribe to that Observable only once, this is the mode you would use.\n *\n * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the\n * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject\n * has some special properties, Observable returned by `multicast` will have them as well. If you want to use\n * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},\n * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},\n * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually\n * just wrappers around `multicast`, with a specific Subject hardcoded inside.\n *\n * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,\n * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.\n *\n * @example <caption>Use ConnectableObservable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const connectableSeconds = seconds.multicast(new Subject());\n *\n * connectableSeconds.subscribe(value => console.log('first: ' + value));\n * connectableSeconds.subscribe(value => console.log('second: ' + value));\n *\n * // At this point still nothing happens, even though we subscribed twice.\n *\n * connectableSeconds.connect();\n *\n * // From now on `seconds` are being logged to the console,\n * // twice per every second. `seconds` Observable was however only subscribed once,\n * // so under the hood Observable.interval had only one clock started.\n *\n * @example <caption>Use selector</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds\n *     .multicast(\n *         () => new Subject(),\n *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.\n *                                         // Because we are inside selector, `seconds` is subscribed once,\n *     )                                   // thus starting only one clock used internally by Observable.interval.\n *     .subscribe();\n *\n * @see {@link publish}\n * @see {@link publishLast}\n * @see {@link publishBehavior}\n * @see {@link publishReplay}\n * @see {@link share}\n * @see {@link shareReplay}\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through\n * which the source sequence's elements will be multicast to the selector function input Observable or\n * ConnectableObservable returned by the operator.\n * @param {Function} [selector] - Optional selector function that can use the input stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the input source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector\n * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.\n *\n * @method multicast\n * @owner Observable\n */\nfunction multicast$2(subjectOrSubjectFactory, selector) {\n    return multicast_1.multicast(subjectOrSubjectFactory, selector)(this);\n}\nvar multicast_3 = multicast$2;\n\n\nvar multicast_2 = {\n\tmulticast: multicast_3\n};\n\nObservable_1.Observable.prototype.multicast = multicast_2.multicast;\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn$3(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return observeOn_1.observeOn(scheduler, delay)(this);\n}\nvar observeOn_3 = observeOn$3;\n\n\nvar observeOn_2$1 = {\n\tobserveOn: observeOn_3\n};\n\nObservable_1.Observable.prototype.observeOn = observeOn_2$1.observeOn;\n\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext$7() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    return onErrorResumeNext_1.onErrorResumeNext.apply(void 0, nextSources)(this);\n}\nvar onErrorResumeNext_3 = onErrorResumeNext$7;\n\n\nvar onErrorResumeNext_2$2 = {\n\tonErrorResumeNext: onErrorResumeNext_3\n};\n\nObservable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_2$2.onErrorResumeNext;\n\nvar __extends$85 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise$3() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar pairwise_2$2 = pairwise$3;\nvar PairwiseOperator = (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = (function (_super) {\n    __extends$85(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar pairwise_1 = {\n\tpairwise: pairwise_2$2\n};\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise$2() {\n    return pairwise_1.pairwise()(this);\n}\nvar pairwise_3 = pairwise$2;\n\n\nvar pairwise_2 = {\n\tpairwise: pairwise_3\n};\n\nObservable_1.Observable.prototype.pairwise = pairwise_2.pairwise;\n\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\nvar not_2 = not;\n\n\nvar not_1 = {\n\tnot: not_2\n};\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition$3(predicate, thisArg) {\n    return function (source) { return [\n        filter_1.filter(predicate, thisArg)(source),\n        filter_1.filter(not_1.not(predicate, thisArg))(source)\n    ]; };\n}\nvar partition_2$2 = partition$3;\n\n\nvar partition_1 = {\n\tpartition: partition_2$2\n};\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition$2(predicate, thisArg) {\n    return partition_1.partition(predicate, thisArg)(this);\n}\nvar partition_3 = partition$2;\n\n\nvar partition_2 = {\n\tpartition: partition_3\n};\n\nObservable_1.Observable.prototype.partition = partition_2.partition;\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck$3() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return function (source) { return map_1.map(plucker(properties, length))(source); };\n}\nvar pluck_2$2 = pluck$3;\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n\n\nvar pluck_1 = {\n\tpluck: pluck_2$2\n};\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck$2() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    return pluck_1.pluck.apply(void 0, properties)(this);\n}\nvar pluck_3 = pluck$2;\n\n\nvar pluck_2 = {\n\tpluck: pluck_3\n};\n\nObservable_1.Observable.prototype.pluck = pluck_2.pluck;\n\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish$3(selector) {\n    return selector ?\n        multicast_1.multicast(function () { return new Subject_1.Subject(); }, selector) :\n        multicast_1.multicast(new Subject_1.Subject());\n}\nvar publish_2$2 = publish$3;\n\n\nvar publish_1 = {\n\tpublish: publish_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish$2(selector) {\n    return publish_1.publish(selector)(this);\n}\nvar publish_3 = publish$2;\n\n\nvar publish_2 = {\n\tpublish: publish_3\n};\n\nObservable_1.Observable.prototype.publish = publish_2.publish;\n\nvar __extends$86 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject$1 = (function (_super) {\n    __extends$86(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @deprecated internal use only */ BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nvar BehaviorSubject_2 = BehaviorSubject$1;\n\n\nvar BehaviorSubject_1 = {\n\tBehaviorSubject: BehaviorSubject_2\n};\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior$3(value) {\n    return function (source) { return multicast_1.multicast(new BehaviorSubject_1.BehaviorSubject(value))(source); };\n}\nvar publishBehavior_2$2 = publishBehavior$3;\n\n\nvar publishBehavior_1 = {\n\tpublishBehavior: publishBehavior_2$2\n};\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior$2(value) {\n    return publishBehavior_1.publishBehavior(value)(this);\n}\nvar publishBehavior_3 = publishBehavior$2;\n\n\nvar publishBehavior_2 = {\n\tpublishBehavior: publishBehavior_3\n};\n\nObservable_1.Observable.prototype.publishBehavior = publishBehavior_2.publishBehavior;\n\n/* tslint:enable:max-line-length */\nfunction publishReplay$3(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    var subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n    return function (source) { return multicast_1.multicast(function () { return subject; }, selector)(source); };\n}\nvar publishReplay_2$2 = publishReplay$3;\n\n\nvar publishReplay_1 = {\n\tpublishReplay: publishReplay_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay$2(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    return publishReplay_1.publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\n}\nvar publishReplay_3 = publishReplay$2;\n\n\nvar publishReplay_2 = {\n\tpublishReplay: publishReplay_3\n};\n\nObservable_1.Observable.prototype.publishReplay = publishReplay_2.publishReplay;\n\nfunction publishLast$3() {\n    return function (source) { return multicast_1.multicast(new AsyncSubject_1.AsyncSubject())(source); };\n}\nvar publishLast_2$2 = publishLast$3;\n\n\nvar publishLast_1 = {\n\tpublishLast: publishLast_2$2\n};\n\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast$2() {\n    //TODO(benlesh): correct type-flow through here.\n    return publishLast_1.publishLast()(this);\n}\nvar publishLast_3 = publishLast$2;\n\n\nvar publishLast_2 = {\n\tpublishLast: publishLast_3\n};\n\nObservable_1.Observable.prototype.publishLast = publishLast_2.publishLast;\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race$6() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function raceOperatorFunction(source) {\n        // if the only argument is an array, it was most likely called with\n        // `pair([obs1, obs2, ...])`\n        if (observables.length === 1 && isArray.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(race_1.race.apply(void 0, [source].concat(observables)));\n    };\n}\nvar race_3$2 = race$6;\n\n\nvar race_2$1 = {\n\trace: race_3$2\n};\n\n// NOTE: to support backwards compatability with 5.4.* and lower\n\nvar raceStatic = race_1.race;\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race$5() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return race_2$1.race.apply(void 0, observables)(this);\n}\nvar race_4 = race$5;\n\n\nvar race_3 = {\n\traceStatic: raceStatic,\n\trace: race_4\n};\n\nObservable_1.Observable.prototype.race = race_3.race;\n\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce$3(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return reduce_1.reduce(accumulator, seed)(this);\n    }\n    return reduce_1.reduce(accumulator)(this);\n}\nvar reduce_3 = reduce$3;\n\n\nvar reduce_2$1 = {\n\treduce: reduce_3\n};\n\nObservable_1.Observable.prototype.reduce = reduce_2$1.reduce;\n\nvar __extends$87 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat$3(count) {\n    if (count === void 0) { count = -1; }\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nvar repeat_2$2 = repeat$3;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    __extends$87(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar repeat_1 = {\n\trepeat: repeat_2$2\n};\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat$2(count) {\n    if (count === void 0) { count = -1; }\n    return repeat_1.repeat(count)(this);\n}\nvar repeat_3 = repeat$2;\n\n\nvar repeat_2 = {\n\trepeat: repeat_3\n};\n\nObservable_1.Observable.prototype.repeat = repeat_2.repeat;\n\nvar __extends$88 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen$3(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nvar repeatWhen_2$2 = repeatWhen$3;\nvar RepeatWhenOperator = (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = (function (_super) {\n    __extends$88(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    /** @deprecated internal use only */ RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    /** @deprecated internal use only */ RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.notifications = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this.notifications = notifications;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject_1.Subject();\n        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject.errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar repeatWhen_1 = {\n\trepeatWhen: repeatWhen_2$2\n};\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen$2(notifier) {\n    return repeatWhen_1.repeatWhen(notifier)(this);\n}\nvar repeatWhen_3 = repeatWhen$2;\n\n\nvar repeatWhen_2 = {\n\trepeatWhen: repeatWhen_3\n};\n\nObservable_1.Observable.prototype.repeatWhen = repeatWhen_2.repeatWhen;\n\nvar __extends$89 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry$3(count) {\n    if (count === void 0) { count = -1; }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nvar retry_2$2 = retry$3;\nvar RetryOperator = (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = (function (_super) {\n    __extends$89(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar retry_1 = {\n\tretry: retry_2$2\n};\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry$2(count) {\n    if (count === void 0) { count = -1; }\n    return retry_1.retry(count)(this);\n}\nvar retry_3 = retry$2;\n\n\nvar retry_2 = {\n\tretry: retry_3\n};\n\nObservable_1.Observable.prototype.retry = retry_2.retry;\n\nvar __extends$90 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen$3(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nvar retryWhen_2$2 = retryWhen$3;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    __extends$90(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject.errorObject) {\n                    return _super.prototype.error.call(this, errorObject.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    /** @deprecated internal use only */ RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this._unsubscribeAndRecycle();\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar retryWhen_1 = {\n\tretryWhen: retryWhen_2$2\n};\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen$2(notifier) {\n    return retryWhen_1.retryWhen(notifier)(this);\n}\nvar retryWhen_3 = retryWhen$2;\n\n\nvar retryWhen_2 = {\n\tretryWhen: retryWhen_3\n};\n\nObservable_1.Observable.prototype.retryWhen = retryWhen_2.retryWhen;\n\nvar __extends$91 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample$3(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nvar sample_2$2 = sample$3;\nvar SampleOperator = (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = (function (_super) {\n    __extends$91(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        _super.apply(this, arguments);\n        this.hasValue = false;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar sample_1 = {\n\tsample: sample_2$2\n};\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample$2(notifier) {\n    return sample_1.sample(notifier)(this);\n}\nvar sample_3 = sample$2;\n\n\nvar sample_2 = {\n\tsample: sample_3\n};\n\nObservable_1.Observable.prototype.sample = sample_2.sample;\n\nvar __extends$92 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime$3(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nvar sampleTime_2$2 = sampleTime$3;\nvar SampleTimeOperator = (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = (function (_super) {\n    __extends$92(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        _super.call(this, destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n\n\nvar sampleTime_1 = {\n\tsampleTime: sampleTime_2$2\n};\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime$2(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return sampleTime_1.sampleTime(period, scheduler)(this);\n}\nvar sampleTime_3 = sampleTime$2;\n\n\nvar sampleTime_2 = {\n\tsampleTime: sampleTime_3\n};\n\nObservable_1.Observable.prototype.sampleTime = sampleTime_2.sampleTime;\n\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan$3(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return scan_1.scan(accumulator, seed)(this);\n    }\n    return scan_1.scan(accumulator)(this);\n}\nvar scan_3 = scan$3;\n\n\nvar scan_2$1 = {\n\tscan: scan_3\n};\n\nObservable_1.Observable.prototype.scan = scan_2$1.scan;\n\nvar __extends$93 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual$3(compareTo, comparor) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };\n}\nvar sequenceEqual_2$2 = sequenceEqual$3;\nvar SequenceEqualOperator = (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nvar SequenceEqualOperator_1 = SequenceEqualOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = (function (_super) {\n    __extends$93(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        _super.call(this, destination);\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch_1.tryCatch(comparor)(a, b);\n                if (areEqual === errorObject.errorObject) {\n                    this.destination.error(errorObject.errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber_1.Subscriber));\nvar SequenceEqualSubscriber_1 = SequenceEqualSubscriber;\nvar SequenceEqualCompareToSubscriber = (function (_super) {\n    __extends$93(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        _super.call(this, destination);\n        this.parent = parent;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar sequenceEqual_1 = {\n\tsequenceEqual: sequenceEqual_2$2,\n\tSequenceEqualOperator: SequenceEqualOperator_1,\n\tSequenceEqualSubscriber: SequenceEqualSubscriber_1\n};\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual$2(compareTo, comparor) {\n    return sequenceEqual_1.sequenceEqual(compareTo, comparor)(this);\n}\nvar sequenceEqual_3 = sequenceEqual$2;\n\n\nvar sequenceEqual_2 = {\n\tsequenceEqual: sequenceEqual_3\n};\n\nObservable_1.Observable.prototype.sequenceEqual = sequenceEqual_2.sequenceEqual;\n\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share$3() {\n    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };\n}\nvar share_2$2 = share$3;\n\n\n\nvar share_1 = {\n\tshare: share_2$2\n};\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share$2() {\n    return share_1.share()(this);\n}\nvar share_3 = share$2;\n\n\n\nvar share_2 = {\n\tshare: share_3\n};\n\nObservable_1.Observable.prototype.share = share_2.share;\n\n/**\n * @method shareReplay\n * @owner Observable\n */\nfunction shareReplay$3(bufferSize, windowTime, scheduler) {\n    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };\n}\nvar shareReplay_2$2 = shareReplay$3;\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subject.complete();\n                },\n            });\n        }\n        var innerSub = subject.subscribe(this);\n        return function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && refCount === 0 && isComplete) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n}\n\n\n\nvar shareReplay_1 = {\n\tshareReplay: shareReplay_2$2\n};\n\n/**\n * @method shareReplay\n * @owner Observable\n */\nfunction shareReplay$2(bufferSize, windowTime, scheduler) {\n    return shareReplay_1.shareReplay(bufferSize, windowTime, scheduler)(this);\n}\nvar shareReplay_3 = shareReplay$2;\n\n\n\nvar shareReplay_2 = {\n\tshareReplay: shareReplay_3\n};\n\nObservable_1.Observable.prototype.shareReplay = shareReplay_2.shareReplay;\n\nvar __extends$94 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single$3(predicate) {\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\n}\nvar single_2$2 = single$3;\nvar SingleOperator = (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = (function (_super) {\n    __extends$94(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar single_1 = {\n\tsingle: single_2$2\n};\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single$2(predicate) {\n    return single_1.single(predicate)(this);\n}\nvar single_3 = single$2;\n\n\nvar single_2 = {\n\tsingle: single_3\n};\n\nObservable_1.Observable.prototype.single = single_2.single;\n\nvar __extends$95 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip$3(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nvar skip_2$2 = skip$3;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    __extends$95(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar skip_1 = {\n\tskip: skip_2$2\n};\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip$2(count) {\n    return skip_1.skip(count)(this);\n}\nvar skip_3 = skip$2;\n\n\nvar skip_2 = {\n\tskip: skip_3\n};\n\nObservable_1.Observable.prototype.skip = skip_2.skip;\n\nvar __extends$96 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast$3(count) {\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\n}\nvar skipLast_2$2 = skipLast$3;\nvar SkipLastOperator = (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber_1.Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipLastSubscriber = (function (_super) {\n    __extends$96(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        _super.call(this, destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar skipLast_1 = {\n\tskipLast: skipLast_2$2\n};\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast$2(count) {\n    return skipLast_1.skipLast(count)(this);\n}\nvar skipLast_3 = skipLast$2;\n\n\nvar skipLast_2 = {\n\tskipLast: skipLast_3\n};\n\nObservable_1.Observable.prototype.skipLast = skipLast_2.skipLast;\n\nvar __extends$97 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil$3(notifier) {\n    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };\n}\nvar skipUntil_2$2 = skipUntil$3;\nvar SkipUntilOperator = (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = (function (_super) {\n    __extends$97(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.isInnerStopped = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar skipUntil_1 = {\n\tskipUntil: skipUntil_2$2\n};\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil$2(notifier) {\n    return skipUntil_1.skipUntil(notifier)(this);\n}\nvar skipUntil_3 = skipUntil$2;\n\n\nvar skipUntil_2 = {\n\tskipUntil: skipUntil_3\n};\n\nObservable_1.Observable.prototype.skipUntil = skipUntil_2.skipUntil;\n\nvar __extends$98 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile$3(predicate) {\n    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };\n}\nvar skipWhile_2$2 = skipWhile$3;\nvar SkipWhileOperator = (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = (function (_super) {\n    __extends$98(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar skipWhile_1 = {\n\tskipWhile: skipWhile_2$2\n};\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile$2(predicate) {\n    return skipWhile_1.skipWhile(predicate)(this);\n}\nvar skipWhile_3 = skipWhile$2;\n\n\nvar skipWhile_2 = {\n\tskipWhile: skipWhile_3\n};\n\nObservable_1.Observable.prototype.skipWhile = skipWhile_2.skipWhile;\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith$3() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1) {\n            return concat_1.concat(new ScalarObservable_1.ScalarObservable(array[0], scheduler), source);\n        }\n        else if (len > 1) {\n            return concat_1.concat(new ArrayObservable_1.ArrayObservable(array, scheduler), source);\n        }\n        else {\n            return concat_1.concat(new EmptyObservable_1.EmptyObservable(scheduler), source);\n        }\n    };\n}\nvar startWith_2$2 = startWith$3;\n\n\nvar startWith_1 = {\n\tstartWith: startWith_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith$2() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return startWith_1.startWith.apply(void 0, array)(this);\n}\nvar startWith_3 = startWith$2;\n\n\nvar startWith_2 = {\n\tstartWith: startWith_3\n};\n\nObservable_1.Observable.prototype.startWith = startWith_2.startWith;\n\nvar ImmediateDefinition = (function () {\n    function ImmediateDefinition(root$$2) {\n        this.root = root$$2;\n        if (root$$2.setImmediate && typeof root$$2.setImmediate === 'function') {\n            this.setImmediate = root$$2.setImmediate.bind(root$$2);\n            this.clearImmediate = root$$2.clearImmediate.bind(root$$2);\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6–8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            var ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    ImmediateDefinition.prototype.identify = function (o) {\n        return this.root.Object.prototype.toString.call(o);\n    };\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\n        return this.identify(this.root.process) === '[object process]';\n    };\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\n        return Boolean(this.root.MessageChannel);\n    };\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\n        var document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    };\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\n        var root$$2 = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root$$2.postMessage && !root$$2.importScripts) {\n            var postMessageIsAsynchronous_1 = true;\n            var oldOnMessage = root$$2.onmessage;\n            root$$2.onmessage = function () {\n                postMessageIsAsynchronous_1 = false;\n            };\n            root$$2.postMessage('', '*');\n            root$$2.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous_1;\n        }\n        return false;\n    };\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fn = function result() {\n            var _a = result, handler = _a.handler, args = _a.args;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    };\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    };\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        var root$$2 = this.root;\n        var messagePrefix = 'setImmediate$' + root$$2.Math.random() + '$';\n        var onGlobalMessage = function globalMessageHandler(event) {\n            var instance = globalMessageHandler.instance;\n            if (event.source === root$$2 &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        onGlobalMessage.instance = this;\n        root$$2.addEventListener('message', onGlobalMessage, false);\n        var fn = function setImmediate() {\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    };\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            var task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    };\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\n        var _this = this;\n        var channel = new this.root.MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            _this.runIfPresent(handle);\n        };\n        var fn = function setImmediate() {\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var root$$2 = instance.root;\n            var doc = root$$2.document;\n            var html = doc.documentElement;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement('script');\n            script.onreadystatechange = function () {\n                instance.runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    return ImmediateDefinition;\n}());\nvar ImmediateDefinition_1 = ImmediateDefinition;\nvar Immediate_1 = new ImmediateDefinition(root.root);\n\n\nvar Immediate = {\n\tImmediateDefinition: ImmediateDefinition_1,\n\tImmediate: Immediate_1\n};\n\nvar __extends$100 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = (function (_super) {\n    __extends$100(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate.Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction_1.AsyncAction));\nvar AsapAction_2 = AsapAction;\n\n\nvar AsapAction_1 = {\n\tAsapAction: AsapAction_2\n};\n\nvar __extends$101 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar AsapScheduler = (function (_super) {\n    __extends$101(AsapScheduler, _super);\n    function AsapScheduler() {\n        _super.apply(this, arguments);\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nvar AsapScheduler_2 = AsapScheduler;\n\n\nvar AsapScheduler_1 = {\n\tAsapScheduler: AsapScheduler_2\n};\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nvar asap_1 = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);\n\n\nvar asap = {\n\tasap: asap_1\n};\n\nvar __extends$99 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = (function (_super) {\n    __extends$99(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) { delayTime = 0; }\n        if (scheduler === void 0) { scheduler = asap.asap; }\n        _super.call(this);\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap.asap;\n        }\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) { delay = 0; }\n        if (scheduler === void 0) { scheduler = asap.asap; }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    /** @deprecated internal use only */ SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable_1.Observable));\nvar SubscribeOnObservable_2 = SubscribeOnObservable;\n\n\nvar SubscribeOnObservable_1 = {\n\tSubscribeOnObservable: SubscribeOnObservable_2\n};\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn$3(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nvar subscribeOn_2$2 = subscribeOn$3;\nvar SubscribeOnOperator = (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n\n\nvar subscribeOn_1 = {\n\tsubscribeOn: subscribeOn_2$2\n};\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn$2(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return subscribeOn_1.subscribeOn(scheduler, delay)(this);\n}\nvar subscribeOn_3 = subscribeOn$2;\n\n\nvar subscribeOn_2 = {\n\tsubscribeOn: subscribeOn_3\n};\n\nObservable_1.Observable.prototype.subscribeOn = subscribeOn_2.subscribeOn;\n\nvar __extends$102 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nvar switchMap_2 = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends$102(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    /** @deprecated internal use only */ SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar switchMap_1 = {\n\tswitchMap: switchMap_2\n};\n\nfunction switchAll() {\n    return switchMap_1.switchMap(identity_1.identity);\n}\nvar switchAll_2 = switchAll;\n\n\nvar switchAll_1 = {\n\tswitchAll: switchAll_2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch$2() {\n    return switchAll_1.switchAll()(this);\n}\nvar _switch_2 = _switch$2;\n\n\nvar _switch_1 = {\n\t_switch: _switch_2\n};\n\nObservable_1.Observable.prototype.switch = _switch_1._switch;\nObservable_1.Observable.prototype._switch = _switch_1._switch;\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap$3(project, resultSelector) {\n    return switchMap_1.switchMap(project, resultSelector)(this);\n}\nvar switchMap_3 = switchMap$3;\n\n\nvar switchMap_2$1 = {\n\tswitchMap: switchMap_3\n};\n\nObservable_1.Observable.prototype.switchMap = switchMap_2$1.switchMap;\n\nvar __extends$103 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo$3(innerObservable, resultSelector) {\n    return function (source) { return source.lift(new SwitchMapToOperator(innerObservable, resultSelector)); };\n}\nvar switchMapTo_2$2 = switchMapTo$3;\nvar SwitchMapToOperator = (function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = (function (_super) {\n    __extends$103(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        _super.call(this, destination);\n        this.inner = inner;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    /** @deprecated internal use only */ SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar switchMapTo_1 = {\n\tswitchMapTo: switchMapTo_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo$2(innerObservable, resultSelector) {\n    return switchMapTo_1.switchMapTo(innerObservable, resultSelector)(this);\n}\nvar switchMapTo_3 = switchMapTo$2;\n\n\nvar switchMapTo_2 = {\n\tswitchMapTo: switchMapTo_3\n};\n\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_2.switchMapTo;\n\nvar __extends$104 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take$3(count) {\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar take_2$2 = take$3;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    __extends$104(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar take_1 = {\n\ttake: take_2$2\n};\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take$2(count) {\n    return take_1.take(count)(this);\n}\nvar take_3 = take$2;\n\n\nvar take_2 = {\n\ttake: take_3\n};\n\nObservable_1.Observable.prototype.take = take_2.take;\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast$3(count) {\n    return takeLast_1.takeLast(count)(this);\n}\nvar takeLast_3 = takeLast$3;\n\n\nvar takeLast_2$1 = {\n\ttakeLast: takeLast_3\n};\n\nObservable_1.Observable.prototype.takeLast = takeLast_2$1.takeLast;\n\nvar __extends$105 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil$3(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar takeUntil_2$2 = takeUntil$3;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    __extends$105(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar takeUntil_1 = {\n\ttakeUntil: takeUntil_2$2\n};\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil$2(notifier) {\n    return takeUntil_1.takeUntil(notifier)(this);\n}\nvar takeUntil_3 = takeUntil$2;\n\n\nvar takeUntil_2 = {\n\ttakeUntil: takeUntil_3\n};\n\nObservable_1.Observable.prototype.takeUntil = takeUntil_2.takeUntil;\n\nvar __extends$106 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile$3(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nvar takeWhile_2$2 = takeWhile$3;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    __extends$106(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar takeWhile_1 = {\n\ttakeWhile: takeWhile_2$2\n};\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile$2(predicate) {\n    return takeWhile_1.takeWhile(predicate)(this);\n}\nvar takeWhile_3 = takeWhile$2;\n\n\nvar takeWhile_2 = {\n\ttakeWhile: takeWhile_3\n};\n\nObservable_1.Observable.prototype.takeWhile = takeWhile_2.takeWhile;\n\nvar throttle_1 = createCommonjsModule(function (module, exports) {\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\nexports.defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = exports.defaultThrottleConfig; }\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasTrailingValue = false;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this._trailing) {\n                this._hasTrailingValue = true;\n                this._trailingValue = value;\n            }\n        }\n        else {\n            var duration = this.tryDurationSelector(value);\n            if (duration) {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n            if (this._leading) {\n                this.destination.next(value);\n                if (this._trailing) {\n                    this._hasTrailingValue = true;\n                    this._trailingValue = value;\n                }\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    /** @deprecated internal use only */ ThrottleSubscriber.prototype._unsubscribe = function () {\n        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype._sendTrailing = function () {\n        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;\n        if (throttled && _trailing && _hasTrailingValue) {\n            destination.next(_trailingValue);\n            this._trailingValue = null;\n            this._hasTrailingValue = false;\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n});\n\nvar throttle_2$2 = throttle_1.defaultThrottleConfig;\nvar throttle_3$1 = throttle_1.throttle;\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle$2(durationSelector, config) {\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return throttle_1.throttle(durationSelector, config)(this);\n}\nvar throttle_3 = throttle$2;\n\n\nvar throttle_2 = {\n\tthrottle: throttle_3\n};\n\nObservable_1.Observable.prototype.throttle = throttle_2.throttle;\n\nvar __extends$107 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime$3(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\n}\nvar throttleTime_2$2 = throttleTime$3;\nvar ThrottleTimeOperator = (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = (function (_super) {\n    __extends$107(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext$4, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext$4(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n\n\nvar throttleTime_1 = {\n\tthrottleTime: throttleTime_2$2\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime$2(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return throttleTime_1.throttleTime(duration, scheduler, config)(this);\n}\nvar throttleTime_3 = throttleTime$2;\n\n\nvar throttleTime_2 = {\n\tthrottleTime: throttleTime_3\n};\n\nObservable_1.Observable.prototype.throttleTime = throttleTime_2.throttleTime;\n\nvar __extends$108 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\nfunction timeInterval$3(scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return function (source) { return source.lift(new TimeIntervalOperator(scheduler)); };\n}\nvar timeInterval_2$2 = timeInterval$3;\nvar TimeInterval$2 = (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nvar TimeInterval_1 = TimeInterval$2;\n\nvar TimeIntervalOperator = (function () {\n    function TimeIntervalOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimeIntervalOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n    };\n    return TimeIntervalOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeIntervalSubscriber = (function (_super) {\n    __extends$108(TimeIntervalSubscriber, _super);\n    function TimeIntervalSubscriber(destination, scheduler) {\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.lastTime = 0;\n        this.lastTime = scheduler.now();\n    }\n    TimeIntervalSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        var span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval$2(value, span));\n    };\n    return TimeIntervalSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar timeInterval_1 = {\n\ttimeInterval: timeInterval_2$2,\n\tTimeInterval: TimeInterval_1\n};\n\nvar TimeInterval$1 = timeInterval_1.TimeInterval;\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval$2(scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return timeInterval_1.timeInterval(scheduler)(this);\n}\nvar timeInterval_3 = timeInterval$2;\n\n\nvar timeInterval_2 = {\n\tTimeInterval: TimeInterval$1,\n\ttimeInterval: timeInterval_3\n};\n\nObservable_1.Observable.prototype.timeInterval = timeInterval_2.timeInterval;\n\nvar __extends$110 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError$1 = (function (_super) {\n    __extends$110(TimeoutError, _super);\n    function TimeoutError() {\n        var err = _super.call(this, 'Timeout has occurred');\n        this.name = err.name = 'TimeoutError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return TimeoutError;\n}(Error));\nvar TimeoutError_2 = TimeoutError$1;\n\n\nvar TimeoutError_1 = {\n\tTimeoutError: TimeoutError_2\n};\n\nvar __extends$109 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout$3(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return function (source) { return source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError())); };\n}\nvar timeout_2$2 = timeout$3;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    __extends$109(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutSubscriber.dispatchTimeout = function (subscriber) {\n        subscriber.error(subscriber.errorInstance);\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    /** @deprecated internal use only */ TimeoutSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.errorInstance = null;\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar timeout_1 = {\n\ttimeout: timeout_2$2\n};\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout$2(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return timeout_1.timeout(due, scheduler)(this);\n}\nvar timeout_3 = timeout$2;\n\n\nvar timeout_2 = {\n\ttimeout: timeout_3\n};\n\nObservable_1.Observable.prototype.timeout = timeout_2.timeout;\n\nvar __extends$111 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith$3(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return function (source) {\n        var absoluteTimeout = isDate_1.isDate(due);\n        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nvar timeoutWith_2$2 = timeoutWith$3;\nvar TimeoutWithOperator = (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = (function (_super) {\n    __extends$111(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    /** @deprecated internal use only */ TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar timeoutWith_1 = {\n\ttimeoutWith: timeoutWith_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith$2(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return timeoutWith_1.timeoutWith(due, withObservable, scheduler)(this);\n}\nvar timeoutWith_3 = timeoutWith$2;\n\n\nvar timeoutWith_2 = {\n\ttimeoutWith: timeoutWith_3\n};\n\nObservable_1.Observable.prototype.timeoutWith = timeoutWith_2.timeoutWith;\n\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp$3(scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return map_1.map(function (value) { return new Timestamp$1(value, scheduler.now()); });\n    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\nvar timestamp_2$2 = timestamp$3;\nvar Timestamp$1 = (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nvar Timestamp_1 = Timestamp$1;\n\n\n\nvar timestamp_1 = {\n\ttimestamp: timestamp_2$2,\n\tTimestamp: Timestamp_1\n};\n\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp$2(scheduler) {\n    if (scheduler === void 0) { scheduler = async.async; }\n    return timestamp_1.timestamp(scheduler)(this);\n}\nvar timestamp_3 = timestamp$2;\n\n\nvar timestamp_2 = {\n\ttimestamp: timestamp_3\n};\n\nObservable_1.Observable.prototype.timestamp = timestamp_2.timestamp;\n\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nfunction toArray$3() {\n    return reduce_1.reduce(toArrayReducer, []);\n}\nvar toArray_2$2 = toArray$3;\n\n\nvar toArray_1 = {\n\ttoArray: toArray_2$2\n};\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * <img src=\"./img/toArray.png\" width=\"100%\">\n *\n * `toArray` will wait until the source Observable completes\n * before emitting the array containing all emissions.\n * When the source Observable errors no array will be emitted.\n *\n * @example <caption>Create array from input</caption>\n * const input = Rx.Observable.interval(100).take(4);\n *\n * input.toArray()\n *   .subscribe(arr => console.log(arr)); // [0,1,2,3]\n *\n * @see {@link buffer}\n *\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray$2() {\n    return toArray_1.toArray()(this);\n}\nvar toArray_3 = toArray$2;\n\n\nvar toArray_2 = {\n\ttoArray: toArray_3\n};\n\nObservable_1.Observable.prototype.toArray = toArray_2.toArray;\n\n// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.\n// leaving this module here to prevent breakage.\n\nvar __extends$112 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window$4(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nvar window_2$2 = window$4;\nvar WindowOperator = (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends$112(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        _super.call(this, destination);\n        this.window = new Subject_1.Subject();\n        destination.next(this.window);\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    /** @deprecated internal use only */ WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject_1.Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar window_1 = {\n\twindow: window_2$2\n};\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window$3(windowBoundaries) {\n    return window_1.window(windowBoundaries)(this);\n}\nvar window_3 = window$3;\n\n\nvar window_2 = {\n\twindow: window_3\n};\n\nObservable_1.Observable.prototype.window = window_2.window;\n\nvar __extends$113 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount$3(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nvar windowCount_2$2 = windowCount$3;\nvar WindowCountOperator = (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = (function (_super) {\n    __extends$113(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject_1.Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject_1.Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    /** @deprecated internal use only */ WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar windowCount_1 = {\n\twindowCount: windowCount_2$2\n};\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount$2(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return windowCount_1.windowCount(windowSize, startWindowEvery)(this);\n}\nvar windowCount_3 = windowCount$2;\n\n\nvar windowCount_2 = {\n\twindowCount: windowCount_3\n};\n\nObservable_1.Observable.prototype.windowCount = windowCount_2.windowCount;\n\nvar __extends$114 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\nfunction windowTime$3(windowTimeSpan) {\n    var scheduler = async.async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric_1.isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric_1.isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nvar windowTime_2$2 = windowTime$3;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = (function (_super) {\n    __extends$114(CountedSubject, _super);\n    function CountedSubject() {\n        _super.apply(this, arguments);\n        this._numberOfNextedValues = 0;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject_1.Subject));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = (function (_super) {\n    __extends$114(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        var window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: this, window: window, windowTimeSpan: windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n\n\nvar windowTime_1 = {\n\twindowTime: windowTime_2$2\n};\n\nfunction windowTime$2(windowTimeSpan) {\n    var scheduler = async.async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric_1.isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric_1.isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return windowTime_1.windowTime(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);\n}\nvar windowTime_3 = windowTime$2;\n\n\nvar windowTime_2 = {\n\twindowTime: windowTime_3\n};\n\nObservable_1.Observable.prototype.windowTime = windowTime_2.windowTime;\n\nvar __extends$115 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle$3(openings, closingSelector) {\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\n}\nvar windowToggle_2$2 = windowToggle$3;\nvar WindowToggleOperator = (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = (function (_super) {\n    __extends$115(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject.errorObject) {\n                return this.error(errorObject.errorObject.e);\n            }\n            else {\n                var window_1 = new Subject_1.Subject();\n                var subscription = new Subscription_1.Subscription();\n                var context = { window: window_1, subscription: subscription };\n                this.contexts.push(context);\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar windowToggle_1 = {\n\twindowToggle: windowToggle_2$2\n};\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle$2(openings, closingSelector) {\n    return windowToggle_1.windowToggle(openings, closingSelector)(this);\n}\nvar windowToggle_3 = windowToggle$2;\n\n\nvar windowToggle_2 = {\n\twindowToggle: windowToggle_3\n};\n\nObservable_1.Observable.prototype.windowToggle = windowToggle_2.windowToggle;\n\nvar __extends$116 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen$3(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator$1(closingSelector));\n    };\n}\nvar windowWhen_2$2 = windowWhen$3;\nvar WindowOperator$1 = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber$1(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber$1 = (function (_super) {\n    __extends$116(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject.errorObject) {\n            var err = errorObject.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar windowWhen_1 = {\n\twindowWhen: windowWhen_2$2\n};\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen$2(closingSelector) {\n    return windowWhen_1.windowWhen(closingSelector)(this);\n}\nvar windowWhen_3 = windowWhen$2;\n\n\nvar windowWhen_2 = {\n\twindowWhen: windowWhen_3\n};\n\nObservable_1.Observable.prototype.windowWhen = windowWhen_2.windowWhen;\n\nvar __extends$117 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom$3() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar withLatestFrom_2$2 = withLatestFrom$3;\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends$117(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n\n\nvar withLatestFrom_1 = {\n\twithLatestFrom: withLatestFrom_2$2\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom$2() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return withLatestFrom_1.withLatestFrom.apply(void 0, args)(this);\n}\nvar withLatestFrom_3 = withLatestFrom$2;\n\n\nvar withLatestFrom_2 = {\n\twithLatestFrom: withLatestFrom_3\n};\n\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_2.withLatestFrom;\n\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return zip_1.zip.apply(void 0, observables)(this);\n}\nvar zipProto_1 = zipProto;\n\n\nvar zip$7 = {\n\tzipProto: zipProto_1\n};\n\nObservable_1.Observable.prototype.zip = zip$7.zipProto;\n\nfunction zipAll$3(project) {\n    return function (source) { return source.lift(new zip_1.ZipOperator(project)); };\n}\nvar zipAll_2$2 = zipAll$3;\n\n\nvar zipAll_1 = {\n\tzipAll: zipAll_2$2\n};\n\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll$2(project) {\n    return zipAll_1.zipAll(project)(this);\n}\nvar zipAll_3 = zipAll$2;\n\n\nvar zipAll_2 = {\n\tzipAll: zipAll_3\n};\n\nObservable_1.Observable.prototype.zipAll = zipAll_2.zipAll;\n\nvar SubscriptionLog = (function () {\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n    return SubscriptionLog;\n}());\nvar SubscriptionLog_2 = SubscriptionLog;\n\n\nvar SubscriptionLog_1 = {\n\tSubscriptionLog: SubscriptionLog_2\n};\n\nvar SubscriptionLoggable = (function () {\n    function SubscriptionLoggable() {\n        this.subscriptions = [];\n    }\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    };\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n        var subscriptionLogs = this.subscriptions;\n        var oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    };\n    return SubscriptionLoggable;\n}());\nvar SubscriptionLoggable_2 = SubscriptionLoggable;\n\n\nvar SubscriptionLoggable_1 = {\n\tSubscriptionLoggable: SubscriptionLoggable_2\n};\n\nfunction applyMixins(derivedCtor, baseCtors) {\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\n        var baseCtor = baseCtors[i];\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            var name_1 = propertyKeys[j];\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n        }\n    }\n}\nvar applyMixins_2 = applyMixins;\n\n\nvar applyMixins_1 = {\n\tapplyMixins: applyMixins_2\n};\n\nvar __extends$119 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ColdObservable = (function (_super) {\n    __extends$119(ColdObservable, _super);\n    function ColdObservable(messages, scheduler) {\n        _super.call(this, function (subscriber) {\n            var observable = this;\n            var index = observable.logSubscribedFrame();\n            subscriber.add(new Subscription_1.Subscription(function () {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscriber;\n        });\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\n        var messagesLength = this.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            var message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(function (_a) {\n                var message = _a.message, subscriber = _a.subscriber;\n                message.notification.observe(subscriber);\n            }, message.frame, { message: message, subscriber: subscriber }));\n        }\n    };\n    return ColdObservable;\n}(Observable_1.Observable));\nvar ColdObservable_2 = ColdObservable;\napplyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n\n\nvar ColdObservable_1 = {\n\tColdObservable: ColdObservable_2\n};\n\nvar __extends$120 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar HotObservable = (function (_super) {\n    __extends$120(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        _super.call(this);\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    /** @deprecated internal use only */ HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription_1.Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        /* tslint:disable:no-var-keyword */\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                /* tslint:enable */\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject_1.Subject));\nvar HotObservable_2 = HotObservable;\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n\n\nvar HotObservable_1 = {\n\tHotObservable: HotObservable_2\n};\n\nvar __extends$121 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\nvar VirtualTimeScheduler$1 = (function (_super) {\n    __extends$121(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        var _this = this;\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\n        _super.call(this, SchedulerAction, function () { return _this.frame; });\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nvar VirtualTimeScheduler_2 = VirtualTimeScheduler$1;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = (function (_super) {\n    __extends$121(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = scheduler.index += 1; }\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction_1.AsyncAction));\nvar VirtualAction_1 = VirtualAction;\n\n\nvar VirtualTimeScheduler_1 = {\n\tVirtualTimeScheduler: VirtualTimeScheduler_2,\n\tVirtualAction: VirtualAction_1\n};\n\nvar __extends$118 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\nvar defaultMaxFrame = 750;\nvar TestScheduler$1 = (function (_super) {\n    __extends$118(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);\n        this.assertDeepEqual = assertDeepEqual;\n        this.hotObservables = [];\n        this.coldObservables = [];\n        this.flushTests = [];\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var subject = new HotObservable_1.HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable_1.Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\n        while (readyFlushTests.length > 0) {\n            var test = readyFlushTests.shift();\n            this.assertDeepEqual(test.actual, test.expected);\n        }\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = marbles.indexOf('^');\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor + frameOffset;\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '|':\n                    notification = Notification_1.Notification.createComplete();\n                    break;\n                case '^':\n                    break;\n                case '#':\n                    notification = Notification_1.Notification.createError(errorValue || 'error');\n                    break;\n                default:\n                    notification = Notification_1.Notification.createNext(getValue(c));\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n        }\n        return testMessages;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\n\nvar RequestAnimationFrameDefinition = (function () {\n    function RequestAnimationFrameDefinition(root$$2) {\n        if (root$$2.requestAnimationFrame) {\n            this.cancelAnimationFrame = root$$2.cancelAnimationFrame.bind(root$$2);\n            this.requestAnimationFrame = root$$2.requestAnimationFrame.bind(root$$2);\n        }\n        else if (root$$2.mozRequestAnimationFrame) {\n            this.cancelAnimationFrame = root$$2.mozCancelAnimationFrame.bind(root$$2);\n            this.requestAnimationFrame = root$$2.mozRequestAnimationFrame.bind(root$$2);\n        }\n        else if (root$$2.webkitRequestAnimationFrame) {\n            this.cancelAnimationFrame = root$$2.webkitCancelAnimationFrame.bind(root$$2);\n            this.requestAnimationFrame = root$$2.webkitRequestAnimationFrame.bind(root$$2);\n        }\n        else if (root$$2.msRequestAnimationFrame) {\n            this.cancelAnimationFrame = root$$2.msCancelAnimationFrame.bind(root$$2);\n            this.requestAnimationFrame = root$$2.msRequestAnimationFrame.bind(root$$2);\n        }\n        else if (root$$2.oRequestAnimationFrame) {\n            this.cancelAnimationFrame = root$$2.oCancelAnimationFrame.bind(root$$2);\n            this.requestAnimationFrame = root$$2.oRequestAnimationFrame.bind(root$$2);\n        }\n        else {\n            this.cancelAnimationFrame = root$$2.clearTimeout.bind(root$$2);\n            this.requestAnimationFrame = function (cb) { return root$$2.setTimeout(cb, 1000 / 60); };\n        }\n    }\n    return RequestAnimationFrameDefinition;\n}());\nvar RequestAnimationFrameDefinition_1 = RequestAnimationFrameDefinition;\nvar AnimationFrame_1 = new RequestAnimationFrameDefinition(root.root);\n\n\nvar AnimationFrame = {\n\tRequestAnimationFrameDefinition: RequestAnimationFrameDefinition_1,\n\tAnimationFrame: AnimationFrame_1\n};\n\nvar __extends$122 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = (function (_super) {\n    __extends$122(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            AnimationFrame.AnimationFrame.cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction_1.AsyncAction));\nvar AnimationFrameAction_2 = AnimationFrameAction;\n\n\nvar AnimationFrameAction_1 = {\n\tAnimationFrameAction: AnimationFrameAction_2\n};\n\nvar __extends$123 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar AnimationFrameScheduler = (function (_super) {\n    __extends$123(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        _super.apply(this, arguments);\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nvar AnimationFrameScheduler_2 = AnimationFrameScheduler;\n\n\nvar AnimationFrameScheduler_1 = {\n\tAnimationFrameScheduler: AnimationFrameScheduler_2\n};\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nvar animationFrame_1 = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);\n\nvar throttle$3 = throttle_1.throttle;\n\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\n\nvar Subject = Subject_1.Subject;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: rxSubscriber.rxSubscriber,\n    observable: observable.observable,\n    iterator: iterator.iterator\n};\n\n// We need to import like this, because of backward compatibility of angular\n/* tslint:disable */\nclass AtpTimePickerComponent {\n    /**\n     * @param {?} resolver\n     * @param {?} appRef\n     */\n    constructor(resolver, appRef) {\n        this.resolver = resolver;\n        this.appRef = appRef;\n        this.timeSelected = new EventEmitter();\n        this.config = {};\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        let /** @type {?} */ config = this.config;\n        config = {\n            time: config.time || '00:00',\n            theme: ['light', 'dark', 'material'].indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',\n            rangeTime: config.rangeTime || { start: '0:0', end: '24:0' },\n            arrowStyle: config.arrowStyle || {}\n        };\n        config.arrowStyle = {\n            background: (config.arrowStyle.background) ?\n                config.arrowStyle.background : config.theme !== undefined ?\n                config.theme === 'dark' ? 'rgb(128, 203, 196)' : 'blue' : 'blue',\n            color: config.arrowStyle.color || '#fff'\n        };\n        const /** @type {?} */ cfr = this.resolver.resolveComponentFactory(TimePickerComponent);\n        const /** @type {?} */ tsc = this.container.createComponent(cfr);\n        tsc.instance.subject = new Subject();\n        tsc.instance._ref = tsc;\n        tsc.instance.appRef = this.appRef;\n        tsc.instance.timerElement = '';\n        tsc.instance.config = config;\n        tsc.instance.activeModal = true;\n        tsc.instance.isPopup = false;\n        tsc.instance.ParseStringToTime(config.time);\n        tsc.instance.subject.asObservable().subscribe(time => {\n            this.timeSelected.emit(time);\n        });\n    }\n}\nAtpTimePickerComponent.ɵfac = function AtpTimePickerComponent_Factory(t) { return new (t || AtpTimePickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef)); };\nAtpTimePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AtpTimePickerComponent, selectors: [[\"atp-time-picker\"]], viewQuery: function AtpTimePickerComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c6, true, ViewContainerRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n    } }, outputs: { timeSelected: \"timeSelected\" }, decls: 2, vars: 0, consts: [[\"container\", \"\"]], template: function AtpTimePickerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } }, styles: [\".atp-time-picker[_ngcontent-%COMP%]   .icon-container[_ngcontent-%COMP%] {\\n      display: inline-block;\\n      margin-right: .2em; }\\n      .atp-time-picker[_ngcontent-%COMP%]   .icon-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%] {\\n        cursor: pointer;\\n        position: relative;\\n        top: .5em; }\\n      .atp-time-picker[_ngcontent-%COMP%]   .icon-container[_ngcontent-%COMP%]     i {\\n        cursor: pointer; }\"] });\n/**\n * @nocollapse\n */\nAtpTimePickerComponent.ctorParameters = () => [\n    { type: ComponentFactoryResolver, },\n    { type: ApplicationRef, },\n];\nAtpTimePickerComponent.propDecorators = {\n    'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] },],\n    'timeSelected': [{ type: Output },],\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AtpTimePickerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'atp-time-picker',\n                template: `\n    <div #container></div>\n  `,\n                styles: [`\n    .atp-time-picker .icon-container {\n      display: inline-block;\n      margin-right: .2em; }\n      .atp-time-picker .icon-container svg {\n        cursor: pointer;\n        position: relative;\n        top: .5em; }\n      .atp-time-picker .icon-container /deep/ i {\n        cursor: pointer; }\n  `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }]; }, { timeSelected: [{\n            type: Output\n        }], container: [{\n            type: ViewChild,\n            args: ['container', { read: ViewContainerRef }]\n        }] }); })();\n\nconst arabic = new Intl.NumberFormat('ar-AE');\nconst persian = new Intl.NumberFormat('fa-IR');\nconst PersianPreference = {\n    hour: (x) => persian.format(x),\n    minute: (x) => {\n        let /** @type {?} */ exp = persian.format(x);\n        if (exp.length === 1) {\n            exp = persian.format(0) + exp;\n        }\n        return exp;\n    },\n    separator: ':',\n    period: (x) => x === 'AM' ? 'صبح' : 'عصر',\n    clockHour: (x) => persian.format(x),\n    clockMinute: (x) => persian.format(x),\n    labels: {\n        ok: 'تایید',\n        cancel: 'لغو'\n    }\n};\nconst ArabicPreference = {\n    hour: (x) => arabic.format(x),\n    minute: (x) => {\n        let /** @type {?} */ exp = arabic.format(x);\n        if (exp.length === 1) {\n            exp = arabic.format(0) + exp;\n        }\n        return exp;\n    },\n    separator: ':',\n    period: (x) => x === 'AM' ? 'صباحا' : 'مساء',\n    clockHour: (x) => arabic.format(x),\n    clockMinute: (x) => arabic.format(x),\n    labels: {\n        ok: 'حسنا',\n        cancel: 'إلغاء'\n    }\n};\nconst ChinesePreference = {\n    hour: (x) => x,\n    minute: (x) => {\n        let /** @type {?} */ exp = x;\n        if (exp.length === 1) {\n            exp = '۰' + exp;\n        }\n        return exp;\n    },\n    separator: ':',\n    period: (x) => x === 'AM' ? '上午' : '下午',\n    clockHour: (x) => x,\n    clockMinute: (x) => x,\n    labels: {\n        ok: '确定',\n        cancel: '取消'\n    }\n};\nconst Preference = (locale) => {\n    switch (locale) {\n        case 'fa':\n            return PersianPreference;\n        case 'ar':\n            return ArabicPreference;\n        case 'zh':\n            return ChinesePreference;\n        default:\n            return null;\n    }\n};\n\n// We need to import like this, because of backward compatibility of angular\n/* tslint:disable */\n/* tslint:enable */\nclass AmazingTimePickerService {\n    /**\n     * @param {?} resolver\n     * @param {?} appRef\n     * @param {?} injector\n     */\n    constructor(resolver, appRef, injector) {\n        this.resolver = resolver;\n        this.appRef = appRef;\n        this.injector = injector;\n    }\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    open(config) {\n        const /** @type {?} */ thems = ['light', 'dark', 'material-red', 'material-green', 'material-blue', 'material-purple', 'material-orange'];\n        config = config || {};\n        config = ({\n            time: config.time || '00:00',\n            theme: thems.indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',\n            rangeTime: config.rangeTime || { start: '0:0', end: '24:0' },\n            arrowStyle: config.arrowStyle || {},\n            locale: config.locale || 'en',\n            changeToMinutes: config.changeToMinutes,\n            animation: (config.animation == null || config.animation === 'fade') ? 'fade' : (config.animation === 'rotate') ? 'rotate' : false,\n            preference: config.preference || null,\n            onlyHour: config.onlyHour,\n            onlyMinute: config.onlyMinute,\n            onlyAM: config.onlyAM,\n            onlyPM: config.onlyPM,\n        });\n        config.rangeTime = {\n            start: config.rangeTime.start || '0:0',\n            end: config.rangeTime.end || '24:0',\n        };\n        config.arrowStyle = {\n            background: (config.arrowStyle.background) ?\n                config.arrowStyle.background : config.theme !== undefined ?\n                config.theme === 'dark' ? 'rgb(128, 203, 196)' : '' : '',\n            color: config.arrowStyle.color || ''\n        };\n        const /** @type {?} */ componentRef = this.resolver.resolveComponentFactory(TimePickerComponent);\n        const /** @type {?} */ tsc = componentRef.create(this.injector);\n        this.appRef.attachView(tsc.hostView);\n        const /** @type {?} */ domElem = (((tsc.hostView)).rootNodes[0]);\n        document.body.appendChild(domElem);\n        tsc.instance.subject = new Subject();\n        tsc.instance._ref = tsc;\n        tsc.instance.appRef = this.appRef;\n        tsc.instance.timerElement = '';\n        tsc.instance.config = config;\n        if (config.preference) {\n            tsc.instance.preference = config.preference;\n        }\n        else {\n            tsc.instance.preference = Preference(config.locale);\n        }\n        tsc.instance.ParseStringToTime(config.time);\n        return {\n            afterClose: function () {\n                return tsc.instance.subject.asObservable();\n            }\n        };\n    }\n}\nAmazingTimePickerService.ɵfac = function AmazingTimePickerService_Factory(t) { return new (t || AmazingTimePickerService)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nAmazingTimePickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AmazingTimePickerService, factory: AmazingTimePickerService.ɵfac });\n/**\n * @nocollapse\n */\nAmazingTimePickerService.ctorParameters = () => [\n    { type: ComponentFactoryResolver, },\n    { type: ApplicationRef, },\n    { type: Injector, },\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmazingTimePickerService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }]; }, null); })();\n\nclass AtpDirective {\n    /**\n     * @param {?} viewContainerRef\n     * @param {?} atp\n     */\n    constructor(viewContainerRef, atp) {\n        this.viewContainerRef = viewContainerRef;\n        this.atp = atp;\n        this.myClick = new EventEmitter();\n        this.onChange = (x) => { };\n        this.elementRef = this.viewContainerRef.element;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onClick(e) {\n        const /** @type {?} */ ele = this.viewContainerRef.element.nativeElement;\n        const /** @type {?} */ time = ele.value;\n        const /** @type {?} */ theme = ele.getAttribute('theme');\n        const /** @type {?} */ start = ele.getAttribute('start');\n        const /** @type {?} */ end = ele.getAttribute('end');\n        const /** @type {?} */ locale = ele.getAttribute('locale') || 'en';\n        const /** @type {?} */ changeToMinutes = ele.getAttribute('changeToMinutes') === 'true';\n        const /** @type {?} */ animation = ele.getAttribute('animation');\n        const /** @type {?} */ preference = ele.getAttribute('preference') || null;\n        const /** @type {?} */ onlyHour = ele.getAttribute('onlyHour') === 'true';\n        const /** @type {?} */ onlyMinute = ele.getAttribute('onlyMinute') === 'true';\n        const /** @type {?} */ onlyAM = ele.getAttribute('onlyAM') === 'true';\n        const /** @type {?} */ onlyPM = ele.getAttribute('onlyPM') === 'true';\n        let /** @type {?} */ arrowStyle = ele.getAttribute('arrowStyle');\n        arrowStyle = (arrowStyle) ? JSON.parse(arrowStyle.replace(new RegExp('\\'', 'g'), '\"')) : '';\n        const /** @type {?} */ timePickerFunction = this.atp.open({\n            time,\n            theme,\n            rangeTime: { start, end },\n            'arrowStyle': arrowStyle,\n            locale,\n            changeToMinutes,\n            animation,\n            onlyHour,\n            onlyMinute,\n            onlyAM,\n            onlyPM,\n            preference\n        });\n        timePickerFunction.afterClose().subscribe(retTime => {\n            this.writeValue(retTime); // update the native element\n            this.onChange(retTime); // update the form value (if there's a form)\n        });\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onInput(e) {\n        this.onChange(e.srcElement.value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.elementRef) {\n            this.elementRef.nativeElement.value = value;\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { }\n}\nAtpDirective.ɵfac = function AtpDirective_Factory(t) { return new (t || AtpDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(AmazingTimePickerService)); };\nAtpDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AtpDirective, selectors: [[\"input\", \"atp-time-picker\", \"\"]], hostBindings: function AtpDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function AtpDirective_click_HostBindingHandler($event) { return ctx.onClick($event); })(\"input\", function AtpDirective_input_HostBindingHandler($event) { return ctx.onInput($event); });\n    } }, outputs: { myClick: \"myClick\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: AtpDirective,\n                multi: true\n            }])] });\n/**\n * @nocollapse\n */\nAtpDirective.ctorParameters = () => [\n    { type: ViewContainerRef, },\n    { type: AmazingTimePickerService, },\n];\nAtpDirective.propDecorators = {\n    'myClick': [{ type: Output },],\n    'onClick': [{ type: HostListener, args: ['click', ['$event'],] },],\n    'onInput': [{ type: HostListener, args: ['input', ['$event'],] },],\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AtpDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'input[atp-time-picker]',\n                providers: [{\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: AtpDirective,\n                        multi: true\n                    }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: AmazingTimePickerService }]; }, { myClick: [{\n            type: Output\n        }], onClick: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], onInput: [{\n            type: HostListener,\n            args: ['input', ['$event']]\n        }] }); })();\n\nclass AmazingTimePickerModule {\n}\nAmazingTimePickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AmazingTimePickerModule });\nAmazingTimePickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AmazingTimePickerModule_Factory(t) { return new (t || AmazingTimePickerModule)(); }, providers: [\n        AmazingTimePickerService,\n        AtpCoreService\n    ], imports: [[\n            CommonModule,\n        ]] });\n/**\n * @nocollapse\n */\nAmazingTimePickerModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AmazingTimePickerModule, { declarations: function () { return [TimePickerComponent,\n        AtpTimePickerComponent,\n        AtpDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TimePickerComponent,\n        AtpTimePickerComponent,\n        AtpDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmazingTimePickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                ],\n                declarations: [\n                    TimePickerComponent,\n                    AtpTimePickerComponent,\n                    AtpDirective\n                ],\n                providers: [\n                    AmazingTimePickerService,\n                    AtpCoreService\n                ],\n                entryComponents: [TimePickerComponent],\n                exports: [\n                    TimePickerComponent,\n                    AtpTimePickerComponent,\n                    AtpDirective\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AmazingTimePickerModule, AmazingTimePickerService, AtpCoreService as ɵb, AtpTimePickerComponent as ɵc, AtpDirective as ɵd, TimePickerComponent as ɵa };\n\n//# sourceMappingURL=amazing-time-picker.js.map\n"]}