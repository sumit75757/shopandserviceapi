{"version":3,"sources":["webpack:///src/app/demo/pages/services/service.component.ts","webpack:///src/app/demo/pages/services/service.component.html","webpack:///src/app/demo/pages/services/services-routing.module.ts","webpack:///src/app/demo/pages/services/services.module.ts"],"names":["ServiceComponent","toastr","fb","api","activeRoute","route","imgURL","imageURL","editorConfig","editable","spellcheck","height","minHeight","maxHeight","width","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","defaultFontName","defaultFontSize","fonts","name","customClasses","tag","toolbarPosition","toolbarHiddenButtons","states","sellerID","JSON","parse","localStorage","getItem","_id","getState","subscribe","res","sta","Object","keys","console","log","serviceForm","group","serviceName","required","serviceInfo","catogory","nearLandMark","area","city","state","pincode","discrption","startTime","closeTime","getservice","getcatogory","getServiceCategory","response","category","data","count","error","e","sub","target","value","forEach","element","catgory","subcategory","subcaetogorys","files","item","patchValue","updateId","id","fire","title","text","type","showCloseButton","showCancelButton","then","willDelete","dismiss","serviceDelete","success","serch","result","length","items","formdata","FormData","set","controls","index","append","Updatesrvice","addservice","reset","subcat","setState","imageHandel","addService","selector","templateUrl","styleUrls","routes","path","component","ServicesRoutingModule","forChild","imports","exports","ServicesModule","declarations"],"mappings":"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","file":"demo-pages-services-services-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from 'src/app/service/api/api.service';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../environments/environment.prod';\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.scss']\n})\nexport class ServiceComponent implements OnInit {\n  imgURL = environment.imageURL;\n  category: any;\n  serch: string;\n  items: any;\n  count: any;\n  sellerID: any;\n  serviceForm: FormGroup;\n  subcategory: any;\n  files: any[];\n  updateId: any;\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '600px  ',\n    minHeight: '0',\n    maxHeight: 'auto',\n    width: 'auto',\n    minWidth: '0',\n    translate: 'yes',\n    enableToolbar: true,\n    showToolbar: true,\n    placeholder: 'Enter text here...',\n    defaultParagraphSeparator: '',\n    defaultFontName: '',\n    defaultFontSize: '',\n    fonts: [\n      { class: 'arial', name: 'Arial' },\n      { class: 'times-new-roman', name: 'Times New Roman' },\n      { class: 'calibri', name: 'Calibri' },\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\n    ],\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n      [\n      ],\n      [\n        'fontSize',\n        'textColor',\n        'backgroundColor',\n        'customClasses',\n        'insertVideo',\n        'insertHorizontalRule',\n        'removeFormat',\n        'toggleEditorMode'\n      ]\n    ]\n\n  };\n  states: any[] = [];\n  city: any;\n  constructor(private toastr: ToastrService, private fb: FormBuilder, private api: ApiService, private activeRoute: ActivatedRoute, private route: Router) {\n    // let user = JSON.parse(localStorage.getItem('userData'))\n    // if (user.character == 'seller' && user) {\n    //   route.navigate(['seller/prodects/' + user._id])\n    // }\n  }\n  sta: any;\n  ngOnInit() {\n    this.sellerID = JSON.parse(localStorage.getItem('userData'))._id;\n    this.api.getState().subscribe((res: any) => {\n      // for (let index = 0; index < 34; index++) {\n      //   const element = array[index];\n\n      // }\n      this.sta = res;\n      this.states = Object.keys(res);\n      console.log(this.states);\n\n    });\n    this.serviceForm = this.fb.group({\n      // sellerId: new FormControl(\"\", [Validators.required]),\n      serviceName: new FormControl('', [Validators.required]),\n      serviceInfo: new FormControl('', [Validators.required]),\n      catogory: new FormControl('', [Validators.required]),\n      nearLandMark: new FormControl('', [Validators.required]),\n      area: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required]),\n      state: new FormControl('', [Validators.required]),\n      pincode: new FormControl('', [Validators.required]),\n      discrption: new FormControl('', [Validators.required]),\n      startTime: new FormControl('', [Validators.required]),\n      closeTime: new FormControl('', [Validators.required]),\n    });\n    this.getservice();\n    this.getcatogory();\n  }\n  reset() {\n\n  }\n  next() {\n\n  }\n  getcatogory() {\n    this.api.getServiceCategory().subscribe((res: any) => {\n      if (res.response == 'sucsess') {\n        console.log(res);\n        this.category = res.data;\n        console.log(this.category);\n      }\n      if (res.count == 0) {\n        this.toastr.error('Catogory Not Found!');\n\n      }\n    });\n\n  }\n  subcat(e) {\n    const sub = e.target.value;\n    this.category.forEach(element => {\n      if (element.catgory == sub) {\n        this.subcategory = element.subcaetogorys;\n      }\n    });\n  }\n  imageHandel(e) {\n    const files: any[] = e.target.files;\n    this.files = files;\n  }\n  edit(item) {\n    this.serviceForm.patchValue(item);\n    this.updateId = item._id;\n  }\n  deletee(id) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Once deleted, you will not be able to recover this imaginary file!',\n      type: 'warning',\n      showCloseButton: true,\n      showCancelButton: true\n    }).then((willDelete) => {\n      if (willDelete.dismiss) {\n        Swal.fire('', 'Somthing Wrong !', 'error');\n      } else {\n        this.api.serviceDelete(id).subscribe(res => {\n          this.toastr.success('Seller Deleted!');\n          this.getservice();\n        });\n      }\n    });\n  }\n  getservice() {\n    this.api.getservice().subscribe((res: any) => {\n      if (this.serch != '' && res.result.length == 0) {\n        this.toastr.error('Search result not found!');\n      }\n      if (res) {\n        this.items = res.result;\n        this.count = res.count;\n      }\n\n    });\n  }\n  setState(e) {\n    const state = e.target.value;\n\n    this.city = this.sta[state];\n    console.log(this.city);\n\n  }\n\n  addService() {\n    const formdata = new FormData();\n    formdata.set('serviceName', this.serviceForm.controls.serviceName.value);\n    formdata.set('serviceInfo', this.serviceForm.controls.serviceInfo.value);\n    formdata.set('sellerId', this.sellerID);\n    formdata.set('catogory', this.serviceForm.controls.catogory.value);\n    formdata.set('nearLandMark', this.serviceForm.controls.nearLandMark.value);\n    formdata.set('area', this.serviceForm.controls.area.value);\n    formdata.set('city', this.serviceForm.controls.city.value);\n    formdata.set('state', this.serviceForm.controls.state.value);\n    formdata.set('pincode', this.serviceForm.controls.pincode.value);\n    formdata.set('startTime', this.serviceForm.controls.startTime.value);\n    formdata.set('closeTime', this.serviceForm.controls.closeTime.value);\n    formdata.set('discrption', this.serviceForm.controls.discrption.value);\n    if (this.files) {\n      for (let index = 0; index < this.files.length; index++) {\n        const element = this.files[index];\n        formdata.append('serviceImage', element);\n      }\n    }\n    if (this.updateId) {\n      this.api.Updatesrvice(formdata, this.updateId).subscribe((res: any) => {\n        if (res) {\n          console.log(res);\n        }\n      });\n    } else {\n      this.api.addservice(formdata).subscribe((res: any) => {\n        if (res) {\n          console.log(res);\n        }\n      });\n    }\n\n  }\n\n}\n","<div class=\"row btn-page\">\n  <div class=\"col-sm-12\">\n    <app-card [hidHeader]=\"true\" cardClass=\"card-datatable\">\n      <!-- <div class=\"mb-3\">\n        <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': !this.serviceForm.controls['name'].valid&&\n                   this.serviceForm.controls['name'].touched}\" placeholder=\"Search...\" (input)=\"Search($event)\">\n      </div> -->\n      <div class=\"row align-items-center m-l-0\">\n        <div class=\"col-sm-6\"></div>\n        <div class=\"col-sm-6 text-right\">\n          <button class=\"btn btn-success btn-sm btn-round has-ripple\" (click)=\"modalProduct.show()\"><i\n              class=\"feather icon-plus\"></i> Add Product</button>\n        </div>\n        <app-ui-modal #modalProduct [dialogClass]=\"'modal-xl'\">\n          <div class=\"app-modal-header\">\n            <h5 class=\"modal-title\">Add Product</h5>\n            <button type=\"button\" class=\"close basic-close\" data-dismiss=\"modal\" aria-label=\"Close\"\n              (click)=\"modalProduct.hide();reset()\"><span aria-hidden=\"true\">&times;</span></button>\n          </div>\n          <div class=\"app-modal-body\">\n            <form [formGroup]=\"serviceForm\">\n              <div class=\"row\">\n\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\"\n                      [ngClass]=\"{'is-invalid': !this.serviceForm.controls['serviceName'].valid&&\n                   this.serviceForm.controls['serviceName'].touched}\" formControlName=\"serviceName\" placeholder=\"Service\n                   name\">\n                  </div>\n                </div>\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <select class=\"form-control\"\n                      [ngClass]=\"{'is-invalid': !this.serviceForm.controls['catogory'].valid&&\n                   this.serviceForm.controls['catogory'].touched}\" formControlName=\"catogory\" (change)=\"subcat($event)\"\n                   id=\"Category\">\n                      <option value=\"\" selected>Select Category</option>\n                      <option *ngFor=\"let cat of category\" value=\"{{cat.name}}\">{{cat.name}}</option>\n                    </select>\n                  </div>\n                </div>\n                <div class=\"col-sm-12\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\"\n                      [ngClass]=\"{'is-invalid': !this.serviceForm.controls['serviceInfo'].valid&&\n                   this.serviceForm.controls['serviceInfo'].touched}\" formControlName=\"serviceInfo\"\n                      placeholder=\"Small Discrption\">\n                  </div>\n                </div>\n                <!-- <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <select class=\"form-control\" [ngClass]=\"{'is-invalid': !this.serviceForm.controls['name'].valid&&\n                   this.serviceForm.controls['name'].touched}\" formControlName=\"subCatogory\" id=\"Category\">\n                      <option value=\"\">Select Category</option>\n                      <option *ngFor=\"let subcat of subcategory\" value=\"{{subcat.catgory}}\">{{subcat.catgory}}</option>\n                    </select>\n                  </div>\n                </div> -->\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\"\n                      [ngClass]=\"{'is-invalid': !this.serviceForm.controls['nearLandMark'].valid&&\n                   this.serviceForm.controls['nearLandMark'].touched}\" formControlName=\"nearLandMark\" id=\"nearLandMark\"\n                      placeholder=\"Near Land Mark\">\n                  </div>\n                </div>\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\"\n                      [ngClass]=\"{'is-invalid': !this.serviceForm.controls['area'].valid&&\n                   this.serviceForm.controls['area'].touched}\" formControlName=\"area\" id=\"area\" placeholder=\"area\">\n                  </div>\n                </div>\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <select class=\"form-control\" [ngClass]=\"{'is-invalid': !this.serviceForm.controls['state'].valid&&\n                   this.serviceForm.controls['state'].touched}\" formControlName=\"state\" (change)=\"setState($event)\"\n                   id=\"state\">\n                      <option value=\"\" selected>Select state</option>\n                      <option *ngFor=\"let cat of states\" value=\"{{cat}}\">{{cat}}</option>\n                    </select>\n                  </div>\n                </div>\n                <div class=\"col-sm-6\">\n                   <div class=\"form-group\">\n                     <select class=\"form-control\" [ngClass]=\"{'is-invalid': !this.serviceForm.controls['city'].valid}\" formControlName=\"city\" id=\"city\">\n                       <option value=\"\" selected >Select city</option>\n                       <option *ngFor=\"let cat of city\" value=\"{{cat}}\">{{cat}}</option>\n                     </select>\n                   </div>\n                </div>\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <input type=\"num\" class=\"form-control\"\n                      [ngClass]=\"{'is-invalid': !this.serviceForm.controls['pincode'].valid&&\n                   this.serviceForm.controls['pincode'].touched}\" formControlName=\"pincode\" id=\"pincode\"\n                   placeholder=\"pincode\">\n                  </div>\n                </div>\n\n                <!-- <div class=\"col-sm-6\">\n                  <div class=\"custom-control custom-switch\">\n                    <input type=\"checkbox\" formControlName=\"inStock\" class=\"custom-control-input\" id=\"customSwitch4\"\n                      checked=\"\">\n                    <label class=\"custom-control-label\" for=\"customSwitch4\">inStock</label>\n                  </div>\n                </div> -->\n              </div>\n              <div class=\"row\">\n\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <label for=\"date\">Open Time</label>\n                    <input type=\"time\" id=\"date\" class=\"form-control\"\n                      [ngClass]=\"{'is-invalid': !this.serviceForm.controls['startTime'].valid&&\n                   this.serviceForm.controls['startTime'].touched}\" formControlName=\"startTime\" id=\"availabelTime\"\n                    placeholder=\"Availabel Time\" style=\"z-index: 10000000000000 !important;\" atp-time-picker>\n                  </div>\n                </div>\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <label for=\"date\">Close Time</label>\n                    <input type=\"time\" id=\"date\" class=\"form-control\"\n                      [ngClass]=\"{'is-invalid': !this.serviceForm.controls['closeTime'].valid&&\n                   this.serviceForm.controls['closeTime'].touched}\" formControlName=\"closeTime\" id=\"availabelTime\"\n                    placeholder=\"Availabel Time\" style=\"z-index: 10000000000000 !important;\" atp-time-picker>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group fill\">\n                  <input type=\"file\" class=\"form-control\"  id=\"Icon\" (change)=\"imageHandel($event)\" multiple\n                    placeholder=\"Profile Image\">\n                </div>\n              </div>\n              <div>\n                <angular-editor placeholder=\"Enter text here...\" formControlName=\"discrption\" [config]=\"editorConfig\">\n                </angular-editor>\n              </div>\n            </form>\n          </div>\n          <div class=\"app-modal-footer\">\n            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"\n              (click)=\"modalProduct.hide(); reset()\">Clear</button>\n            <button type=\"button\" class=\"btn btn-primary\"\n              (click)=\"addService()\">{{updateId ? 'Update' : 'Submit'}}</button>\n          </div>\n        </app-ui-modal>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-3 col-md-4\" *ngFor=\"let item of items\">\n          <app-card [customHeader]=\"true\" headerClass=\"border-0 p-2 pb-0\" [options]=\"false\"\n            cardClass=\"user-card user-card-1\" blockClass=\"pt-0 users-contact\">\n            <div class=\"app-card-header\">\n              <div class=\"cover-img-block\">\n                <img\n                  src=\"{{imgURL + item.serviceImage[0]}}\"\n                  alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n            <div class=\"user-about-block text-center\">\n              <div class=\"row align-items-end\">\n                <div class=\"col text-left pb-3\"><a href=\"javascript:\" ><i\n                      class=\"icon feather icon-star text-c-yellow f-20\"></i></a></div>\n                <div class=\"col\" >\n                  <div class=\"position-relative d-inline-block\">\n                    <img class=\"img-radiuse img-fluid wid-80\" src=\"{{imgURL + item.seller.userImage}}\"  alt=\"User-Profile-Image\">\n                  </div>\n                </div>\n                <div class=\"col text-right pb-3\">\n                  <div class=\"dropdown\" ngbDropdown>\n                    <a class=\"drp-icon dropdown-toggle text-secondary\" ngbDropdownToggle data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"><i class=\"feather icon-more-horizontal\"></i></a>\n                    <div class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n                      <a class=\"dropdown-item\" (click)=\"edit(item);modalProduct.show()\" >Update</a>\n                      <a class=\"dropdown-item\" (click)=\"deletee(item._id)\">Delete</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"text-center\">\n              <h6 class=\"mb-1 mt-3\">{{item.seller.username}}</h6>\n              <p class=\"mb-3 text-muted\">{{item.serviceName}}</p>\n              <p class=\"mb-1\">{{item.serviceInfo}}</p>\n            </div>\n            <hr class=\"wid-80 b-wid-3 my-4\">\n            <div class=\"row text-center\">\n              <div class=\"col\">\n                <h6 class=\"mb-1\">{{item.startTime}}</h6>\n                <pre class=\"mb-0\">Start Time</pre>\n              </div>\n              <div class=\"col\">\n                <!-- <h6 class=\"mb-1\">2749</h6> -->\n                <p class=\"mb-0\">To</p>\n              </div>\n              <div class=\"col\">\n                <h6 class=\"mb-1\">{{item.closeTime}}</h6>\n                <pre class=\"mb-0\">Close Time</pre>\n              </div>\n              <div class=\"col\">\n                <h6 class=\"mb-1\">678</h6>\n                <p class=\"mb-0\">Following</p>\n              </div>\n            </div>\n          </app-card>\n        </div>\n\n      </div>\n    </app-card>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ServiceComponent } from './service.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component:ServiceComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServicesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport { CommonModule } from '@angular/common';\n\nimport { ServicesRoutingModule } from './services-routing.module';\nimport { ServiceComponent } from './service.component'\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\n\n@NgModule({\n  declarations: [ServiceComponent],\n  imports: [\n    CommonModule,\n    ServicesRoutingModule,\n    SharedModule,\n    AngularEditorModule,\n    NgbDropdownModule,\n    NgbDatepickerModule,\n    AmazingTimePickerModule\n  ]\n})\nexport class ServicesModule { }\n"]}